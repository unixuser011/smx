#!/usr/bin/env bash
# SMX - System Management eXecutive (for UNIX/Linux)
# copyright (c) 2010-2016, Darius Anderson
# All Rights reserved
#
# SMX - System Management eXecutive (for UNIX/Linux)
# Copyright (C) 2010-2016 Darius Anderson
#
# This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public Licence as published by the Free
# Software Foundation; either version 2 of the Licence, or (at your option) any later version
#
# This program is distrobuted in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABLILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public Licence for more details.
#
# You should have received a copy of the GNU General Public Licence along with this program; if not, write to the Free Software Foundation, inc., 59
# Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# This program was written on CentOS 6.6 X86_64, however it is fully compatable with Debian-based Linux, and SuSE-based linux with no modifications
# This version (v13) has support for systemd (ugh!) so it will be fully compatable with 7x versions of RHEL/CentOS/Fedora, Debian/Ubuntu and SuSE
# It will however may require modifications for Solaris/HP-UX/AIX or any other "Pure" UNIX
# The only "Pure" UNIX it is compatable with is OS X
#
# Contains ideas while working with Cisco IOS command-style like (command-prompt style - (sys-config)#)
#
# GNU, gnu, and Gnu is a copyrighted product (c) 1984-2015 The Free Software Foundation - all rights reserved
# AIX, POWER, powerPC, z/Architecture, S/390 and RISC are copyrighted products (c) 1980-2015 International Buisness Machine Corporation (IBM) - all rights reserved
# HP-UX and PA-RISC are copyrighted products (c) 1984-2015 HP - all rights reserved
# UNIX, unix and Unix is a copyrighted product (c) 1990-2015 The Open Group - all rights reserved
# Solaris is a copyrighted product (c) Sun Microsystems 1991-2005 and copyright (c) Oracle Corporation 2005-2015 - all rights reserved
# AI-64 (Itanium) is a copyrighted product (c) 1986-1996 Intel Corporation - all rights reserved
# Cisco IOS is a copyrighted product (c) 1987-2015 Cisco Systems Inc- all rights reserved
# OS X and Mac OS X are copyrighted products (c) 1999-2015 Apple Corporation - all rights reserved
##

# Changes done for this version
##

# Changed command success/fail screen, much smaller, displays only log file outputs
# Changed help to only display help specific to that sub-menu
# Added DNS support to server management (BIND 9x)
# Added date/timestamp for log file
# Changed OS detection script, changed for distro-specific instructions/packages (ie, rhel v7 uses samba-client, rhel v6 doesn't)
# Added full intergration for Microsoft Active Directory
# Added full support BSD
# Combined Linux, OS X and BSD into one with OS detection script
##

# Usage for flags - START
##

# Changed the way that options are displayed, much better than the old way, I think
##

function usage() {
echo "Usage: $(basename $0) --[option]
Option:
[  --main-menu ] > Interactive, start program from main menu	       
[ --usrmgt ] > Start program from user management
[ --grpmgt ] > Start program from group management
[ --passmgt ] > Start program from password management
[ --dskmgt ] > Start program from disk management
[ --sysmgt ] > Start program from system management
[ --srvmgt ] > Start program from server management
[ --apache ] > Start program from apache server management	       
[ --nfs ] > Start program from NFS server management		   
[ --nis ] > Start program from NIS server management			   
[ --dhcp ] > Start program from DHCP server management
[ --sql ] > Start program from SQL server management			   
[ --smb ] > Start program from SMB server management			   
[ --ssh ] > Start program from SSH server management			   
[ --vnc ] > Start program from VNC server management
[ --snmp ] > Start program from SNMP server management
[ --dns ] > Start program from DNS server management
[ --ms-ad ] > Start program from MS Active Directory server management	       
[ --pkgmgt ] > Start program from software management	       
[ --system-update ] > Start program from system update	       
[ --ipmgt ] > Start program from IP management	       
[ --firemgt ] > Start program from firewall management	       
[ --feedback ] > Send feedback or bugfixes to creator"
}

if [ $# -eq 0 ]; then
     clear
     usage
     echo
     exit 1   
fi

# Usage for flags - END
##

# Declare for spin for processing - START
##

# Can be changed for something else if you don't like a spinning cursor, just make sure to update the function name
##

declare -a spinner
Spinner=(/ - \\ \| / - \\ \| )
Spinnerpos=0

function update_spinner() {
        printf "\b"${Spinner[$Spinnerpos]}
        (( Spinnerpos=(Spinnerpos +1) %8))
}

# Declare for spin for processing - END
##

# Banner display - START
##

clear
echo " ######  ##     ## ##     ## "
echo "##    ## ###   ###  ##   ##  "
echo "##       #### ####   ## ##   "
echo " ######  ## ### ##    ###    "
echo "      ## ##     ##   ## ##   "
echo "##    ## ##     ##  ##   ##  "
echo " ######  ##     ## ##     ## "
echo
echo "System Management eXecutive (for UNIX/Linux) Version 16.0 (Codename: Project SPARTAN (Codename for a classified ONI research project into super-solders))"
echo "Copyright (c) 2010 - 2016 Darius Anderson, d.anderson1147@gmail.com"
echo
echo "Log files located in: /var/log/smx-log/success.log /var/log/smx-log/fail.log and /var/log/smx-log/exit.log"
echo "Program log files located in: /var/log/smx-log/<program>.log"
echo
echo "Checking privlage level, please wait..."
sleep 2
if [ $(id -g $(whoami)) != "0" ]; then
     clear
     echo "WARNING!! WARNING!! WARNING!!"
     echo "#######################################################"
     echo "!!ACCESS DENIED!!"
     echo "ACCESS TO NON-ROOT USERS IS FORBIDDEN"
     echo "ACCESS IS PERMITTED TO ROOT ONLY!!"
     echo "THIS WILL BE REPORTED!!"
     echo "#######################################################"
     echo "WARNING!! WARNING!! WARNING!!"
     echo ""
     echo "DATE=$(date), CMD=$(basename $0), USER=$(whoami), UID=$(id -u), GID=$(id -g)
     User: $(whoami) attempted to access SMX at: $(date) - this operation is not permitted" | mail -s "access violation - SMX" root@localhost
     exit 1
else
     echo "User: $(whoami) Successfuly authenticated"
fi     

echo "Checking log file location, please wait..."
sleep 2
$(which find) '/var/log/smx-log/' >> /dev/null
if [ $? -eq 0 ]; then
     echo "Log file location found"
else
     $(which mkdir) -p /var/log/smx-log/
     echo "Log file at: /var/log/smx-log/ successfuly created"
fi

clear
echo "Entering interactive mode... (Enter 'help' for commands)"
sleep 2

stty erase ^h
#stty erase ^?

# Banner display - END
##

export TERM=xterm                            # Could use vt100, but doesn't look right on emulators

export EDITOR=vim		             # For use with visudo, etc, can be changed to nano or emacs


function main_menu() {
    while :
    do
        clear
        echo
        echo "$(date)                                      $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/main_menu # " choice_main
        echo

        case "$choice_main" in
            usrmgt)
                     clear
                     echo "##############################################" >> /var/log/smx-log/success.log
                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                     echo "[$(date)] Entering usr_menu" >> /var/log/smx-log/success.log
                     echo "[$(date)] Command run: $(basename $0)/usr_menu" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     echo "##############################################" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     usr_menu
                     ;;
            diskmgt)
                      clear
                      echo "##############################################" >> /var/log/smx-log/success.log
                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                      echo "[$(date)] Entering dsk_menu" >> /var/log/smx-log/success.log
                      echo "[$(date)] Command run: $(basename $0)/dsk_menu" >> /var/log/smx-log/success.log
                      echo "" >> /var/log/smx-log/success.log
                      echo "##############################################" >> /var/log/smx-log/success.log
                      echo "" >> /var/log/smx-log/success.log
                      dsk_menu
                      ;;
            sysmgt)
                     clear
                     echo "##############################################" >> /var/log/smx-log/success.log
                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                     echo "[$(date)] Entering sys_menu" >> /var/log/smx-log/success.log
                     echo "[$(date)] Command run: $(basename $0)/sys_menu" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     echo "##############################################" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     sys_menu
                     ;;
	    srvmgt)
                     clear
                     echo "##############################################" >> /var/log/smx-log/success.log
                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                     echo "[$(date)] Entering srv_menu" >> /var/log/smx-log/success.log
                     echo "[$(date)] Command run: $(basename $0)/srv_menu" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     echo "##############################################" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     srv_menu
                     ;;
            rmlog)
                    clear
                    echo "          COMMAND STATUS                  "
                    echo
                    echo "$(date)                                    $(whoami)@$(hostname)"
                    echo
                    echo "Command: RUNNING    stdout: yes    stderr: no    "
                    echo
                    echo "Before command completion, additional instructions may appear below"
                    echo
                    echo "Type                                 Fileset                 Type"
                    echo "-----------------------------------------------------------------"
                    echo "$(which rm)                          bos.sysmgt.rm           exec"
                    echo "[$(date)] Command run: $(which rm) /var/log/smx-log/*"
                    sleep 2
                    $(which rm) -rf /var/log/smx-log/*
                    if [ $? -eq 0 ]; then
                         clear
                         read -p "Press [enter] to continue..." ReadDamKey
                         echo "        COMMAND STATUS          "
                         echo
                         echo "$(date)                                    $(whoami)@$(hostname)"
                         echo
                         echo "Command: OK    stdout: yes    stderr: no         "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "Type                                 Fileset                 Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which rm)                          bos.sysmgt.rm           exec"
                         echo "Command run: $(which rm) /var/log/smx-log/*"
                         read -p "Press [enter] to continue..." ReadDamKey
                    else
                         clear
                         read -p "Press [enter] to continue..." ReadDamKey
                         echo "        COMMAND STATUS          "
                         echo
                         echo "$(date)                                    $(whoami)@$(hostname)"
                         echo
                         echo "Command: FAIL    stdout: yes    stderr: no       "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "Type                                 Fileset                 Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which rm)                          bos.sysmgt.rm           exec"
                         read -p "Press [enter] to continue..." ReadDamKey
                    fi
                    ;;
	    catlog)
		     clear
                     echo "         COMMAND STATUS            "
                     echo
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING    stdout: yes    stderr: no    "
                     echo
                     echo "Before command completion, additional instructions may appear below"
               	     echo
              	     echo "Type                                 Fileset                  Type"
              	     echo "------------------------------------------------------------------"
                     echo "$(which cat)                         bos.sysmgt.cat           exec"
                     echo "Command run: $(which cat) /var/log/smx-log/success.log | more"
              	     echo "Command run: $(which cat) /var/log/smx-log/fail.log | more"
              	     sleep 2
              	     $(which cat) /var/log/smx-log/success.log | more
              	     read -p "Press [enter] to continue..." ReadDamKey
              	     $(which cat) /var/log/smx-log/fail.log | more
              	     read -p "Press [enter] to continue..." ReadDamKey
              	     clear
              	     echo "         COMMAND STATUS            "
              	     echo
              	     echo "$(date)                                     $(whoami)@$(hostname)"
              	     echo
              	     echo "Command: OK    stdout: yes    stderr: no         "
              	     echo
              	     echo "Before command completion, additional instructions may appear below"
              	     echo
              	     echo "Type                                 Fileset                 Type"
              	     echo "-----------------------------------------------------------------"
              	     echo "$(which cat)                         bos.sysmgt.cat          exec"
              	     echo "Command run: $(which cat) /var/log/smx-log/success.log | more"
              	     echo "Command run: $(which cat) /var/log/smx-log/fail.log | more"
              	     read -p "Press [enter] to continue..." ReadDamKey;;
            help)
                   echo "usrmgt > User Account Management"  
                   echo "dskmgt > Disk Management"
                   echo "sysmgt > System Management"
                   echo "srvmgt > Server Management"
                   echo "rmlog > Remove log files"
                   echo "catlog > View log files"
                   echo "help > This menu"
                   echo "exit > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey;;  
            exit)
                   clear
                   echo "##############################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly ended session at $(date)" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "##############################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   exit 0
                   ;;
            *)    clear
                  echo "        COMMAND STATUS       "
                  echo
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo
                  echo "Command: FAIL    stdout: yes     stderr: no       "
                  echo
                  echo "Before command completion, additional instructions may appear below"
                  echo
                  echo "Command unknown, please consult the command list, executed with pid - 3156 (0x1)"
                  read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function usr_menu() {
    while :
    do
       clear
       echo "$(date)                                     $(whoami)@$(hostname)"
       echo
       read -p "$(whoami)@$(hostname):smx/usr_menu # " choice_usr
       echo

       case "$choice_usr" in
           addusr)
                    clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "[TOP]                                             [Entry Fields]"
                         printf " Enter username [guest] ------------------------ > "
                         if [ "$userName" = "" ]; then
                               USER_NAME=""
                               read userName
                               USER_NAME=$userName
                         fi
                         if [ "$userName" = "" ]; then
                               USER_NAME=""
                               USER_NAME=guest
                         fi
                         printf " Enter user shell [$(which bash)] -------------- > "
                         if [ "$userShell" = "" ]; then
                               USER_SHELL=""
                               read userShell
                               USER_SHELL=$userShell
                         fi
                         if [ "$userShell" = "" ]; then
                               USER_SHELL=""
                               USER_SHELL=$(which bash)
                         fi      
                         printf " Enter user home [/home/$USER_NAME] ------------ > "
                         if [ "$userHome" = "" ]; then
                               USER_HOME=""
                               read userHome
                               USER_HOME=$userHome
                         fi
                         if [ "$userHome" = "" ]; then
                               USER_HOME=""
                               USER_HOME=/home/$USER_NAME
                         fi      
                         printf " Enter user group [users] ---------------------- > "
                         if [ "$userGroup" = "" ]; then
                               USER_GROUP=""
                               read userGroup
                               USER_GROUP=$userGroup
                         fi
                         if [ "$userGroup" = "" ]; then
                               USER_GROUP=""
                               USER_GROUP=users
                         fi      
                         printf " Enter user real name [Guest] ------------------ > "
                         if [ "$realName" = "" ]; then
                               REAL_NAME=""
                               read realName
                               REAL_NAME=$realName
                         fi
                         if [ "$realName" = "" ]; then
                               REAL_NAME=""
                               REAL_NAME=Guest
                         fi      
                         printf " Enter skel directory [/etc/skel] -------------- > "
                         if [ "$skelDir" = "" ]; then
                               SKEL_DIR=""
                               read skelDir
                               SKEL_DIR=$skelDir
                         fi
                         if [ "$skelDir" = "" ]; then
                               SKEL_DIR=""
                               SKEL_DIR=/etc/skel
                         fi      
                         printf " Enter user ID [1000] -------------------------- > "
                         if [ "$userIdent" = "" ]; then
                               USER_IDENT=""
                               read userIdent
                               USER_IDENT=$userIdent
                         fi
                         if [ "$userIdent" = "" ]; then
                               USER_IDENT=""
                               USER_IDENT=1000
                         fi
                         read -p " Set expire date ---------------- (True/False) > " ans2
                         read -p " User to send mail -------------- (True/False) > " ans3
                         clear
                         echo "         COMMAND STATUS                  "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                 Fileset                 Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which useradd)                     bos.usrmgt.useradd      exec"
                         echo "$(which passwd)                      bos.usrmgt.passwd       exec"
                         echo "$(which gpasswd)                     bos.grpmgt.gpasswd      exec"
                         echo "Command run: $(which useradd) -N -o -u $USER_IDENT -d $USER_HOME -k $SKEL_DIR -m -s $USER_SHELL -c $REAL_NAME $USER_NAME"
                         echo "Command run: $(which passwd) $USER_NAME"
                         echo "Command run: $(which gpasswd) -a $USER_NAME $USER_GROUP"
                         sleep 2
                         printf "Processing :  "
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo
                         echo "Adding User: $USER_NAME"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Setting UID to: $USER_IDENT"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Creating User home directory to: $USER_HOME"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Setting User shell to: $USER_SHELL"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Setting Real name to: $REAL_NAME"
                         sleep 1
                         update_spinner
                         $(which useradd) -N -o -u $USER_IDENT -d $USER_HOME -k $SKEL_DIR -m -s $USER_SHELL -c "$REAL_NAME" $USER_NAME
                         if [ $? -eq 0 ]; then
                              echo "##################################################################################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly created user: $USER_NAME" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which useradd) -N -o -u $USER_IDENT -d $USER_HOME -l $SKEL_DIR -m -s $USER_SHELL -c $REAL_NAME $USER_NAME" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "##################################################################################################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting password for user: $USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              $(which passwd) $USER_NAME
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "####################################################################################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Not created user: $USER_NAME, check command syntax" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which useradd) -N -o -u $USER_IDENT -d $USER_HOME -k $SKEL_DIR -m -s $USER_SHELL -c '$REAL_NAME' $USER_NAME" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "####################################################################################################################################" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                              exit 1
                         fi
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Adding user: $USER_NAME to group: $USER_GROUP"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         $(which gpasswd) -a $USER_NAME $USER_GROUP
                         if [ $? -eq 0 ]; then
                              echo "##################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly added user: $USER_NAME to group: $USER_GROUP" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which gpasswd) -a $USER_NAME $USER_GROUP" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "##################################################################" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "#########################################################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Not added user: $USER_NAME to group: $USER_GROUP" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which gpasswd) -a $USER_NAME $USER_GROUP" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "#########################################################################################" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                              exit 1
                         fi
                         if [ "$ans2" = "True" ]; then
                               clear
                               echo "Expire date prefix: dd/mm/yyyy"
                               echo "[TOP]                       [Entry Fields]"
                               read -p " Enter expire date ------- > " expDate
                               clear
                               echo "             COMMAND STATUS            "
                               echo
                               echo "$(date)                                   $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes   stderr: no    "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                Type"
                               echo "----------------------------------------------------------------"
                               echo "$(which usermod)                    bos.usrmgt.usermod      exec"
                               echo "Command run: $(which usermod) -e $expDate $USER_NAME"
                               sleep 2
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting expire date of user: $USER_NAME to: $expDate"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which usermod) -e $expDate $USER_NAME
                               if [ $? -eq 0 ]; then
                                    echo "##############################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] User: $userName set expire date: $expDate" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which usermod) -e $expDate $USER_NAME" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##############################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] User: $USER_NAME expire date not set, check syntax of command" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which usermod) -e $expDate $USER_NAME" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    exit 1
                               fi
                         else
                               echo "User will not have expire date"
                               read -p "Press [enter] to continue..." ReadDamKey
                         fi
                         if [ "$ans3" = "True" ]; then
                               clear
                               echo "          COMMAND STATUS              "
                               echo
                               echo "$(date)                                 $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes     stderr: no "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                Type"
                               echo "----------------------------------------------------------------"
                               echo "$(which touch)                       bos.sysmgt.touch         exec"
                               echo "$(which chown)                       bos.sysmgt.chown         exec"
                               sleep 2
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Creating user: $USER_NAME mailbox at: /var/mail/$USER_NAME"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting ownership of user: $USER_NAME mailbox to: $USER_NAME:$USER_GROUP"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Creating user: $USER_NAME mailbox at: /var/spool/mail/$USER_NAME"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting ownership of user: $USER_NAME mailbox to $USER_NAME:$USER_GROUP"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Creating user: $USER_NAME mailbox at: $USER_HOME/mbox"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting ownership of user: $USER_NAME mailbox to $USER_NAME:$USER_GROUP"
                               $(which touch) /var/mail/$USER_NAME
                               $(which chown) $USER_NAME:$USER_GROUP /var/mail/$USER_GROUP
                               $(which touch) /var/spool/mail/$USER_NAME
                               $(which chown) $USER_NAME:$USER_GROUP /var/spool/mail/$USER_NAME
                               $(which touch) $USER_HOME/mbox
                               $(which chown) $USER_NAME:$USER_GROUP $USER_HOME/mbox
                               echo "#######################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Created /var/mail/$USER_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Changed ownership on /var/mail/$USER_NAME: $USER_NAME:$USER_GROUP" >> /var/log/smx-log/success.log
                               echo "[$(date)] Created /var/spool/mail/$USER_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Changed ownership on /var/spool/mail/$USER_NAME: $USER_NAME:$USER_GROUP" >> /var/log/smx-log/success.log
                               echo "[$(date)] Created $USER_HOME/mbox" >> /var/log/smx-log/success.log
                               echo "[$(date)] Changed ownership on $USER_HOME/mbox: $userName:$userGroup" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which touch) /var/mail/$USER_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which chown) $USER_NAME:$USER_GROUP /var/mail/$USER_HOME" >>  /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which touch) /var/spool/mail/$USER_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which chown) $USER_NAME:$USER_GROUP /var/spool/mail/$USER_HOME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which touch) $USER_HOME/mbox" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which chown) $USER_NAME:$USER_GROUP $USER_HOME/mbox" >> /var/log/smx-log/success.log
                               echo "#######################################################################################" >> /var/log/smx-log/success.log
                               echo "" >>  /var/log/smx-log/success.log
                         else
                               echo "User will not be able to send mail"
                               read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    else
                         $(which uname) | grep Darwin >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Darwin (OS X)"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "Note: User GID example (GID: 20)"
                              echo "Note: User group name must be same as GID"
                              echo "[TOP]                                       [Entry Fields]"
                              printf " Enter username [guest] ------------------ > "
                              if [ "$userName" = "" ]; then
                                    USER_NAME=""
                                    read userName
                                    USER_NAME=$userName
                              fi
                              if [ "$userName" = "" ]; then
                                    USER_NAME=""
                                    USER_NAME=guest
                              fi       
                              printf " Enter user shell [$(which bash)] -------- > "
                              if [ "$userShell" = "" ]; then
                                    USER_SHELL=""
                                    read userShell
                                    USER_SHELL=$userShell
                              fi
                              if [ "$userShell" = "" ]; then
                                    USER_SHELL=""
                                    USER_SHELL=$(which bash)
                              fi       
                              printf " Enter user ID [1000] -------------------- > "
                              if [ "$userIdent" = "" ]; then
                                    USER_IDENT=""
                                    read userIdent
                                    USER_IDENT=$userIdent
                              fi
                              if [ "$userIdent" = "" ]; then
                                    USER_IDENT=""
                                    USER_IDENT=1000
                              fi
                              printf " Enter user group ID [80] ---------------- > "
                              if [ "$userGid" = "" ]; then
                                    USER_GID=""
                                    read userGid
                                    USER_GID=$userGid
                              fi
                              if [ "$userGid" = "" ]; then
                                    USER_GID=""
                                    USER_GID=80
                              fi
                              printf " Enter user group name [staff] ----------- > "
                              if [ "$userGroup" = "" ]; then
                                    USER_GROUP=""
                                    read userGroup
                                    USER_GROUP=$userGroup
                              fi
                              if [ "$userGroup" = "" ]; then
                                    USER_GROUP=""
                                    USER_GROUP=staff
                              fi                              
                              printf " Enter real name [Guest] ----------------- > "
                              if [ "$realName" = "" ]; then
                                    REAL_NAME=""
                                    read realName
                                    REAL_NAME=$realName
                              fi
                              if [ "$realName" = "" ]; then
                                    REAL_NAME=""
                                    REAL_NAME=Guest
                              fi       
                              read -p " User to send mail ---------- True / False > " ans_mail
                              clear
                              echo "       COMMAND STATUS        "
                              echo
                              echo "$(date)                                   $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no   "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which dscl)                        bos.usrmgt.dscl         exec"
                              echo "$(which chsh)                        bos.usrmgt.chsh         exec"
                              echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                              echo "$(which cp)                          bos.sysmgt.cp           exec"
                              echo "$(which rm)                          bos.sysmgt.rm           exec"
                              echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                              echo "$(which chown)                       bos.sysmgt.chown        exec"
                              echo "$(which passwd)                      bos.usrmgt.passwd       exec"
                              echo "Command run: $(which dscl) . -create /Users/$USER_NAME"
                              echo "Command run: $(which chsh) -s $USER_SHELL $USER_NAME"
                              echo "Command run: $(which dscl) . -create /Users/$USER_NAME RealName "$REAL_NAME""
                              echo "Command run: $(which dscl) . -create /Users/$USER_NAME UniqueID $USER_IDENT"
                              echo "Command run: $(which dscl) . -create /Users/$USER_NAME PrimaryGroupID $USER_GID"
                              echo "Command run: $(which dscl) . -create /Users/$USER_NAME NFSHomeDirectory /Users/$USER_NAME"
                              echo "Command run: $(which mkdir) -p /Users/$USER_NAME"
                              echo "Command run: $(which cp) -R /System/Library/User\ Template/English.lproj/* /Users/$USER_NAME"
                              echo "Command run: $(which cp) -R /System/Library/User\ Template/Non_localized/* /Users/$USER_NAME"
                              echo "Command run: $(which cp) /System/Library/User\ Template/English.lproj/.* /Users/$USER_NAME"
                              echo "Command run: $(which rm) -rf /Users/$USER_NAME/*.lproj"
                              echo "Command run: $(which rm) -rf /Users/$USER_NAME/Non_localized/"
                              echo "Command run: $(which chown) -R $USER_NAME:admin /Users/$USER_NAME/*"
                              echo "Command run: $(which chmod) -R a+rwx /Users/$userName/*"
                              echo "Command run: $(which passwd) $USER_NAME"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Creating new user: $USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Users/$USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting user: $USER_NAME shell to: $USER_SHELL"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which chsh) -s $USER_SHELL $USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting user: $USER_NAME real name to: $REAL_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Users/$USER_NAME RealName "$REAL_NAME"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting user: $USER_NAME UID to: $USER_IDENT"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Users/$USER_NAME UniqueID $USER_IDENT
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting user: $USER_NAME GID to: $USER_GID"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Users/$USER_NAME PrimaryGroupID $USER_GID
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Defining user: $USER_NAME home directory to: /Users/$USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Users/$USER_NAME NFSHomeDirectory /Users/$USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Creating user: $USER_NAME home directory"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which mkdir) -p /Users/$USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Copying template files from: /System/Library/User\ Template/ English.lproj/* to: /Users/$USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which cp) -R /System/Library/User\ Template/English.lproj/* /Users/$USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Copying non localized files from /System/Library/User\ Template/Non_localized/* to: /Users/$USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which cp) -R /System/Library/User\ Template/Non_localized/* /Users/$USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Copying all config files from: /System/Library/User\ Template/English.lproj/.* to: /Users/$USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which cp) /System/Library/User\ Template/English.lproj/.* /Users/$USER_NAME
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Deleting all .lproj files"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which rm) -rf /Users/$USER_NAME/*.lproj
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Deleting file: /Users/$USER_NAME/Non_localized/"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which rm) -rf /Users/$USER_NAME/Non_localized/
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing ownership of file /users/$USER_NAME to: $USER_NAME:$USER_GROUP"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which chown) -R $USER_NAME:$USER_GROUP /Users/$USER_NAME/
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing executuction of file: /Users/$USER_NAME to a+rwx"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which chmod) -R a+rwx /Users/$USER_NAME/
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing password of user: $USER_NAME"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which passwd) $USER_NAME
                              echo "######################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] User: $USER_NAME [$(date)] Successfuly added to system" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which dscl) . -create /Users/$USER_NAME" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "######################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              $(which uname) | grep BSD >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = BSD"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo "[TOP]                                             [Entry Fields]"
                                   printf " Enter username [guest] ------------------------ > "
                                   if [ "$userName" = "" ]; then
                                         USER_NAME=""
                                         read userName
                                         USER_NAME=$userName
                                   fi
                                   if [ "$userName" = "" ]; then
                                         USER_NAME=""
                                         USER_NAME=guest
                                   fi
                                   printf " Enter user shell [$(which bash)] -------------- > "
                                   if [ "$userShell" = "" ]; then
                                         USER_SHELL=""
                                         read userShell
                                         USER_SHELL=$userShell
                                   fi
                                   if [ "$userShell" = "" ]; then
                                         USER_SHELL=""
                                         USER_SHELL=$(which bash)
                                   fi      
                                   printf " Enter user home [/home/$USER_NAME] ------------ > "
                                   if [ "$userHome" = "" ]; then
                                         USER_HOME=""
                                         read userHome
                                         USER_HOME=$userHome
                                   fi
                                   if [ "$userHome" = "" ]; then
                                         USER_HOME=""
					                               USER_HOME=/home/$USER_NAME
                                   fi      
                                   printf " Enter user group [users] ---------------------- > "
                                   if [ "$userGroup" = "" ]; then
                                         USER_GROUP=""
                                         read userGroup
                                         USER_GROUP=$userGroup
                                   fi
                                   if [ "$userGroup" = "" ]; then
                                         USER_GROUP=""
					                               USER_GROUP=users
                                   fi
                                   printf " Enter skel directory [/etc/skel] -------------- > "
                                   if [ "$skelDir" = "" ]; then
                                         SKEL_DIR=""
                                         read skelDir
                                         SKEL_DIR=$skelDir
                                   fi
                                   if [ "$skelDir" = "" ]; then
                                         SKEL_DIR=""
                                         SKEL_DIR=/etc/skel
                                   fi      
                                   printf " Enter user ID [1000] -------------------------- > "
                                   if [ "$userIdent" = "" ]; then
                                         USER_IDENT=""
                                         read userIdent
                                         USER_IDENT=$userIdent
                                   fi
                                   if [ "$userIdent" = "" ]; then
                                         USER_IDENT=""
                                         USER_IDENT=1000
                                   fi
                                   clear
                                   echo "            COMMAND STATUS             "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which pw)                          bos.usrmgt.pw           exec"
                                   echo "$(which passwd)                      bos.sysmgt.passwd       exec"
                                   echo "Command run: $(which pw) useradd -u $USER_IDENT -d $USER_HOME -m -g $USER_GROUP -k $SKEL_DIR -s $USER_SHELL -n $USER_NAME"
                                   echo "Command run: $(which passwd) $USER_NAME"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Adding user: $USER_NAME to system"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   $(which pw) useradd -u $USER_IDENT -d $USER_HOME -m -g $USER_GROUP -k $SKEL_DIR -s $USER_SHELL -n $USER_NAME
                                   if [ $? -eq 0 ]; then
                                        echo "#########################################################################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly added user: $USER_NAME to system" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which pw) useradd -u $USER_IDENT -d $USER_HOME -m -g $USER_GROUP -k $SKEL_DIR -s $USER_SHELL -n $USER_NAME" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#########################################################################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo "        COMMAND STATUS          "
                                        echo
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        echo
                                        echo "Before command completion, additional instructions may appear below"
                                        echo
                                        echo "File                                  Fileset                Type"
                                        echo "-----------------------------------------------------------------"
                                        echo "$(which pw)                           bos.usrmgt.pw          exec"
                                        echo "Command run: $(which pw) useradd -u $USER_IDENT -d $USER_HOME -m -g $USER_GROUP -k $SKEL_DIR -s $USER_SHELL -n $USER_NAME"
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "#########################################################################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not added user: $USER_NAME to system, check command syntax" >> /var/log/smx-log/fail.log 
                                        echo "[$(date)] Command run: $(which pw) useradd -u $USER_IDENT -d $USER_HOME -m -g $USER_GROUP -k $SKEL_DIR -s $USER_SHELL -n $USER_NAME" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "#########################################################################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo "        COMMAND STATUS          "
                                        echo
                                        echo "$(date)                                    $(whoami)@$(hostname)"
                                        echo
                                        echo "Before command completion, additional instructions may appear below"
                                        echo
                                        echo "File                                 Fileset                 Type"
                                        echo "-----------------------------------------------------------------"
                                        echo "$(which pw)                          bos.usrmgt.pw           exec"
                                        echo "Command run: $(which pw) useradd -u $USER_IDENT -d $USER_HOME -m -g $USER_GROUP -k $SKEL_DIR -s $USER_SHELL -n $USER_NAME"
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        exit 1
                                   fi
                                   $(which passwd) $USER_NAME        
                              fi
                         fi
                    fi
    		    ;;
           addsys)
                    clear
            	    $(which uname) | grep Linux
            	    if [ $? -eq 0 ]; then
    			 echo "OS = Linux"
    		    else
                	 echo "Option not availible for OS X and BSD"
                	 usr_menu
              	    fi 
              	    # System user - controling deamon like stuff only (I think :-))
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo "[TOP]                                            [Entry Fields]"
                    read -p " Enter system username ----------------------- > " sysUser
                    printf " Enter system shell [$(which nologin)] -------- > "
                    if [ "$sysShell" = "" ]; then
                          SYS_SHELL=""
                          read sysShell
                          SYS_SHELL=$sysShell
                    fi
                    if [ "$sysShell" = "" ]; then
                          SYS_SHELL=""
                          SYS_SHELL=$(which nologin)
                    fi      
                    read -p " Enter home directory ------------------------ > " syshomeDir
                    read -p " Enter system group -------------------------- > " sysGroup
                    read -p " Enter real name ----------------------------- > " sysRealName
                    read -p " Enter system UID ---------------------------- > " sysUserID
                    clear
                    echo "         COMMAND STATUS                 "
                    echo
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo
                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                    echo
                    echo "Before command completion, additional instructions may appear below"
                    echo
                    echo "File                                 Fileset                 Type"
                    echo "-----------------------------------------------------------------"
                    echo "$(which useradd)                     bos.usrmgt.useradd      exec"
                    echo "$(which gpasswd)                     bos.grpmgt.gpasswd      exec"
                    echo "Command run: $(which useradd) -m -d $syshomeDir -N -r -s $SYS_SHELL -u $sysUserID -c $sysRealName $sysUser"
                    echo "Command run: $(which gpasswd) -a $sysUser $sysGroup"
                    sleep 2
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Creating system user: $sysUser"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Creating system user: $sysUser home directory: $syshomeDir"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Setting system user: $sysUser shell to: $SYS_SHELL"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Setting system user: $sysUser UID to: $sysUserID"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Setting system user: $sysUser real name to: $sysRealName"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    $(which useradd) -m -d $syshomeDir -N -r -s $SYS_SHELL -u $sysUserID -c "$sysRealName" $sysUser
                    if [ $? -eq 0 ]; then
                         echo "####################################################################################################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly created system user: $sysUser" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which useradd) -m -d $syshomeDir -N -r -s $SYS_SHELL -u $sysUserID -c $sysRealName $sysUser" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "####################################################################################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
                    else
                         echo "######################################################################################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not created system user: $sysUser, check command syntax" >> /var/log/smx-log/fail.log
			 echo "[$(date)] Command run: $(which useradd) -m -d $syshomeDir -N -r -s $SYS_SHELL -u $sysUserID -c '$sysRealName' $sysUser" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         echo "######################################################################################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
			 echo
                         read -p "Press [enter] to continue..." ReadDamKey
                         exit 1
                    fi
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Setting system user: $sysUser group to: $sysGroup"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    $(which gpasswd) -a $sysUser $sysGroup
                    if [ $? -eq 0 ]; then
                         echo "#####################################################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly added system user: $sysUser to group: $sysGroup" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which gpasswd) -a $sysUser $sysGroup" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "#####################################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
                    else
                         echo "####################################################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not added system user: $sysUser to group: $sysGroup, check command syntax" >> /var/log/smx-log/fail.log
                      	 echo "[$(date)] Command run: $(which gpasswd) -a $sysUser $sysGroup" >> /var/log/smx-log/fail.log
                      	 echo "" >> /var/log/smx-log/fail.log
                         echo "###################################################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
                    fi
                    ;;
           chsh)
                  clear
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo "[TOP]                                       [Entry Fields]"
                  read -p " Enter username ------------------------- > " userName
                  printf " Enter user shell [$(which bash)] -------- > "
                  if [ "$userShell" = "" ]; then
                        USER_SHELL=""
                        read userShell
                        USER_SHELL=$userShell
                  fi
                  if [ "$userShell" = "" ]; then
                        USER_SHELL=""
                        USER_SHELL=$(which bash)
                  fi        
                  clear
                  echo "           COMMAND STATUS             "
                  echo
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo
                  echo "Command: RUNNING     stdout: yes    stderr: no    "
                  echo
                  echo "Before command completion, additional instructions may appear below"
                  echo
                  echo "File                                  Fileset                Type"
                  echo "-----------------------------------------------------------------"
                  echo "$(which chsh)                         bos.usrmgt.usermod     exec"
                  echo "Command run: /usr/sbin/chsh -s $USER_SHELL $userName"
                  sleep 2
                  update_spinner
                  sleep 1
                  update_spinner
                  sleep 1
                  update_spinner
                  echo "Setting user: $userName shell to: $USER_SHELL"
                  sleep 1
                  update_spinner
                  sleep 1
                  update_spinner
                  sleep 1
                  update_spinner
                  $(which chsh) -s $USER_SHELL $userName
                  if [ $? -eq 0 ]; then
                       echo "################################################################" >> /var/log/smx-log/success.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                       echo "[$(date)] User: $userName modified, shell changed to $USER_SHELL" >> /var/log/smx-log/success.log
		       echo "[$(date)] Command run: $(which chsh) -s $USER_SHELL $userName" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       echo "################################################################" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       read -p "Press [enter] to continue..." ReadDamKey
                       clear
              	       echo
              	       cat /var/log/smx-log/success.log | tail -n 7
              	       echo
                       read -p "Press [enter] to continue..." ReadDamKey
                  else                      
                       echo "#############################################################################" >> /var/log/smx-log/fail.log
                       echo "Log file started at: Log file started at: $(date)" >> /var/log/smx-log/fail.log
                       echo "[$(date)] User: $userName not modified, no changes made, check command syntax" >> /var/log/smx-log/fail.log
                       echo "[$(date)] Command run: $(which chsh) -s $USER_SHELL $userName" >> /var/log/smx-log/fail.log
                       echo "" >> /var/log/smx-log/fail.log
                       echo "#############################################################################" >> /var/log/smx-log/fail.log
                       echo "" >> /var/log/smx-log/fail.log
                       read -p "Press [enter] to continue..." ReadDamKey
                       clear
              	       echo
              	       cat /var/log/smx-log/fail.log | tail -n 7
              	       echo
                       read -p "Press [enter] to continue..." ReadDamKey
                  fi
                  ;;
           chname)
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "[TOP]                        [Entry Fields]"
                         read -p " Enter username ----------- > " userName
                         read -p " Enter real name ---------- > " realName
                         clear
                         echo "        COMMAND STATUS                "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                 Fileset                Type"
                         echo "----------------------------------------------------------------"
                         echo "$(which usermod)                     bos.usrmgt.usermod     exec"
                         echo "Command run: $(which usermod) -c $realName $userName"
                         sleep 2
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Setting user: $userName real name to: $realName"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         $(which usermod) -c "$realName" $userName
                         if [ $? -eq 0 ]; then
                              echo "##############################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date):$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] User: $userName modified, name changed to $realName" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which usermod) -c $realName $userName" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "##############################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "##############################################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] User: $userName not modified, name not changed, check command syntax" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which usermod) -c '$realName' $userName" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "##############################################################################" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    else
                         $(which uname) | grep Darwin >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Darwin (OS X)"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                            [Entry Fields]"
                              read -p " Enter username -------------- > " userName
                              read -p " Enter real name ------------- > " realName
                              clear
                              echo "         COMMAND STATUS              "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which dscl)                       bos.usrmgt.dscl          exec"
                              echo "Command run: $(which dscl) . -create /Users/$userName RealName "$realName""
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing real name of user: $userName to: $realName"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Users/$userName RealName "$realName"
                              if [ $? -eq 0 ]; then
                                   echo "##########################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly changed user: $userName real name to: $realName" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which dscl) . -create /Users/$realName RealName '$realName'" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "##########################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "##########################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not changed user: $userName real name to: $realName, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which dscl) . -create /Users/$realName RealName '$realName'" >> /var/log/smx-log/fail.log 
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "##########################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi
                         else
                              $(which uname) | grep BSD >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = BSD"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo "[TOP]                                    [Entry Fields]"
                                   read -p " Enter username ---------------------- > " userName
                                   read -p " Enter user real name ---------------- > " realName
                                   clear
                                   echo "         COMMAND STATUS                      "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which pw)                          bos.usrmgt.pw           exec"
                                   echo "Command run: $(which pw) usermod -c '$realName' -n $userName"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Changing real name of user: $userName to: $realName"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which pw) usermod -c "$realName" -n $userName
                                   if [ $? -eq 0 ]; then
                                        echo "############################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly changed real name of user: $userName" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which pw) usermod -c '$realName' -n $userName" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "############################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "##############################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Not changed real name of user: $userName, check command syntax" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which pw) usermod -c '$realName' -n $userName" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "##############################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   fi          
                              fi
                         fi
                    fi
                    ;;
           chid)
                  $(which uname) | grep Linux >> /dev/null
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "[TOP]                          [Entry Fields]"
                       read -p " Enter username ------------- > " userName
                       read -p " Enter new user ID ---------- > " userIdent
                       clear
                       echo "       COMMAND STATUS                 "
                       echo
                       echo "$(date)                                      $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING    stdout: yes     stderr: no     "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                 Fileset                Type"
                       echo "----------------------------------------------------------------"
                       echo "$(which usermod)                     bos.usrmgt.usermod     exec"
                       echo "Command run: $(which usermod) -u $userIdent $userName"
                       sleep 2
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Setting user: $userName UID to: $userIdent"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       $(which usermod) -u $userIdent $userName
                       if [ $? -eq 0 ]; then
                            echo "#################################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] User: $userName modified, user ID changed to $userIdent" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which usermod) -u $userIdent $userName" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "#################################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            echo "#############################################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] User: $userName not modified, UID not changed, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which usermod) -u $userIdent $userName" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "#############################################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                  else
                       $(which uname) | grep Darwin >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Darwin (OS X)"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                               [Entry Fields]"
                            read -p " Enter username ----------------- > " userName
                            read -p " Enter new user id -------------- > " userIdent
                            clear
                            echo "         COMMAND STATUS                 "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which dscl)                        bos.usrmgt.dscl         exec"
                            echo "Command run: $(which dscl) . -create /Users/$userName UniqueID $userIdent"
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Changing ID of user: $userName to $userIdent"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which dscl) . -create /Users/$userName UniqueID $userIdent
                            if [ $? -eq 0 ]; then
                                 echo "#########################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly changed user: $userName id to: $userIdent" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which dscl) . -create /Users/$userName UniqueID $userIdent" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#########################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not changed user: $userName id to: $userIdent, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which dscl) . -create /Users/$userName UniqueID $userIdent" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep BSD >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                    [Entry Fields]"
                                 read -p " Enter username ---------------------- > " userName
                                 read -p " Enter new user ID ------------------- > " userIdent
                                 clear
                                 echo "         COMMAND STATUS                      "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which pw)                          bos.usrmgt.pw           exec"
                                 echo "Command run: $(which pw) usermod -u $userIdent -n $userName"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Changing ID of user: $userName to $userIdent"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which pw) usermod -u $userIdent -n $userName
                                 if [ $? -eq 0 ]; then
                                      echo "################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly changed user ID of user: $userName" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which pw) usermod -u $userIdent -n $userName" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "################################################################" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not changed user ID of user: $userName" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which pw) usermod -u $userIdent -n $userName" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "################################################################" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi          
                            fi
                       fi
                  fi
                  ;;
           grpmgt)
                    clear
                    sleep 2
                    echo "" >> /var/log/smx-log/success.log
                    echo "###############################################################" >> /var/log/smx-log/success.log
                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                    echo "[$(date)] Successfuly executed $(basename $0)/usr_menu/grp_menu" >> /var/log/smx-log/success.log
                    echo "" >> /var/log/smx-log/success.log
                    echo "###############################################################" >> /var/log/smx-log/success.log
                    echo "" >> /var/log/smx-log/success.log
                    grp_menu
                    ;;
           passmgt)
                     clear
                     sleep 2
                     echo "" >> /var/log/smx-log/success.log
                     echo "###################################################################" >> /var/log/smx-log/success.log
                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                     echo "[$(date)] Successfuly executed $(basename $0)/usr_menu/passwd_menu" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     echo "##################################################################" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
                     passwd_menu
                     ;;
           delusr)
                    clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "[TOP]                               [Entry Fields]"
                         read -p " Enter username ----------------- > " userName
                         clear
                         echo "        COMMAND STATUS                "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                  Fileset                Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which userdel)                      bos.usrmgt.userdel     exec"
                         echo "Command run: $(which userdel) -f $userName"
                         sleep 2
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Deleting user: $userName"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         $(which userdel) -f $userName
                         if [ $? -eq 0 ]; then
                              echo "############################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] User: $userName modified, removed user from system" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which userdel) -f $userName" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "############################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              echo "User: $userName Successfuly removed from system."
                              echo "Please delete or backup user home directory, spool file, mailbox, and stop any cron jobs"
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "##########################################################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] User: $userName not modified, user not removed from system, check command syntax" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which userdel) -f -r $userName" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "##########################################################################################" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    else
                         $(which uname) | grep Darwin >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = OS X"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                                   [Entry Fields]"
                              read -p " Enter username ---------------------- > " userName
                              clear
                              echo "         COMMAND STATUS                      "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which dscl)                        bos.usrmgt.dscl         exec"
                              echo "$(which rm)                          bos.sysmgt.rm           exec"
                              echo "Command run: $(which dscl) . -delete /Users/$userName"
                              echo "Command run: $(which rm) -rf /Users/$userName"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Deleting user: $userName"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Removing home directory: /Users/$userName"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -delete /Users/$userName
                              if [ $? -eq 0 ]; then
                                   echo "#####################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly removed user: $userName from system" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which dscl) . -delete /Users/$userName" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "#####################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "#############################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not removed user: $userName from system, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which dscl) . -delete /Users/$userName" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "#############################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   exit 1
                              fi
                              $(which rm) -rf /Users/$userName
                         else
                              $(which uname) | grep BSD >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = BSD"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo "[TOP]                                     [Entry Fields]"
                                   read -p " Enter username ----------------------- > " userName
                                   read -p " Enter user ID ------------------------ > " userIdent
                                   clear
                                   echo "         COMMAND STATUS                       "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which pw)                          bos.usrmgt.pw           exec"
                                   echo "Command run: $(which pw) userdel -n $userName -u $userIdent -r"
                                   sleep 2
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Deleting user: $userName"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   $(which pw) userdel -n $userName -u $userIdent -r
                                   if [ $? -eq 0 ]; then
                                        echo "#####################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly removed user: $userName from system" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which pw) userdel -n $userName -u $userIdent -r" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#####################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "#####################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not remove user: $userName from system, check command syntax" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which pw) userdel -n $userName -u $userIdent -r" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "#####################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   fi     
                              fi
                         fi
                    fi	
                    ;;
           login)
                   clear
                   echo "$(date)                                    $(whoami)@$(hostname)"
                   echo "[TOP]                               [Entry Fields]"
                   read -p " Enter username ------------------ > " userName
                   clear
                   echo "           COMMAND STATUS              "
                   echo
                   echo "$(date)                                    $(whoami)@$(hostname)"
                   echo
                   echo "Command: RUNNING    stdout: yes    stderr: no    "
                   echo
                   echo "Before command completion, additional instructions may appear below"
                   echo
                   echo "File                                 Fileset                 Type"
                   echo "-----------------------------------------------------------------"
                   echo "$(which su)                          bos.usrmgt.su           exec"
                   echo "Command run: $(which su) -l $userName"
                   $(which su) -l $userName
                   if [ $? -eq 0 ]; then
                        echo "###############################################" >> /var/log/smx-log/success.log
                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                        echo "[$(date)] Successfuly logged in as $userName" >> /var/log/smx-log/success.log
                        echo "[$(date)] Command run: $(which su) -l $userName" >> /var/log/smx-log/success.log
                        echo "" >> /var/log/smx-log/success.log
                        echo "###############################################" >> /var/log/smx-log/success.log
                        echo "" >> /var/log/smx-log/success.log
                        read -p "Press [enter] to continue..." ReadDamKey
                        clear
                        echo
                        cat /var/log/smx-log/success.log | tail -n 7
                        echo
                        read -p "Press [enter] to continue..."
                   else
                        echo "##########################################################" >> /var/log/smx-log/fail.log
                        echo "Log file started at: $(date))" >> /var/log/smx-log/fail.log
                        echo "[$(date)] Not logged in as $userName, check command syntax" >> /var/log/smx-log/fail.log
			                  echo "[$(date)] Command run: $(which su) -l $userName" >> /var/log/smx-log/fail.log
                        echo "" >> /var/log/smx-log/fail.log
                        echo "##########################################################" >> /var/log/smx-log/fail.log
                        echo "" >> /var/log/smx-log/fail.log
                        read -p "Press [enter] to continue..." ReadDamKey
                        clear
                        echo
                        cat /var/log/smx-log/fail.log | tail -n 7
                        echo
                        read -p "Press [enter] to continue..." ReadDamKey
                   fi
                   ;;
           find)
                  $(which finger) >> /dev/null
                  if [ $? -eq 0 ]; then
                       echo "Finger found in PATH"
                  else
                       clear
                       cat /proc/version | grep "Red Hat" >> /dev/null
		       if [ $? -eq 0 ]; then
			    echo "OS = Red Hat"
                            $(which yum) -y install finger | $(which tee) /var/log/smx-log/finger-install-redhat.log
                       else
                            clear
                            cat /proc/version | grep "Debian" >> /dev/null
                            if [ $? -eq 0 ]; then
                                 echo "OS = Debian"
                                 $(which apt-get) -y install finger | $(which tee) /var/log/smx-log/finger-install-debian.log
                            else
                                 clear
                                 cat /proc/version | grep "Ubuntu" >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      echo "OS = Ubuntu"
                                      $(which apt-get) -y install finger | $(which tee) /var/log/smx-log/finger-install-ubuntu.log
                                 else
                                      clear
                                      cat /proc/version | grep "SUSE" >> /dev/null
                                      if [ $? -eq 0 ]; then
                                           echo "OS = SuSE"
                                           $(which zypper) in -y finger | $(which tee) /var/log/smx-log/finger-install-suse.log
                                      fi
                                 fi
			    fi
		       fi
		  fi	 
                  clear
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo "[TOP]                           [Entry Fields]"
                  read -p " Enter username ------------- > " userName
                  clear
                  echo "         COMMAND STATUS          "
                  echo
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo
                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                  echo
                  echo "Before command completion, additional instructions may appear below"
                  echo
                  echo "File                                 Fileset                 Type"
                  echo "-----------------------------------------------------------------"
                  echo "$(which finger)                      bos.usrmgt.finger       exec"
                  echo "Command run: $(which finger) $userName | $(which tee) /var/log/smx-log/finger.log"
                  sleep 2
                  clear
                  update_spinner
                  sleep 1
                  update_spinner
                  sleep 1
                  update_spinner
                  echo "Displaying information for user: $userName"
                  sleep 1
                  update_spinner
                  sleep 1
                  update_spinner
                  sleep 1
                  update_spinner
                  $(which finger) $userName | $(which tee) /var/log/smx-log/finger.log
                  if [ $PIPESTATUS -eq 0 ]; then
                       echo "###########################################################################################" >> /var/log/smx-log/success.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                       echo "[$(date)] Successfuly displayed information of $userName" >> /var/log/smx-log/success.log
                       echo "[$(date)] Command run: $(which finger) $userName | $(which tee) /var/log/smx-log/finger.log" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       echo "###########################################################################################" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       read -p "Press [enter] to continue..." ReadDamKey
                       clear
                       echo
                       cat /var/log/smx-log/success.log | tail -n 7
                       echo
                       read -p "Press [enter] to continue..." ReadDamKey
                  else
                       echo "###########################################################################################" >> /var/log/smx-log/fail.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                       echo "[$(date)] Not displayed information of $userName" >> /var/log/smx-log/fail.log
		       echo "[$(date)] Command run: $(which finger) $userName | $(which tee) /var/log/smx-log/finger.log" >> /var/log/smx-log/fail.log
                       echo "" >> /var/log/smx-log/fail.log
                       echo "###########################################################################################" >> /var/log/smx-log/fail.log
                       echo "" >> /var/log/smx-log/fail.log
                       read -p "Press [enter] to continue..." ReadDamKey
                       clear
                       echo
                       cat /var/log/smx-log/fail.log | tail -n 7
                       echo
                       read -p "Press [enter] to continue..." ReadDamKey
                  fi
                  ;;
           users)
                   clear
                   echo "        COMMAND STATUS                "
                   echo
                   echo "$(date)                                     $(whoami)@$(hostname)"
                   echo
                   echo "Command: RUNNING    stdout: yes   stderr: no      "
                   echo
                   echo "Before command completion, additional instructions may appear below"
                   echo
                   echo "File                                  Fileset                Type"
                   echo "-----------------------------------------------------------------"
                   echo "$(which w)                            bos.usrmgt.w           exec"
                   echo "Command run: $(which w) | $(which tee) /var/log/smx-log/w.log"
                   sleep 2
                   clear
                   $(which w) | $(which tee) /var/log/smx-log/w.log
                   if [ $PIPESTATUS -eq 0 ]; then
                        echo "#######################################################################" >> /var/log/smx-log/success.log
                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                        echo "[$(date)] Successfuly displayed all logged in users" >> /var/log/smx-log/success.log
                        echo "[$(date)] Command run: $(which w) | $(which tee) /var/log/smx-log/w.log" >> /var/log/smx-log/success.log
                        echo "" >> /var/log/smx-log/success.log
                        echo "#######################################################################" >> /var/log/smx-log/success.log
                        echo "" >> /var/log/smx-log/success.log
                        read -p "Press [enter] to continue..." ReadDamKey
                        clear
                        echo
                        cat /var/log/smx-log/success.log | tail -n 7
                        echo
                        read -p "Press [enter] to continue..." ReadDamKey
                   else
                        echo "#######################################################################" >> /var/log/smx-log/fail.log
                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                        echo "[$(date)] Loged in users not displayed, check command syntax" >> /var/log/smx-log/fail.log
                       	echo "[$(date)] Command run: $(which w) | $(which tee) /var/log/smx-log/w.log" >> /var/log/smx-log/fail.log
                      	echo "" >> /var/log/smx-log/fail.log
                        echo "#######################################################################" >> /var/log/smx-log/fail.log
                        echo "" >> /var/log/smx-log/fail.log
                        read -p "Press [enter] to continue..." ReadDamKey
                        clear
                        echo
                        cat /var/log/smx-log/fail.log | tail -n 7
                        echo
                        read -p "Press [enter] to continue..." ReadDamKey
                   fi
                   ;;
           visudo)
                    clear
                    echo "       COMMAND STATUS        "
                    echo
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo
                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                    echo
                    echo "Before command completion, additional instructions may appear below"
                    echo
                    echo "File                                  Fileset                Type"
                    echo "-----------------------------------------------------------------"
                    echo "$(which visudo)		        bos.usrmgt.visudo      exec"
                    echo "Command run: $(which visudo)"
                    sleep 2
                    $(which visudo)
                    if [ $? -eq 0 ]; then
                         echo "#################################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly modified file: /etc/sudoers" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which visudo)" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "#################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
                    else
                         echo "#########################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] /etc/sudoers not modified, check command syntax" >> /var/log/smx-log/fail.log
                    	   echo "[$(date)] Command run: $(which visudo)" >> /var/log/smx-log/fail.log
                    	   echo "" >> /var/log/smx-log/fail.log
                         echo "#########################################################" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
                    fi
                    ;;
           disable)
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "$(date)                                      $(whoami)@$(hostname)"
                          echo "[TOP]                       [Entry Fields]"
                          read -p " Enter username ---------- > " userName
                          clear
                          echo "        COMMAND STATUS                "
                          echo
                          echo "$(date)                                      $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no      "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                  Fileset                Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which usermod)                      bos.usrmgt.usermod     exec"
                          echo "Command run: $(which usermod) -L -s $(which nologin) $userName"
                          sleep 2
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Locking user: $userName, setting shell to: $(which nologin)"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which usermod) -L -s $(which nologin) $userName
                          if [ $? -eq 0 ]; then
                               echo "########################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] User: $userName modified, user disabled" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which usermod) -L -s $(which nologin) $userName" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "########################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "##############################################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] user: $userName not modified not disabled or shell changed to $(which nologin), check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which usermod) -L -s $(which nologin) $userName" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "##############################################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Darwin (OS X)"
                               clear
                               echo "$(date)                                    $(whoami)@$(hostname)"
                               echo "[TOP]                                [Entry Fields]"
                               read -p " Enter username ------------------ > " userName
                               clear
                               echo "         COMMAND STATUS           "
                               echo
                               echo "$(date)                                    $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no    "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which chsh)                        bos.usrmgt.chsh         exec"
                               echo "Command run: $(which chsh) -s $(which nologin) $userName"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Disabling user: $userName, setting shell to: $(which nologin)"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chsh) -s $(which nologin) $userName
                               if [ $? -eq 0 ]; then
                                    echo "########################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly disabled user: $userName" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which chsh) -s $(which nologin) $userName" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "########################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#########################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not disabled user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which chsh) -s $(which nologin) $userName" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "########################################################" > /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "[TOP]                                     [Entry Fields]"
                                    read -p " Enter username ----------------------- > " userName
                                    clear
                                    echo "         COMMAND STATUS                       "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which pw)                          bos.usrmgt.pw           exec"
				                            echo "$(which chsh)                        bos.usrmgt.chsh         exec"
                                    echo "Command run: $(which pw) lock $userName"
                                    echo "Command run: $(which chsh) -s $(which nologin) $userName"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Disabling user: $userName, setting shell to: $(which nologin)"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which pw) lock $userName
                                    if [ $? -eq 0 ]; then
                                         echo "#############################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly locked user: $userName" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which pw) lock $userName" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "#############################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#############################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not locked user: $userName" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which chsh) -s $(which nologin) $userName" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "#############################################################" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    $(which chsh) -s $(which nologin) $userName          
                               fi
                          fi
                     fi
                     ;;
           enable)
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "[TOP]                                       [Entry Fields]"
                         read -p " Enter username ------------------------- > " userName
                         printf " Enter user shell [$(which bash)] -------  > "
                         if [ "$userShell" = "" ]; then
                               USER_SHELL=""
                               read userShell
                               USER_SHELL=$userShell
                         fi
                         if [ "$userShell" = "" ]; then
                               USER_SHELL=""
                               USER_SHELL=$(which bash)
                         fi      
                         clear
                         echo "        COMMAND STATUS                "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "command: RUNNING        stdout: yes     stderr: no    "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                  Fileset                Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which usermod)                      bos.usrmgt.usermod     exec"
                         echo "Command run: $(which usermod) -U -s $USER_SHELL $userName"
                         sleep 2
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Unlocking user: $userName, Setting shell to: $USER_SHELL"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         $(which usermod) -U -s $USER_SHELL $userName
                         if [ $? -eq 0 ]; then
                              echo "################################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] User: $userName modified, enabled user and shell changed to $USER_NAME" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which usermod) -U -s $USER_SHELL $userName" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "################################################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "##################################################################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] user: $userName not modified, user not enabled, shell not changed, check command syntax" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which usermod) -U -s $USER_SHELL $userName" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "#################################################################################################" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    else
                         $(which uname) | grep Darwin >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Darwin (OS X)"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                                       [Entry Fields]"
                              read -p " Enter username ------------------------- > " userName
                              printf " Enter user shell [$(which bash)] -------- > "
                              if [ "$userShell" = "" ]; then
                                    USER_SHELL=""
                                    read userShell
                                    USER_SHELL=$userShell
                              fi
                              if [ "$userShell" = "" ]; then
                                    USER_SHELL=""
                                    USER_SHELL=$(which bash)
                              fi       
                              clear
                              echo "         COMMAND STATUS                 "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which chsh)                        bos.usrmgt.chsh         exec"
                              echo "Command run: $(which chsh) -s $USER_SHELL $userName"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Enabling user: $userName, setting shell to: $USER_SHELL"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which chsh) -s $USER_SHELL $userName
                              if [ $? -eq 0 ]; then
                                   echo "##############################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly enabled user: $userName, set shell to: $USER_SHELL" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which chsh) -s $USER_SHELL $userName" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "##############################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "##################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not enabled user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which chsh) -s $USER_SHELL $userName" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "##################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi
                         else
                              $(which uname) | grep BSD >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = BSD"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo "[TOP]                                    [Entry Fields]"
                                   read -p " Enter username ---------------------- > " userName
                                   printf " Enter user shell [$(which bash)] ----- > " 
                                   if [ "$userShell" = "" ]; then
                                        USER_SHELL=""
                                        read userShell
                                        USER_SHELL=$userShell
                                   fi
                                   if [ "$userShell" = "" ]; then
                                         USER_SHELL=""
                                         USER_SHELL=$(which bash)
                                   fi
                                   clear
                                   echo "             COMMAND STATUS              "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                  Fileset                Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which pw)                           bos.usrmgt.pw          exec"
                                   echo "$(which chsh)                         bos.usrmgt.chsh        exec"
                                   echo "Command run: $(which pw) unlock $userName"
                                   echo "Command run: $(which chsh) -s $USER_SHELL $userName"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Enabling user: $userName, setting shell to: $USER_SHELL"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which pw) unlock $userName
                                   if [ $? -eq 0 ]; then
                                        echo "######################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly enabled user: $userName" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which pw) unlock $userName" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "######################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo 
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "######################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not enabled user: $userName" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which pw) unlock $userName" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "######################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        exit 1
                                   fi
                                   $(which chsh) -s $USER_SHELL $userName        
                              fi
                         fi
                    fi
                    ;;
	   edlogin)
	             clear
              	     echo "        COMMAND STATUS          "
              	     echo
              	     echo "$(date)                                    $(whoami)@$(hostname)"
              	     echo
              	     echo "Command: RUNNING    stdout: yes    stderr: no    "
              	     echo
              	     echo "Before command completion, additional instructions may appear below"
              	     echo
              	     echo "File                                 Fileset                 Type"
              	     echo "-----------------------------------------------------------------"
              	     echo "$(which vi)                          bos.sysmgt.vi           exec"
              	     echo "Command run: $(which vi) /etc/login.defs"
              	     sleep 2
              	     $(which vi) /etc/login.defs
		     if [ $? -eq 0 ]; then
			  echo "####################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
			  echo "[$(date)] Successfuly modified file: /etc/login.defs" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which vi) /etc/login.defs" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "####################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
		     else
                          echo "##################################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not modified file: /etc/login.defs, check command syntax" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which vi) /etc/login.defs" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "##################################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
              	     fi
              	     ;;
	   chinfo)
  	            clear
                    echo "$(date)                                    $(whoami)@$(hostname)"
		    echo "[TOP]                              [Entry Fields]"
                    read -p " Enter username ----------------- > " userName
                    clear
                    echo "         COMMAND STATUS           "
              	    echo
               	    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo
                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                    echo
              	    echo "Before command completion, additional instructions may appear below"
               	    echo
               	    echo "File                                 Fileset                 Type"
               	    echo "-----------------------------------------------------------------"
               	    echo "$(which chfn)                        bos.usrmgt.chfn         exec"
               	    echo "Command run: $(which chfn) $userName"
               	    sleep 2
		    clear
               	    $(which chfn) $userName
               	    if [ $? -eq 0 ]; then
                         echo "##########################################################" >> /var/log/smx-log/success.log
			 echo "Log started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly modified user: $userName information" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which chfn) $userName" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "##########################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
		    else
                         clear
                         echo "########################################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not modified user: $userName information, check command syntax" >> /var/log/smx-log/fail.log
			 echo "[$(date)] Command run: $(which chfn) $userName" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         echo "########################################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
              	    fi
              	    ;;
           help)
                  echo "addusr > Add a user to the system"
                  echo "addsys > Add a system user to the system"
                  echo "chsh > Change user's shell"
                  echo "chname > Change user's real name"
                  echo "chid > Change user's id"
                  echo "grpmgt > Perform group management"
                  echo "passmgt > Password management"
                  echo "delusr > Remove a user from the system"
                  echo "login > Login as a user on the system"
                  echo "find > Find a user on the system"
                  echo "users > List user's logged in"
                  echo "visudo > Edit /etc/sudoers file"
                  echo "disable > Disable a user"
                  echo "enable > Enable a user"
                  echo "edlogin > Edit /etc/login.defs"
                  echo "chinfo > Change user information"
                  echo "mail > Send mail to a user"
                  echo "help > This menu"
                  echo "exit > Return to main menu"
                  echo "exit-mas > Exit back to shell"  
                  read -p "Press [enter] to continue..." ReadDamKey;;       
           exit)
                  clear
                  echo "########################################################" >> /var/log/smx-log/exit.log
              	  echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
               	  echo "[$(date)] Successfuly terminated $(basename $0)/usr_menu" >> /var/log/smx-log/exit.log
               	  echo "" >> /var/log/smx-log/exit.log
                  echo "########################################################" >> /var/log/smx-log/exit.log
                  echo "" >> /var/log/smx-log/exit.log
                  main_menu
                  ;;
	   exit-mas)
  	              clear
		      echo "###########################################" >> /var/log/smx-log/exit.log
                      echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                      echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
               	      echo "" >> /var/log/smx-log/exit.log
              	      echo "###########################################" >> /var/log/smx-log/exit.log
              	      echo "" >> /var/log/smx-log/exit.log
                      exit 0
               	      ;;
           *)     clear
                  echo "        COMMAND STATUS         "
                  echo
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo
                  echo "Command: FAIL     stdout: yes     stderr: no      "
                  echo
                  echo "Before command completion, additional instructions may appear below"
                  echo
                  echo "Command unknown, please consult the command list, executed with pid - 3156 (0x1)"
                  read -p "Press [enter] to continue..." ReadDamKey;;
       esac
   done    
}

function dsk_menu() {
    while :
    do
        clear
        echo "$(date)                                     $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/dsk_menu # " choice_dsk
        echo

        case "$choice_dsk" in
            init)
                   clear
                   $(which uname) | grep Linux
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                        echo "In fdisk, press n to add a new partition, press e for extended"
                        echo "For partition number: enter 1, for cylinder leave as default"
                        echo "For last cylinder leave as default"
                        echo "Finaly press w to write changes to disk"
                        echo "[TOP]                                         [Entry Fields]"
                        printf " Enter /dev/ disk name [/dev/sda1] --------- > "
                        if [ "$diskName" = "" ]; then
                              DISK_NAME=""
                              read diskName
                              DISK_NAME=$diskName
                        fi
                        if [ "$diskName" = "" ]; then
                              DISK_NAME=""
                              DISK_NAME=/dev/sda1
                        fi      
                        printf " Enter new filesystem [ext4] ------------- > "
                        if [ "$fsysName" = "" ]; then
                              FSYS_NAME=""
                              read fsysName
                              FSYS_NAME=$fsysName
                        fi
                        if [ "$fsysName" = "" ]; then
                              FSYS_NAME=""
                              FSYS_NAME=ext4
                        fi         
                        read -p " Enter new mount point ------------------- > " mntPoint
                        read -p " Reboot after completion (Y/N) ----------- > " ans
                        clear                    
                        echo "        COMMAND STATUS         "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                 Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which fdisk)                       bos.dskmgt.fdisk        exec"
                        echo "$(which mkfs)                        bos.dskmgt.mkfs         exec"
                        echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                        echo "$(which mount)                       bos.dskmgt.mount        exec"
                        echo "echo                                 bos.sysmgt.echo         exec"
                        echo "$(which df)                          bos.dskmgt.df           exec"
                        echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                        echo "Command run: $(which fdisk) $DISK_NAME"
                        echo "Command run: $(which mkfs) -t $FSYS_NAME $DISK_NAME"
                        echo "Command run: $(which mkdir) -p $mntPoint"
                        echo "Command run: $(which mount) -t $FSYS_NAME $DISK_NAME $mntPoint"
                        echo "Command run: echo '$DISK_NAME $mntPoint $FSYS_NAME defaults 1 2'"
                        echo "Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log"
                        echo "Command run: $(which reboot) -f now --verbose; exit"
                        sleep 2
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Starting disk management on disk: $DISK_NAME"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which fdisk) $DISK_NAME
                        if [ $? -eq 0 ]; then
                             echo "##################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly initialized disk: $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which fdisk) $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "###############################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not initalized disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which fdisk) $DISK_NAME" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "###############################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Creating new filesystem: $FSYS_NAME on disk: $DISK_NAME"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which mkfs) -t $FSYS_NAME $DISK_NAME
                        if [ $? -eq 0 ]; then
                             echo "####################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly created filesystem on disk: $DISK_NAME, filesystem: $FSYS_NAME" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which mkfs) -t $FSYS_NAME $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "####################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "##############################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date))" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not created new filesystem on disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which mkfs) -t $FSYS_NAME $DISK_NAME" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "##############################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Creating mount point: $mntPoint"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which mkdir) -p $mntPoint
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Mounting disk: $DISK_NAME, with filesystem: $FSYS_NAME at mount point: $mntPoint"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which mount) -t $FSYS_NAME $DISK_NAME $mntPoint
                        if [ $? -eq 0 ]; then
                             echo "########################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly mounted disk: $DISK_NAME at: $mntPoint" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which mount) -t $FSYS_NAME $DISK_NAME $mntPoint" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "########################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "########################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not mounted disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which mount) -t $FSYS_NAME $DISK_NAME $mntPoint" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "########################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Incerting disk: $DISK_NAME, with mount point: $mntPoint with filesystem: $FSYS_NAME to /etc/fstab"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo '$DISK_NAME $mntPoint $FSYS_NAME defaults 1 2' >> /etc/fstab
                        $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log
                        if [ $? -eq 0 ]; then
                             echo "##########################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly displayed information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##########################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "##########################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not displayed information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "##########################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                        if [ "$ans" = "Y" ]; then
                              echo "The system will reboot now..."
                              read -p "Press [enter] to continue..." ReadDamKey
                              $(which reboot) -f now --verbose; exit
                        else
                              echo "System will not reboot now, disk will not be auto-mounted until next reboot"
                              read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep BSD
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = BSD"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo "[TOP]                                                [Entry Fields]"
                             printf " Enter /dev/ disk name [/dev/ada0] ---------------- > "
                             if [ "$diskName" = "" ]; then
                                   DISK_NAME=""
                                   read diskName
                                   DISK_NAME=$diskName
                             fi
                             if [ "$diskName" = "" ]; then
                                   DISK_NAME=""
                                   DISK_NAME=/dev/ada0
                             fi
                             printf " Enter full /dev/ disk name [/dev/ada0s1a] -------- > "
                             if [ "$fullDisk" = "" ]; then
                                   FULL_DISK=""
                                   read fullDisk
                                   FULL_DISK=$fullDisk
                             fi
                             if [ "$fullDisk" = "" ]; then
                                   FULL_DISK=""
                                   FULL_DISK=/dev/ada0s1a
                             fi            
                             printf " Enter disk label [ada0] -------------------------- > "
                             if [ "$diskLabel" = "" ]; then
                                   DISK_LABEL=""
                                   read diskLabel
                                   DISK_LABEL=$diskLabel
                             fi
                             if [ "$diskLabel" = "" ]; then
                                  DISK_LABEL=""
                                  DISK_LABEL=ada0      
                             fi
                             read -p " Enter disk mount point -------------------------- > " mntPoint
                             clear
                             echo "         COMMAND STATUS                 "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which dd)                          bos.dskmgt.dd           exec"
                             echo "$(which bsdlabel)                    bos.dskmgt.dd           exec"
                             echo "$(which newfs)                       bos.dskmgt.newfs        exec"
                             echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                             echo "$(which mount)                       bos.dskmgt.mount        exec"
                             echo "Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=2"
                             echo "Command run: $(which bsdlabel) -Bw $DISK_LABEL auto"
                             echo "Command run: $(which newfs) $DISK_NAME"
                             echo "Command run: $(which mkdir) -p $mntPoint"
                             echo "Command run: $(which mount) $DISK_NAME $mntPoint"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Adding disk: $DISK_NAME, with mount point: $mntPoint to /etc/fstab"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             $(which dd) =/dev/zero of=$DISK_NAME bs=64k count=2
                             if [ $? -eq 0 ]; then
                                  echo "############################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly initalized disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=2" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "############################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "############################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not initalized disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=2" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "############################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                             $(which bsdlabel) -Bw $diskLabel auto
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "Disk: $DISK_NAME successfuly labled"
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  clear
                                  echo "Disk: $DISK_NAME not labled"
                                  read -p "Press [enter[ to continue..." ReadDamKey
                                  exit 1
                             fi
                             $(which newfs) $FULL_DISK
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "Disk: $DISK_NAME successfuly formated"
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  clear
                                  echo "Disk: $DISK_NAME not formated"
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             $(which mkdir) -p $mntPoint
                             $(which mount) $FULL_DISK $mntPoint
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "Disk: $FULL_DISK successfuly mounted"
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  clear
                                  echo "Disk: $FULL_DISK not mounted"
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             echo "$FULL_DISK $mntPoint ufs rw 2 2" >> /etc/fstab                    
                        else 
                             echo "Option not avalible for OS X"
                             read -p "Press [enter] to continue..." ReadDamKey
                             dsk_menu
                        fi
                        echo "Disk: $DISK_NAME has been successfuly configured"
                        echo "System must now reboot"
                        read -p "Reboot system (Y/N) > " ans_reboot
                        if [ "$ans_reboot" = "Y" ]; then
                              echo "The system will reboot now..."
                              read -p "Press [enter] to continue..." ReadDamKey
                              $(which reboot) -f now --verbose; exit
                        else
                              echo "System will not reboot now, disk will not be auto-mounted until next reboot"
                              read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   fi
                   ;;
            lsdisk)
                     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "        COMMAND STATUS                "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING   stdout: yes    stderr: no      "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                  Fileset                Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which fdisk)                        bos.dskmgt.fdisk       exec"
                          echo "Command run: $(which fdisk) -l | $(which tee) /var/log/smx-log/fdisk.log"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Listing disk information"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which fdisk) -l | $(which tee) /var/log/smx-log/fdisk.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "##################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly listed disk information" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which fdisk) -l | $(which tee) /var/log/smx-log/fdisk.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "##################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "##################################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Disk information not listed, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which fdisk) -l | $(which tee) /var/log/smx-log/fdisk.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "##################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "          COMMAND STATUS         "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which diskutil)                    bos.dskmgt.diskutil     exec"
                               echo "Command run: $(which diskutil) list | $(which tee) /var/log/smx-log/diskutil-osx.log"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Listing disk information"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which diskutil) list | $(which tee) /var/log/smx-log/diskutil-osx.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "########################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly listed disks in system" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which diskutil) list | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "########################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not listed disks in system, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which diskutil) list | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else     
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    echo "         COMMAND STATUS                 "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which df)                          bos.dskmgt.df           exec"
                                    echo "Command run: $(which df) -h"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Listing disk information"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which df) -h
                                    if [ $? -eq 0 ]; then
                                         echo "###########################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly listed disks on system" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which df) -h" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "###########################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "###########################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not listed disks on system, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which df) -h" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "##########################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi     
                               fi     
                          fi    
                     fi
                     ;;
            diskinfo)
                       $(which uname) | grep Linux >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Linux"
                            $(which udisks) >> /dev/null
                            if [ $? -eq 0 ]; then
                                 echo "udisks found in PATH"
                            else
                                 clear
                                 cat /proc/version | grep "Red Hat" >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      echo "OS = Red Hat"
                                      $(which yum) -y install udisks | $(which tee) /var/log/smx-log/install-udisks-redhat.log
                                 else
                                      clear
                                      cat /proc/version | grep "Debian" >> /dev/null
                                      if [ $? -eq 0 ]; then
                                           echo "OS = Debian"
                                           $(which apt-get) -y install udisks | $(which tee) /var/log/smx-log/install-udisks-debian.log
                                      else
                                           clear
                                           cat /proc/version | grep "Ubuntu" >> /dev/null
                                           if [ $? -eq 0 ]; then
                                                echo "OS = Ubuntu"
                                                $(which apt-get) -y install udisks | $(which tee) /var/log/smx-log/install-udisks-ubuntu.log
                                           else
                                                clear
                                                cat /proc/version | grep "SUSE" >> /dev/null
                                                if [ $? -eq 0 ]; then
                                                     echo "OS = SuSE"
                                                     $(which zypper) in -y udisks | $(which tee) /var/log/smx-install-udisks-suse.log
                                                fi
                                           fi
                                      fi
                                 fi
                            fi
                            clear
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                            echo "[TOP]                                        [Entry Fields]"
                            printf " Enter /dev/ disk name [/dev/sda1] -------- > "
                            if [ "$diskName" = "" ]; then
                                  DISK_NAME=""
                                  read diskName
                                  DISK_NAME=$diskName
                            fi
                            if [ "$diskName" = "" ]; then
                                  DISK_NAME=""
                                  DISK_NAME=/dev/sda1
                            fi         
                            clear
                            echo "         COMMAND STATUS            "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING     stdout: yes   stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                  Fileset                Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which udisks)                       bos.dskmgt.udisks      exec"
                            echo "Command run: $(which udisks) --show-info $DISK_NAME | $(which tee) /var/log/smx-log/udisks.log"
                            sleep 2
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Listing information for disk: $DISK_NAME"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            $(which udisks) --show-info $DISK_NAME | $(which tee) /var/log/smx-log/udisks.log
                            if [ $PIPESTATUS -eq 0 ]; then
                                 echo "########################################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly displayed information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which udisks) --show-info $DISK_NAME | $(which tee) /var/log/smx-log/udisks.log" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "########################################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "########################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] not displayed information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which udisks) --show-info $DISK_NAME | $(which tee) /var/log/smx-log/udisks.log" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "########################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep Darwin >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = Darwin"
                                 echo "$(date)                                      $(whoami)@$(hostname)"
                                 echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/disk1s1"
                                 echo "[TOP]                                           [Entry Fields]"
                                 printf " Enter /dev/ disk name [/dev/disk0s1] -------- > "
                                 if [ "$diskName" = "" ]; then
                                       DISK_NAME=""
                                       read diskName
                                       DISK_NAME=$diskName
                                 fi
                                 if [ "$diskName" = "" ]; then
                                       DISK_NAME=""
                                       DISK_NAME=/dev/disk0s1
                                 fi         
                                 clear
                                 echo "         COMMAND STATUS          "
                                 echo
                                 echo "$(date)                                      $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no      "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which diskutil)                    bos.dskmgt.diskutil     exec"
                                 echo "Command run: $(which diskutil) info $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log"
                                 sleep 2
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Listing information for disk: $DISK_NAME"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 $(which diskutil) info $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log
                                 if [ $PIPESTATUS -eq 0 ]; then
                                      echo "###################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly displayed information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which diskutil) info $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "###################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "###################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not displayed information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which diskutil) info $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "###################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi
                            else    
                                 echo "Option not avalible for BSD"
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 dsk_menu
                            fi     
                       fi
                       ;;
            fsys)
                   clear
                   echo "$(date)                                     $(whoami)@$(hostname)"
                   echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                   echo "[TOP]                                        [Entry Fields]"
                   printf " Enter /dev/ disk name [/dev/sda1] -------- > "
                   if [ "$diskName" = "" ]; then
                         DISK_NAME=""
                         read diskName
                         DISK_NAME=$diskName
                   fi
                   if [ "$diskName" = "" ]; then
                         DISK_NAME=""
                         DISK_NAME=/dev/sda1
                   fi         
                   clear
                   echo "        COMMAND STATUS                "
                   echo
                   echo "$(date)                                     $(whoami)@$(hostname)"
                   echo
                   echo "Command: RUNNING    stdout: yes   stderr: no      "
                   echo
                   echo "Before command completion, additional instructions may appear below"
                   echo
                   echo "File                                  Fileset                Type"
                   echo "-----------------------------------------------------------------"
                   echo "$(which df)                           bos.dskmgt.df          exec"
                   echo "Command run: $(which df) -T $DISK_NAME | $(which tee) /var/log/smx-log/df.log"
                   sleep 2
                   clear
                   update_spinner
                   sleep 1
                   update_spinner
                   sleep 1
                   update_spinner
                   echo "Displaying filesystem for disk: $DISK_NAME"
                   sleep 1
                   update_spinner
                   sleep 1
                   update_spinner
                   sleep 1
                   update_spinner
                   $(which df) -T $DISK_NAME | $(which tee) /var/log/smx-log/df.log
                   if [ $PIPESTATUS -eq 0 ]; then
                        echo "#######################################################################################" >> /var/log/smx-log/success.log
                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                        echo "[$(date)] Successfuly displayed filesystem information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                        echo "[$(date)] Command run: $(which df) -T $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/success.log
                        echo "" >> /var/log/smx-log/success.log
                        echo "#######################################################################################" >> /var/log/smx-log/success.log
                        echo "" >> /var/log/smx-log/success.log
                        read -p "Press [enter] to continue..." ReadDamKey
                        clear
                        echo
                        cat /var/log/smx-log/success.log | tail -n 7
                        echo
                        read -p "Press [enter] to continue..." ReadDamKey
                   else
                        echo "#########################################################################################" >> /var/log/smx-log/fail.log
                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                        echo "[$(date)] not displayed filesystem information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                      	echo "[$(date)] Command run: $(which df) -T $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/fail.log
                      	echo "" >> /var/log/smx-log/fail.log
                        echo "#########################################################################################" >> /var/log/smx-log/fail.log
                        echo "" >> /var/log/smx-log/fail.log
                        read -p "Press [enter] to continue..." ReadDamKey
                        clear
                        echo
                        cat /var/log/smx-log/fail.log | tail -n 7
                        echo
                        read -p "Press [enter] to continue..." ReadDamKey
                   fi
                   ;;
            mount)
                    clear
              	    echo "$(date)                                     $(whoami)@$(hostname)"
              	    echo "[TOP]                                                 [Entry Fields]"
              	    read -p " Mount or unmount disk ------------ (mount/unmount) > " ans
              	    if [ "$ans" = "mount" ]; then
                          clear
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                          echo "[TOP]                                        [Entry Fields]"
                          printf " Enter /dev/ disk name [/dev/sda1] -------- > "
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                read diskName
                                DISK_NAME=$diskName
                          fi
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                DISK_NAME=/dev/sda1
                          fi        
                          printf " Enter mount point [/mnt/disk] ------------ > "
			  if [ "$mntPoint" = "" ]; then
                	        MNT_POINT=""
                		read mntPoint
                	        MNT_POINT=$mntPoint
                      	  fi
                      	  if [ "$mntPoint" = "" ]; then
                                MNT_POINT=""
				MNT_POINT=/mnt/disk
			  fi		
                          printf " Enter filesystem [ext4] ------------------ > "
                          if [ "$fsysName" = "" ]; then
                                FSYS_NAME=""
                                read fsysName
                                FSYS_NAME=$fsysName
                          fi
                          if [ "$fsysName" = "" ]; then
                                FSYS_NAME=""
                                FSYS_NAME=ext4
                          fi        
                          clear
                          echo "        COMMAND STATUS                    "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "COMMAND: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                          echo "$(which mount)                       bos.dskmgt.mount        exec"
                          echo "$(which df)                          bos.dskmgt.df           exec"
                          echo "Command run: $(which mkdir) -p $MNT_POINT"
                          echo "Command run: $(which mount) -t $FSYS_NAME $DISK_NAME $MNT_POINT"
                          echo "Command run: $(which df) -a -H $DISK_NAME"
                          sleep 2
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Creating mount point: $MNT_POINT"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which mkdir) -p $MNT_POINT
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Mounting disk: $DISK_NAME with filesystem: $FSYS_NAME at: $MNT_POINT"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which mount) -t $FSYS_NAME $DISK_NAME $MNT_POINT
                          if [ $? -eq 0 ]; then
                               echo "#####################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly mounted disk: $DISK_NAME at: $MNT_POINT, filesystem: $FSYS_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which mount) -t $FSYS_NAME $DISK_NAME $MNT_POINT" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "#####################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                    	       echo
			       read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "############################################################################" >> /var/log/smx-log/fail.log
                    	       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not mounted disk: $DISK_NAME, at: $MNT_POINT, check command syntax" >> /var/log/smx-log/fail.log
			       echo "[$(date)] Command run: $(which mount) -t $FSYS_NAME $DISK_NAME $MNT_POINT" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "############################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                               exit 1
                          fi
                          clear
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Displaying disk information for disk: $DISK_NAME"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which df) -a -H $DISK_NAME
                          if [ $? -eq 0 ]; then
                               echo "#####################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly displayed disk info: $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "#####################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                  	  else
                  	       echo "#######################################################################" >> /var/log/smx-log/fail.log
                    	       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
			       echo "[$(date)] Not displayed disk info for: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                    	       echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME" >> /var/log/smx-log/fail.log
                    	       echo "" >> /var/log/smx-log/fail.log
                               echo "#######################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
			  fi
		    else
                	  clear
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                          echo "[TOP]                                        [Enter Fields]"
                          printf " Enter /dev/ disk name [/dev/sda1] -------- > "
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                read diskName
                                DISK_NAME=$diskName
                          fi
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                DISK_NAME=/dev/sda1
                          fi        
                          printf " Enter mount point [/mnt/disk] ------------ > "
                      	  if [ "$mntPoint" = "" ]; then
                       	        MNT_POINT=""
			                          read mntPoint
                                MNT_POINT=$mntPoint
                      	  fi
                    	  if [ "$mntPoint" = "" ]; then
                                MNT_POINT=""
			        MNT_POINT=/mnt/disk
			  fi
                          read -p " Eject disk after unmount (Option not avalible for OS X and BSD) ---------- (Y/N) > " ans	
                          clear
                          echo "         COMMAND STATUS                      "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which umount)                      bos.dskmgt.umount       exec"
                          echo "$(which rm)                          bos.sysmgt.rm           exec"
                          echo "Command run: $(which umount) -f $DISK_NAME"
                          echo "Command run: $(which rm) -rf $MNT_POINT"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Unmounting disk: $DISK_NAME"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which umount) -f $DISK_NAME
                          if [ $? -eq 0 ]; then
                               echo "####################################################" >> /var/log/smx-log/
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly unmounted disk: $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which umount) -f $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "####################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
			  else
                               echo "##############################################################" >> /var/log/smx-log/fail.log
                    	       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not unmounted disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
			       echo "[$(date)] Command run: $(which umount) -f $DISK_NAME" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "##############################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                               exit 1
		 	  fi
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Removing mount point: $MNT_POINT"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
			  $(which rm) -rf $MNT_POINT
                          if [ $? -eq 0 ]; then
                               echo "OS = Linux"
                          else
                               echo "Option not avalible for OS X and BSD"
                               read -p "Press [enter] to continue..." ReadDamKey
                               dsk_menu
                          fi
                          if [ "$ans" = "Y" ]; then
                                $(which udisks) >> /dev/null
      	 		        if [ $? -eq 0 ]; then
                                     echo "udisks found in PATH"
                                else
                                     clear
                                     cat /proc/version | grep "Red Hat" >> /dev/null
                                     if [ $? -eq 0 ]; then
                                          echo "OS = Red Hat"
                                          $(which yum) -y install udisks | $(which tee) /var/log/smx-log/udisks-install-redhat.log
                                     else
                                          clear
                                          cat /proc/version | grep "Debian" >> /dev/null
                                          if [ $? -eq 0 ]; then
                                               echo "OS = Debian"
                                               $(which apt-get) -y install udisks | $(which tee) /var/log/smx-log/udisks-install-debian.log
                                          else
                                               clear
                                               cat /proc/version | grep "Ubuntu" >> /dev/null
                                               if [ $? -eq 0 ]; then
                                                    echo "OS = Ubuntu"
                                                    $(which apt-get) -y install udisks | $(which tee) /var/log/smx-log/udisks-install-ubuntu.log
                                               else
                                                    clear
                                                    cat /proc/version | grep "SUSE" >> /dev/null
                                                    if [ $? -eq 0 ]; then
                                                         echo "OS = SuSE"
                                                         $(which zypper) in -y udisks | $(which tee) /var/log/smx-log/udisks-install-suse.log
                                                    fi
                                               fi
                                          fi
                                     fi
                                fi
                                clear
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "Disk must be full device, example: /dev/sda"
                                echo "[TOP]                                       [Entry Fields]"
                                printf " Enter /dev/ disk name [/dev/sda] -------- > "
                                if [ "$diskName" = "" ]; then
                                      DISK_NAME=""
                                      read diskName
                                      DISK_NAME=$diskName
                                fi
                                if [ "$diskName" = "" ]; then
                                      DISK_NAME=""
                                      DISK_NAME=/dev/sda
                                fi
                                clear
                                echo "         COMMAND STATUS                    "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which udisks)                      bos.dskmgt.udisks       exec"
                                echo "Command run: $(which udisks) --detach $DISK_NAME"
                                sleep 2
                                clear
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Detaching disk: $DISK_NAME from system"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                $(which udisks) --detach $DISK_NAME
                                if [ $? -eq 0 ]; then
                                     echo "###########################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly detached disk: $DISK_NAME from system" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which udisks) --detach $DISK_NAME" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "###########################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "#########################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not detached disk: $DISK_NAME from system, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which udisks) --detach $DISK_NAME" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "#########################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                fi             
            		  fi
		    fi
            	    ;;
	    rename)
		     if [ $? -eq 0 ]; then
			  clear
                          echo "OS = Linux"
                          $(which mlabel) >> /dev/null
                          if [ $? -eq 0 ]; then
                               echo "mlabel found in PATH"
                          else
                               clear
                               cat /proc/version | grep "Red Hat" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    echo "OS = Red Hat"
                                    $(which yum) -y install mlabel | $(which tee) /var/log/smx-log/mlabel-install-redhat.log
                               else
                                    clear
                                    cat /proc/version | grep "Debian" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         echo "OS = Debian"
                                         $(which apt-get) -y install mlabel | $(which tee) /var/log/smx-log/mlabel-install-debian.log
                                    else
                                         clear
                                         cat /proc/version | grep "Ubuntu" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              echo "OS = Ubuntu"
                                              $(which apt-get) -y install mlabel | $(which tee) /var/log/smx-log/mlabel-install-ubuntu.log
                                         else
                                              clear
                                              cat /proc/version | grep "SUSE" >> /dev/null
                                              if [ $? -eq 0 ]; then
                                                   echo "OS = SuSE"
                                                   $(which zypper) in -y mlabel | $(which tee) /var/log/smx-log/mlabel-install-suse.log
                                              fi
                                         fi
                                    fi
                               fi
                          fi
                          clear
                          echo "$(date)                                    $(whoami)@$(hostname)"
                          echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must have the disk slice, ie /dev/sda1"
                          echo "Disk must be mounted in a graphical session, will not work in a remote session"
                          echo "[TOP]                                        [Entry Fields]"
                          printf " Enter /dev/ disk name /dev/sda1] --------- > "
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                read diskName
                                DISK_NAME=$diskName
                          fi
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                DISK_NAME=/dev/sda1
                          fi       
                          read -p " Enter disk lable ---------- > " diskLabel
                          clear
                          echo "        COMMAND STATUS                "
                          echo
                          echo "$(date)                                    $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING     stdout: yes    stderr: no   "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                  Fileset                Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which mlabel)                       bos.dskmgt.mlabel      exec"
                          echo "$(which df)                           bos.dskmgt.df          exec"
                          echo "Command run: $(which mlabel) -i ::$diskLabel $DISK_NAME"
                          echo "Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log"
                          sleep 2
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Renaming disk: $DISK_NAME to: $diskLabel"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which mlabel) -i ::$diskLabel $DISK_NAME
                          if [ $? -eq 0 ]; then
                               echo "#################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly renamed disk: $DISK_NAME to: $diskLabel" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which mlabel) -i ::$diskLabel $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "#################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "###########################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not renamed disk: $DISK_NAME to: $diskLabel, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which mlabel) -i ::$diskLabel $DISK_NAME" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "###########################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                               exit 1
                          fi  
                          clear
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Displaying information for disk: $DISK_NAME"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "##########################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly displayed filesystem information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "##########################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "##########################################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not displayed filesystem information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "##########################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep Darwin
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "Must have real disk name, ie /Volumes/USB"
                               echo "Disk must be mounted in a graphical session, will not work in a remote session"
                               echo "[TOP]                                     [Entry Fields]"
                               read -p " Enter disk name ---------------------- > " diskName
                               read -p " Enter disk lable --------------------- > " diskLabel
                               clear
                               echo "         COMMAND STATUS                       "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout    stderr: mo          "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which diskutil)                    bos.dskmgt.diskutil     exec"
                               echo "Command run: $(which diskutil) rename /Volumes/$diskName $diskLabel"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Renaming disk: $diskName as: $diskLabel"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which diskutil) rename /Volumes/$diskName $diskLabel
                               if [ $? -eq 0 ]; then
                                    echo "###################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly renamed disk: $diskName to: $diskLabel" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which diskutil) rename /Volumes/$diskName $diskLabel" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "###################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not renamed disk: $diskName, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which diskutil) rename /Volumes/$diskName $diskLabel" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               echo "Option not avalible for BSD"
                               read -p "Press [enter] to continue..." ReadDamKey
                               dsk_menu
                          fi           
                     fi
            	     ;;
	    mkfs)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                        echo "Disk must be mounted for system use, use the mount command"
                        echo "Filesystem type example: msdos, ext4, etc"
                        echo "[TOP]                                        [Entry Fields]"
                        printf " Enter /dev/ disk name [/dev/sda1] -------- > "
                        if [ "$diskName" = "" ]; then
                              DISK_NAME=""
                              read diskName
                              DISK_NAME=$diskName
                        fi
                        if [ "$diskName" = "" ]; then
                              DISK_NAME=""
                              DISK_NAME=/dev/sda1
                        fi         
                        printf " Enter filesystem name [ext4] ------------- > "
                        if [ "$fsysName" = "" ]; then
                              FSYS_NAME=""
                              read fsysName
                              FSYS_NAME=$fsysName
                        fi
                        if [ "$fsysName" = "" ]; then
                              FSYS_NAME=""
                              FSYS_NAME=ext4
                        fi         
                        clear
                        echo "        COMMAND STATUS                "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING     stdout: yes    stderr: no    "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                Type"
                        echo "----------------------------------------------------------------"
                        echo "$(which mkfs)                        bos.dskmgt.mkfs        exec"
                        echo "$(which df)                          bos.dskmgt.df          exec"
                        echo "Command run: $(which mkfs) -t $FSYS_NAME $DISK_NAME"
                        echo "Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log"
                        sleep 2
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Creating new filesystem: $FSYS_NAME on disk: $DISK_NAME"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which mkfs) -t $FSYS_NAME $DISK_NAME
                        if [ $? -eq 0 ]; then
                             echo "########################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly created filesystem: $FSYS_NAME on disk: $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which mkfs) -t $FSYS_NAME $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "########################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "######################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not created filesystem: $FSYS_NAME on disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which mkfs) -t $FSYS_NAME $DISK_NAME" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "######################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        clear
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Displaying information for disk: $DISK_NAME"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log
                        if [ $PIPESTATUS -eq 0 ]; then
                             echo "##########################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly displayed filesystem information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##########################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "##########################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not displayed filesystem information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "##########################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep Darwin >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = OS X"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, yom must also have the disk slice, ie /dev/disk1s1"
                             echo "Supported filesystems: msdos, ufs, hfs, and ntfs (requires ntfs-3g)"
                             echo "Disk must be unmounted but not removed from system"
                             echo "[TOP]                                           [Entry Fields]"
                             printf " Enter /dev/ disk name [/dev/disk0s1] -------- > "
                             if [ "$diskName" = "" ]; then
                                   DISK_NAME=""
                                   read diskName
                                   DISK_NAME=$diskName
                             fi
                             if [ "$diskName" = "" ]; then
                                   DISK_NAME=""
                                   DISK_NAME=/dev/disk0s1
                             fi         
                             printf " Enter filesystem [HFS+] --------------------- > "
                             if [ "$fsysName" = "" ]; then
                                   FSYS_NAME=""
                                   read fsysName
                                   FSYS_NAME=$fsysName
                             fi
                             if [ "$fsysName" = "" ]; then
                                   FSYS_NAME=""
                                   FSYS_NAME=HFS+
                             fi     
                             clear
                             echo "         COMMAND STATUS                     "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which newfs)                       bos.dskmgt.newfs        exec"
                             echo "Command run: $(which newfs_$FSYS_NAME) $DISK_NAME"
                             sleep 2
                             read -p "Is the disk unmounted (Y/N) -> " ans
                             if [ "$ans" = "Y" ]; then
                                   echo "Disk: $DISK_NAME unmounted"
                             else
                                   $(which umount) -f $DISK_NAME
                             fi
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Creating new filesystem: $FSYS_NAME on disk: $DISK_NAME"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which newfs_$FSYS_NAME) $DISK_NAME
                             if [ $? -eq 0 ]; then
                                  echo "#############################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly created $FSYS_NAME filesystem on disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which newfs_$FSYS_NAME) $DISK_NAME" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#############################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "###########################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not created $FSYS_NAME filesystem on disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which newfs_$FSYS_NAME) $DISK_NAME" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "###########################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                        else
                             $(which uname) | grep BSD >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "Filesystem: 1 = UFS1, 2 = UFS2"
                                  echo "[TOP]                                            [Entry Fields]"
                                  printf " Enter /dev/ disk name [/dev/ada0s1a] --------- > "
                                  if [ "$diskName" = "" ]; then
                                        DISK_NAME=""
                                        read diskName
                                        DISK_NAME=$diskName
                                  fi
                                  if [ "$diskName" = "" ]; then
                                        DISK_NAME=""
                                        DISK_NAME=/dev/ada0s1a
                                  fi  
                                  printf " Enter new filesystem [1 (UFS1)] -------------- > "
                                  if [ "$fsysName" = "" ]; then
                                        FSYS_NAME=""
                                        read fsysName
                                        FSYS_NAME=$fsysName
                                  fi
                                  if [ "$fsysName" = "" ]; then
                                        FSYS_NAME=""
                                        FSYS_NAME=1
                                  fi
                                  read -p " Enter new volume name ----------------------- > " diskName
                                  clear
                                  echo "         COMMAND STATUS               "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which newfs)                       bos.dskmgt.newfs        exec"
                                  echo "Command run: $(which newfs) -E -L $diskName -O $FSYS_NAME $DISK_NAME"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Creating new filesystem: $FSYS_NAME on disk: $DISK_NAME"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which newfs) -E -L $diskName -O $FSYS_NAME $DISK_NAME
                                  if [ $? -eq 0 ]; then
                                       echo "##############################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly created new filesystem on disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which newfs) -E -L $diskName -o $FSYS_NAME $DISK_NAME" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "##############################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "##############################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not created new filesystem on disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which newfs) -E -L $diskName -O $FSYS_NAME $DISK_NAME" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "##############################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi          
                             fi
                        fi
                   fi    
                   ;;
	    chdisk)
		     clear
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                     echo "[TOP]                                        [Entry Fields]"
                     printf " Enter /dev/ disk name [Default: /dev/sda1] > "
                     if [ "$diskName" = "" ]; then
                           DISK_NAME=""
                           read diskName
                           DISK_NAME=$diskName
                     fi
                     if [ "$diskName" = "" ]; then
                           DISK_NAME=""
                           DISK_NAME=/dev/sda1
                     fi       
                     clear
                     echo "        COMMAND STATUS                "
                     echo
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING     stdout: yes     stderr: no   "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "File                                  Fileset                Type"
                     echo "-----------------------------------------------------------------"
                     echo "$(which fsck)                         bos.dskmgt.fsck        exec"
                     echo "Command run: $(which fsck) $DISK_NAME"
                     sleep 2
                     clear
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     echo "Performing disk check on disk: $DISK_NAME"
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     $(which fsck) $DISK_NAME
                     if [ $? -eq 0 ]; then
                          echo "###############################################" >> /var/log/smx-log/success.log 
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly checked disk: $DISK_NAME" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which fsck) $DISK_NAME" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "###############################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue.." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
		     else 
                          echo "############################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not checked disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which fsck) $DISK_NAME" >> /var/log/smx-log/fail.log
                          echo "Error output information: $ERROR_HANDLE" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "############################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
		     fi 
                     ;;
    	    format)
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                          echo "[TOP]                                       [Entry Fields]"
                          printf " Enter /dev/ disk name [/dev/sda1] ------- > "
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                read diskName
                                DISK_NAME=$diskName
                          fi
                          if [ "$diskName" = "" ]; then
                                DISK_NAME=""
                                DISK_NAME=/dev/sda1
                          fi       
                          read -p " Enter disk lable ------------------------ > " diskLabel
                          clear
                          echo "        COMMAND STATUS                "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING     stdout: yes     stderr: no   "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                  Fileset                Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which mkdosfs)                      bos.dskmgt.mkdosfs     exec"
                          echo "$(which df)                           bos.dskmgt.df          exec"
                          echo "Command run: $(which mkdosfs) -n '$diskLabel' -I $DISK_NAME"
                          echo "Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log"
                          sleep 2
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Formatting disk: $DISK_NAME with msdos filesystem with name: $diskLabel"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which mkdosfs) -n '$diskLabel' -I $DISK_NAME
                          if [ $? -eq 0 ]; then
                               echo "###################################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly created msdos filesystem on disk: $DISK_NAME, with new disk lable: $diskLabel" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which mkdosfs) -n '$diskLabel' -I $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "###################################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else 
                               echo "##########################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not created filesystem on disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which mkdosfs) -n '$diskLabel' -I $DISK_NAME" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "##########################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                               exit 1
                          fi 
                          clear
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Displaying information for disk: $DISK_NAME"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "##########################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly displayed filesystem information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "##########################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "##########################################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not displayed filesystem information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "##########################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi     
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               echo "OS = OS X"
                               clear
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/disk1s1"
                               echo "Valid filesystems: fat32, fat16, and HFS+"
                               echo "[TOP]                                      [Entry Fields]"
                               printf " Enter /dev/ disk [/dev/disk0s1] -------- > "
                               if [ "$diskName" = "" ]; then
                                     DISK_NAME=""
                                     read diskName
                                     DISK_NAME=$diskName
                               fi
                               if [ "$diskName" = "" ]; then
                                     DISK_NAME=""
                                     DISK_NAME=/dev/disk0s1
                               fi
                               printf " Enter new filesystem [HFS+] ------------ > "
                               if [ "$fsysName" = "" ]; then
                                     FSYS_NAME=""
                                     read fsysName
                                     FSYS_NAME=$fsysName
                               fi
                               if [ "$fsysName" = "" ]; then
                                     FSYS_NAME=""
                                     FSYS_NAME=HFS+
                               fi       
                               printf " Enter new disk lable [Disk1] ----------- > "
                               if [ "$newName" = "" ]; then
                                     NEW_NAME=""
                                     read newName
                                     NEW_NAME=$newName
                               fi
                               if [ "$newName" = "" ]; then
                                     NEW_NAME=""
                                     NEW_NAME=Disk1
                               fi       
                               clear
                               echo "         COMMAND STATUS                  "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr         "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which diskutil)                    bos.dskmgt.diskutil     exec"
                               echo "Command run: $(which diskutil) eraseVolume $FSYS_NAME $NEW_NAME $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Eraseing disk: $DISK_NAME, with filesystem: $FSYS_NAME as: $NEW_NAME"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which diskutil) eraseVolume $FSYS_NAME "$NEW_NAME" $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "###############################################################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly formated disk: $DISK_NAME with $NEW_NAME as $FSYS_NAME" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which diskutil) eraseVolume $FSYS_NAME $NEW_NAME $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "###############################################################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###############################################################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not formated disk: $DISK_NAME with $NEW_NAME as $FSYS_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which diskutil) eraseVolume $FSYS_NAME $NEW_NAME $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###############################################################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "Filesystem: 1 = UFS1, 2 = UFS2"
                                    echo "[TOP]                                   [Entry Fields]"
                                    printf " Enter /dev/ disk [/dev/ada0] -------- > "
                                    if [ "$diskName" = "" ]; then
                                          DISK_NAME=""
                                          read diskName
                                          DISK_NAME=$diskName
                                    fi
                                    if [ "$diskName" = "" ]; then
                                          DISK_NAME=""
                                          DISK_NAME=/dev/ada0
                                    fi
                                    printf " Enter new filesystem type [1 (UFS1)] > "
                                    if [ "$fsysName" = "" ]; then
                                          FSYS_NAME=""
                                          read fsysName
                                          FSYS_NAME=$fsysName
                                    else
                                          FSYS_NAME=""
                                          FSYS_NAME=/dev/ada0
                                    fi
                                    read -p " Enter new disk name --------------- > " diskLabel
                                    clear
                                    echo "         COMMAND STATUS                    "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                  Type"
                                    echo "------------------------------------------------------------------"
                                    echo "$(which gpart)                       bos.dskmgt.gpart         exec"
                                    echo "$(which dd)                          bos.dskmgt.dd            exec"
                                    echo "$(which fdisk)                       bos.dskmgt.fdisk         exec"
                                    echo "$(which bsdlabel)                    bos.dskmgt.bsdlabel      exec"
                                    echo "$(which newfs)                       bos.dskmgt.newfs         exec"
                                    echo "$(which mount)                       bos.dskmgt.mount         exec"
                                    echo "Command run: $(which gpart) destroy $DISK_NAME"
                                    echo "Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=1m count=128"
                                    echo "Command run: $(which fdisk) -BI $DISK_NAME"
                                    echo "Command run: $(which bsdlabel) -wB $DISK_NAMEs1"
                                    echo "Command run: $(which newfs) -O $FSYS_NAMEs1a -U -L $diskLabel"
                                    echo "Command run: $(which mount) $DISK_NAMEs1a /mnt"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Eraseing disk: $DISK_NAME, with filesystem: $FSYS_NAME as: $NEW_NAME"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which gpart) destroy $DISK_NAME
                                    if [ $? -eq 0 ]; then
                                         echo "#############################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly erased disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which gpart) destroy $DISK_NAME" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "#############################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#############################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not erased disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which gpart) destroy $DISK_NAME" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "#############################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                                    $(which dd) if=/dev/zero of=$DISK_NAME bs=1m count=128
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "disk: $DISK_NAME success zeroed out"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         clear
                                         echo "disk: $DISK_NAME not zeroed out"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    $(which fdisk) -BI $DISK_NAME
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "successfuly made disk: $DISK_NAME bootable"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         clear
                                         echo "disk: $DISK_NAME not bootable"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    $(which bsdlabel) -wB $DISK_NAMEs1
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "successfuly labled disk: $DISK_NAME"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         clear
                                         echo "disk: $DISK_NAME not given lable"
                                         read -p "Press [enter] to continue..."
                                         exit 1
                                    fi
                                    $(which newfs) -O $FSYS_NAME -U $DISK_NAMEs1a
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "successfuly created new on disk: $DISK_NAMEs1a"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "not created new filesystem on disk: $DISK_NAME"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    $(which mount) $DISK_NAMEs1a
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "disk: $DISK_NAMEs1a successfuly mounted"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         clear
                                         echo "disk: $DISK_NAMEs1a not mounted"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi          
                               fi
                          fi
                     fi
                     # ignore the missing fi statement, problem with running dd(1) is that it uses if for if=/dev/zero
		     # some editors will pick it up, however, other editors such as Emacs won't notice
                     ##
                     ;;
            erasedod)
                       $(which uname) | grep Linux
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Linux"
                            $(which shred) >> /dev/null
                            if [ $? -eq 0 ]; then
                                 echo "shred found in PATH"
                            else 
                                 clear
                                 cat /proc/version | grep "Red Hat" >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      echo "OS = Red Hat"
                                      $(which yum) -y install shred | $(which tee) /var/log/smx-log/shred-install-redhat.log
                                 else
                                      clear
                                      cat /proc/version | grep "Debian" >> /dev/null
                                      if [ $? -eq 0 ]; then
                                           echo "OS = Debian"
                                           $(which apt-get) -y install shred | $(which tee) /var/log/smx-log/shred-install-debian.log
                                      else    
                                           clear
                                           cat /proc/version | grep "Ubuntu" >> /dev/null
                                           if [ $? -eq 0 ]; then
                                                echo "OS = Ubuntu"
                                                $(which apt-get) -y install shred | $(which tee) /var/log/smx-log/shred-install-ubuntu.log
                                           else
                                                clear
                                                cat /proc/version | grep "SUSE" >> /dev/null
                                                if [ $? -eq 0 ]; then
                                                     echo "OS = SuSE"
                                                     $(which zypper) in -y shred | $(which tee) /var/log/smx-log/shred-install-suse.log
                                                fi
                                           fi
                                      fi
                                 fi
                            fi
                            clear
                            echo "$(date)                                    $(whoami)@$(hostname)"
                            echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/sda1"
                            echo "[TOP]                                        [Entry Fields]"
                            printf " Enter /dev/ disk name [/dev/sda1] -------- > "
                            if [ "$diskName" = "" ]; then
                                  DISK_NAME=""
                                  read diskName
                                  DISK_NAME=$diskName
                            fi
                            if [ "$diskName" = "" ]; then
                                  DISK_NAME=""
                                  DISK_NAME=/dev/sda1
                            fi         
                            clear
                            echo "        COMMAND STATUS                 "
                            echo
                            echo "$(date)                                    $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING     stdout: yes    stderr: no   "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                  Fileset                Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which shred)                        bos.dskmgt.shred       exec"
                            echo "$(which df)                           bos.dskmgt.df          exec"
                            echo "Command run: $(which shred) -xfz -n 10 $DISK_NAME | $(which tee) /var/log/smx-log/shred.log"
                            echo "Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/shred.log"
                            sleep 2
                            clear
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Eraseing disk: $DISK_NAME to DoD standards"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            $(which shred) -vfz -n 10 $DISK_NAME | $(which tee) /var/log/smx-log/shred.log
                            if [ $PIPESTATUS -eq 0 ]; then
                                 echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly erased all data on disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which shred) -vfz -n 10 $DISK_NAME | $(which tee) /var/log/smx-log/shred.log" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not erased disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which shred) -vfz -n 10 $DISK_NAME | $(which tee) /var/log/smx-log/shred.log" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 exit 1
                            fi
                            clear
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Displaying information for disk: $DISK_NAME"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log
                            if [ $PIPESTATUS -eq 0 ]; then
                                 echo "##########################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly displayed filesystem information for disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "##########################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not displayed filesystem information for disk: $DISK_NAME, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which df) -a -H $DISK_NAME | $(which tee) /var/log/smx-log/df.log" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep Darwin >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = OS X"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "Path must be /dev/<diskName>, use lsdisk to get /dev/ path, you must also have the disk slice, ie /dev/disk1s1"
                                 echo "Erase Levels: "
                                 echo "1 - single-pass"
                                 echo "2 - US DoD 7-pass"
                                 echo "3 - Gutmann 35-pass"
                                 echo "[TOP]                                                    [Entry Fields]"
                                 printf " Enter erase level [1 (single-pass)] ------------------ > "
                                 if [ "$eraseLevel" = "" ]; then
                                       ERASE_LEVEL=""
                                       read eraseLevel
                                       ERASE_LEVEL=$eraseLevel
                                 fi
                                 if [ "$eraseLevel" = "" ]; then
                                       ERASE_LEVEL=""
                                       ERASE_LEVEL=1
                                 fi         
                                 printf " Enter /dev/ disk name [/dev/disk0s1] ----------------- > "
                                 if [ "$diskName" = "" ]; then
                                       DISK_NAME=""
                                       read diskName
                                       DISK_NAME=$diskName
                                 fi
                                 if [ "$diskName" = "" ]; then
                                       DISK_NAME=""
                                       DISK_NAME=/dev/disk0s1
                                 fi         
                                 clear
                                 echo "         COMMAND STATUS                    "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which diskutil)                    bos.dskmgt.diskutil     exec"
                                 echo "Command run: $(which diskutil) secureErase $ERASE_LEVEL $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Eraseing disk: $DISK_NAME to DoD standards with: $ERASE_LEVEL erase level"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which diskutil) secureErase $ERASE_LEVEL $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log
                                 if [ $PIPESTATUS -eq 0 ]; then
                                      echo "#######################################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly erased disk: $DISK_NAME with erase level: $ERASE_LEVEL" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which diskutil) secureErase $ERASE_LEVEL $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "#######################################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "#######################################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not erased disk: $DISK_NAME with erase level: $ERASE_LEVEL, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which diskutil) secureErase $ERASE_LEVEL $DISK_NAME | $(which tee) /var/log/smx-log/diskutil-osx.log" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "#######################################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi
                            else
                                 $(which uname) | grep BSD
                                 if [ $? -eq 0 ]; then
                                      clear
                                      echo "OS = BSD"
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "[TOP]                                     [Entry Fields]"
                                      printf " Enter /dev/ disk name [/dev/ada0] ------ > "
                                      if [ "$diskName" = "" ]; then
                                            DISK_NAME=""
                                            read diskName
                                            DISK_NAME=$diskName
                                      fi
                                      if [ "$diskName" = "" ]; then
                                            DISK_NAME=""
                                            DISK_NAME=/dev/ada0
                                      fi
                                      clear
                                      echo "              COMMAND STATUS                  "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which dd)                          bos.dskmgt.dd           exec"
                                      echo "Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=1"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Eraseing disk: $DISK_NAME"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1 
                                      $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=1
                                      if [ $? -eq 0 ]; then
                                           echo "############################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly erased disk: $DISK_NAME" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=1" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "############################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "############################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not erased disk: $DISK_NAME" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which dd) if=/dev/zero of=$DISK_NAME bs=64k count=1" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "############################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi                     
                                 fi
                            fi
                       fi
                       # ignore the missing fi statement, problem with running dd(1) is that it uses if for if=/dev/zero
		       # Some editors will pick this up, other editors such as Emacs will not
                       ##
                       ;;
            help)
                   echo "init > Initialize a new disk"
                   echo "lsdisk > List disks on the system"
                   echo "diskinfo > Get information on a disk"
                   echo "fsys > Get filesystem information"
                   echo "mount > Mount or unmount a disk for use"
                   echo "rename > Rename a disk"
                   echo "mkfs > create new filesystem"
                   echo "chdisk > Perform disk check"
                   echo "format > Format disk"
                   echo "erasedod > Erase disk to DoD standards"
                   echo "help > This menu"
                   echo "exit > Return to main menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey;;          
	    exit)
                   clear
	           echo "########################################################" >> /var/log/smx-log/exit.log
              	   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
              	   echo "[$(date)] Successfuly terminated $(basename $0)/dsk_menu" >> /var/log/smx-log/exit.log
              	   echo "" >> /var/log/smx-log/exit.log
                   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
              	   main_menu
              	   ;;
	    exit-mas)
              	       clear
              	       echo "###########################################" >> /var/log/smx-log/exit.log
        	       echo  "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
            	       echo "###########################################" >> /var/log/smx-log/exit.log
            	       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
    	    *)  clear
              	echo "        COMMAND STATUS                 "
              	echo
              	echo "$(date)                                     $(whoami)@$(hostname)"
              	echo
              	echo "Command: FAIL     stdout: yes     stderr: no      "
              	echo
              	echo "Before command completion, additional information may appear below"
              	echo
              	echo "Command unknown, please consult command list, executed with pid - 2415 (0x1)"
              	read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done    
}

function sys_menu() {
    while :
    do
	clear
        echo "$(date)                                     $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/sys_menu # " choice_sys
        echo
    	
        case "$choice_sys" in
  	    sysproc)
		      clear
              	      echo "$(date)                                     $(whoami)@$(hostname)"
              	      echo "[TOP]                           [Entry Felds]"
              	      read -p " Enter process name ---------- > " procName
              	      clear
              	      echo "            COMMAND STATUS                 "
              	      echo
              	      echo "$(date)                                     $(whoami)@$(hostname)"
              	      echo
              	      echo "Command: RUNNING     stdout: yes    stderr: no    "
              	      echo
              	      echo "Before command completion, additional instructions may appear below"
              	      echo
              	      echo "File                                  Fileset                Type"
              	      echo "-----------------------------------------------------------------"
              	      echo "$(which ps)                           bos.sysmgt.ps          exec"
              	      echo "Command run: $(which ps) auxwww | $(which grep) $procName | $(which tee) /var/log/smx-log/ps.log"
              	      update_spinner
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
                      echo "Displaying process information for process: $procName"
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
                      sleep 1 
              	      $(which ps) auxwww | $(which grep) $procName | $(which tee) /var/log/smx-log/ps.log
		      if [ $PIPESTATUS -eq 0 ]; then
                           echo "###################################################################################################################" >> /var/log/smx-log/success.log
                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                           echo "[$(date)] Successfuly displayed process: $procName" >> /var/log/smx-log/success.log
                           echo "[$(date)] Command run: $(which ps) auxwww | /usr/bin/$(which grep) $procName | $(which tee) /var/log/smx-log/ps.log" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           echo "###################################################################################################################" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/success.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
		      else
                           echo "##########################################################################################################" >> /var/log/smx-log/fail.log
			   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                           echo "[$(date)] Not displayed process: $procName, check command syntax" >> /var/log/smx-log/fail.log
                  	   echo "[$(date)] Command run: $(which ps) auxwww | $(which grep) $procName | $(which tee) /var/log/smx-log/ps.log" >> /var/log/smx-log/fail.log
                  	   echo "" >> /var/log/smx-log/fail.log
                           echo "##########################################################################################################" >> /var/log/smx-log/fail.log
                           echo "" >> /var/log/smx-log/fail.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/fail.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
                           exit 1
		      fi
                      read -p "Kill Process ... Y / N > " ans
                      if [ "$ans" == "Y" ]; then
                            clear
                            echo "           COMMAND STATUS                         "
                            echo
                            echo "$(date)                                   $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING      stdout: yes     stderr: no "
                            echo
                            echo "Before command conpletion, additional instructions may appear below"
                            echo
                            echo "File                                  Fileset                Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which kill)                         bos.sysmgt.kill        exec"
                            echo "Command run: $(which kill) -9 `$(which ps) -ef | $(which grep) $procName | $(which grep) -v $(which grep) | $(which awk) '{print $2}'`"
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Killing process: $procName"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1 
                            $(which kill) -9 `$(which ps) -ef | $(which grep) $procName | $(which grep) -v $(which grep) | $(which awk) '{print $2}'`
                            if [ $? -eq 0 ]; then
                                 echo "################################################################################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly killed process: $procName" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which kill) -9 `$(which ps) -ef | $(which grep) $procName | $(which grep) -v $(which grep) | $(which awk) '{print $2}'`" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "################################################################################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
			    else
				 echo "################################################################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not killed process: $procName, check command syntax" >> /var/log/smx-log/fail.log
				 echo "[$(date)] Command run: $(which kill) -9 `$(which ps) -ef | $(which grep) $procName | $(which grep) -v $(which grep) | $(which awk) '{print $2}'`" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "################################################################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
			    fi
      		      else
                            read -p "Press [enter] to continue..." ReadDamKey
                      fi
                      ;;
	    sysio)
		    $(which iostat) >> /dev/null
                    if [ $? -eq 0 ]; then
                         echo "iostat found in PATH"
        	    else
                         clear
                         cat /proc/version | grep "Red Hat" >> /dev/null
                         if [ $? -eq 0 ]; then
                              echo "OS = Red Hat"
                              $(which yum) -y install sysstat | $(which tee) /var/log/smx-log/sysstat-install-redhat.log
                         else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
                                   echo "OS = Debian"
                                   $(which apt-get) -y install sysstat | $(which tee) /var/log/smx-log/sysstat-install-debian.log
                              else
                                   clear
                                   cat /proc/version | grep "Ubuntu" >> /dev/null
                                   if [ $? -eq 0 ]; then
                                        echo "OS = Ubuntu"
                                        $(which apt-get) -y install sysstat | $(which tee) /var/log/smx-log/sysstat-install-ubuntu.log
                                   else
                                        clear
                                        cat /proc/version | grep "SUSE" >> /dev/null
                                        if [ $? -eq 0 ]; then
                                             echo "OS = SuSE"
                                             $(which zypper) in -y sysstat | $(which tee) /var/log/smx-log/sysstat-install-suse.log
                                        fi
                                   fi 
			      fi
			 fi
		    fi
                    clear
                    echo "        COMMAND STATUS                "
                    echo
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo
                    echo "Command: RUNNING     stdout: yes     stderr: no   "
                    echo
                    echo "Before command completion, additional instructions may appear below"
                    echo
                    echo "File                                  Fileset                Type"
                    echo "-----------------------------------------------------------------"
                    echo "$(which iostat)                       bos.sysmgt.iostat      exec"
                    echo "Command run: $(which iostat) | $(which tee) /var/log/smx-log/iostat.log"
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Displaying I/O status"
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    $(which iostat) | $(which tee) /var/log/smx-log/iostat.log
                    if [ $PIPESTATUS -eq 0 ]; then
                         echo "#################################################################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly displayed system IO stats" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which iostat) | $(which tee) /var/log/smx-log/iostat.log" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "#################################################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
		    else
                         echo "#################################################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not displayed system IO stats, check command syntax" >> /var/log/smx-log/fail.log
			 echo "[$(date)] Command run: $(which iostat) | $(which tee) /var/log/smx-log/iostat.log" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         echo "#################################################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
		    fi
                    ;;
	    vmstatus)
		       $(which vmstat) >> /dev/null
                       if [ $? -eq 0 ]; then
                            echo "vmstat found in PATH"
    		       else
                            clear
                            cat /proc/version | grep "Red Hat" >> /dev/null
                            if [ $? -eq 0 ]; then
                                 echo "OS = Red Hat"
                                 $(which yum) -y install sysstat | $(which tee) /var/log/smx-log/sysstat-install-redhat.log
			    else
				 clear
                                 cat /proc/version | grep "Debian" >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      echo "OS = Debian"
                                      $(which apt-get) -y install sysstat
                                 else
                                      clear
                                      cat /proc/version | grep "Ubuntu" >> /dev/null
                                      if [ $? -eq 0 ]; then
                                           echo "OS = Ubuntu"
                                           $(which apt-get) -y install sysstat | $(which tee) /var/log/smx-log/sysstat-install-ubuntu.log
                                      else
                                           clear
                                           cat /proc/version | grep "SUSE" >> /dev/null
                                           if [ $? -eq 0 ]; then
                                                echo "OS = SuSE"
                                                $(which zypper) in -y sysstat | $(which tee) /var/log/smx-log/sysstat-install-suse.log
                                           fi
                                      fi
                                 fi
			    fi
		       fi
                       clear
                       echo "       COMMAND STATUS       "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                 Fileset                 Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which vmstat)                      bos.sysmgt.vmstat       exec"
                       echo "Command run: $(which vmstat) 2 6 -a | $(which tee) /var/log/smx-log/vmstat.log"
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Displaying virtual memory status"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       $(which vmstat) 2 6 -a | $(which tee) /var/log/smx-log/vmstat.log
                       if [ $PIPESTATUS -eq 0 ]; then
                            echo "########################################################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly displayed virtual memory status" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which vmstat) 2 6 -a | $(which tee) /var/log/smx-log/vmstat.log" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "########################################################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
		       else
                            echo "########################################################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at:$(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not displayed virtual memory status, check command syntax" >> /var/log/smx-log/fail.log
			    echo "[$(date)] Command run: $(which vmstat) 2 6 -a | $(which tee) /var/log/smx-log/vmstat.log" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "########################################################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
  		       fi
                       ;;
	    shell)
		    clear
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo "[TOP]                                        [Entry Fields]"
                    printf " Enter shell [$(which bash)] -------------- > "
                    if [ "$rootShell" = "" ]; then
                          ROOT_SHELL=""
                          read rootShell
                          ROOT_SHELL=$rootShell
                    fi
                    if [ "$rootShell" = "" ]; then
                          ROOT_SHELL=""
                          ROOT_SHELL=$(which bash)
                    fi      
              	    echo "        COMMAND STATUS                "
              	    echo
              	    echo "$(date)                                     $(whoami)@$(hostname)"
              	    echo
              	    echo "Command: RUNNING     stdout: yes    stderr: no   "
              	    echo
              	    echo "Before command completion, additional instructions may appear below"
              	    echo
              	    echo "File                                  Fileset                Type"
              	    echo "-----------------------------------------------------------------"
              	    echo "$ROOT_SHELL                           bos.sysmgt.shell       exec"
              	    echo "Command run: $ROOT_SHELL"
              	    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    echo "Starting root shell: $ROOT_SHELL"
                    sleep 1                       
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
                    update_spinner
                    sleep 1
              	    $ROOT_SHELL
		    if [ $? -eq 0 ]; then
			 echo "#########################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly accessed root shell" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $ROOT_SHELL" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "#########################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                      	 echo
                      	 cat /var/log/smx-log/success.log | tail -n 7
                      	 echo
                      	 read -p "Press [enter] to continue..." ReadDamKey
		    else
                         echo "#######################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not accessed root shell, check command syntax" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Command run: $ROOT_SHELL" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         echo "#######################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
            	      fi
            	      ;;
	    cmdusr)
	 	     clear
                     echo "$(date)                                      $(whoami)@$(hostname)"
                     echo "For this command, please enter the full path of the program, ie: $(which cp)"
                     echo "[TOP]                                 [Entry Fields]"
                     read -p " Enter username ------------------- > " userName
                     read -p " Enter command -------------------- > " cmdRun
                     clear
                     echo "         COMMAND STATUS                   "
                     echo
                     echo "$(date)                                      $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING    stdout: yes    stderr: no      "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "File                                 Fileset                 Type"
                     echo "-----------------------------------------------------------------"
                     echo "$(which su)                          bos.sysmgt.su           exec"
                     echo "Command run: $(which su) -l $userName '$cmdRun'"
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     echo "Running command: $cmdRun as user: $userName"
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     $(which su) -l $userName '$cmdRun'
		     if [ $? -eq 0 ]; then
                          echo "#############################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly ran command: $cmdRun as user: $userName" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which su) -l $userName '$cmdRun'" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "#############################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     else
                          echo "#####################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not ran command: $cmdRun as user: $userName" >> /var/log/smx-log/fail.log
                          echo "[$(date)] $(which su) -l $userName '$cmdRun'" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "#####################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     fi
                     ;;
	    remotemgt)
                        clear
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "You must know the location of smx on the remote system"
                        echo "[TOP]                                             [Entry Fields]"
                        printf " Enter smx path [/root/smx/smx.sh] --------- > "
                        if [ "$smxPath" = "" ]; then
                              SMX_PATH=""
                              read smxPath
                              SMX_PATH=$smxPath
                        fi
                        if [ "$smxPath" = "" ]; then
                              SMX_PATH=""
                              SMX_PATH=/root/smx/smx.sh
                        fi      
                        read -p " Enter username -------------------------------------- > " remUser
                        read -p " Enter remote system name ---------------------------- > " remSys
                        clear
                        echo "         COMMAND STATUS            "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                 Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which ping)                        bos.ipmgt.ping          exec"
                        echo "$(which ssh)                         bos.sysmgt.ssh          exec"
                        echo "Command run: $(which ping) -c 1 $remSys >> /dev/null"
                        echo "Command run: $(which ssh) -t $remUser@$remSys $SMX_PATH --main-menu"
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Running SMX at remote system: $remSys"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        $(which ping) -c 1 $remSys >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             $(which ssh) -t $remUser@$remSys "$SMX_PATH --main-menu"
			     if [ $? -eq 0 ]; then
                                  echo "#############################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly connected to $remSys" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which ssh) -t $remUser@$remSys $SMX_PATH --main-menu" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#############################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
			     else
				  echo "###############################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not conneted to $remSys, check command syntax and internet connection" >> /var/log/smx-log/fail.log
                              	  echo "[$(date)] Command run: $(which ssh) -t $remUser@$remSys $SMX_PATH --main-menu" >> /var/log/smx-log/fail.log
                              	  echo "" >> /var/log/smx-log/fail.log
                                  echo "###############################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
			     fi
			else
                             echo "ping 100% FAIL, host offline"
                             read -p "Press [enter] to continue..." ReadDamKey
			fi
                        ;;
	    chboot)
		     clear
                     $(which uname) | grep Linux
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "           COMMAND STATUS             "
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which dmesg)                       bos.sysmgt.dmesg        exec"
                          echo "Command run: $(which dmesg) -r | $(which tee) /var/log/smx-log/dmesg.log"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Displaying kernel ring buffer"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          $(which dmesg) -r | $(which tee) /var/log/smx-log/dmesg.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "############################################################################" >> /var/log/smx-log/success.log
                               echo "$(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly displayed kernel ring buffer" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which dmesg) -r | $(which tee) /var/log/smx-log/dmesg.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "############################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "############################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not displayed kernel ring buffer, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which dmesg) -r | $(which tee) /var/log/smx-log/dmesg.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "############################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          clear
                          $(which uname) | grep Darwin
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "       COMMAND STATUS        "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which dmesg)                       bos.sysmgt.dmesg        exec"
                               echo "Command run: $(which dmesg) | $(which tee) /var/log/smx-log/dmesg-osx.log"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Displaying kernel ring buffer"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which dmesg) | $(which tee) /var/log/smx-log/dmesg-osx.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "#############################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly displayed kernel ring buffer" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which dmesg) | $(which tee) /var/log/smx-log/dmesg-osx.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "#############################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#############################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not displayed kernel ring buffer, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which dmesg) | $(which tee) /var/log/smx-log/dmesg-osx.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "#############################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               clear
                               $(which uname) | grep BSD
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    echo "          COMMAND STATUS                "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which dmesg)                      bos.sysmgt.dmesg         exec"
                                    echo "Command run: $(which dmesg) -a | $(which tee) /var/log/smx-log/dmesg-bsd.log"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Displaying kernel ring buffer"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which dmesg) -a | $(which tee) /var/log/smx-log/dmesg-bsd.log
                                    if [ $? -eq 0 ]; then
                                         echo "######################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly displayed kernel ring buffer" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which dmesg) -a | $(which tee) /var/log/smx-log/dmesg-bsd.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "######################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "######################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not displayed kernel ring buffer, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which dmesg) -a | $(which tee) /var/log/smx-log/dmesg-bsd.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "######################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi     
                               fi
                          fi
                     fi
                     ;;
	    initLevel)
                        clear
                        $(which uname) | grep Linux
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Linux"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Current run level: $(who -r)"
                             echo
                             echo "NOTE: all current connections to this system WILL terminate"
                             echo "THIS IS YOUR LAST CHANCE..."
                             echo "[TOP]                                   [Entry Fields]"
                             read -p " Enter new run level ---------------- > " runLevel
                             clear
                             echo "         COMMAND STATUS                     "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which init)                     bos.sysmgt.init            exec"
                             echo "Command run: $(which init) $runLevel; exit"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Switching to run revel $runLevel"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             echo "#################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly changed system run level from: $(who -r) to: $runLevel" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which init) $runLevel; exit" >> /var/log/smx-log/success.log
                             echo "##################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             $(which init) $runLevel; exit
                        else
                             clear
                             echo "Feature not avalible for OS X or BSD"
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                        ;;
	    viinit)
		     clear
                     $(which uname) | grep Linux
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "        COMMAND STATUS       "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which vi)                          bos.sysmgt.vi           exec"
                          echo "Command run: $(which vi) /etc/inittab"
                          sleep 2
                          $(which vi) /etc/inittab
                          if [ $? -eq 0 ]; then
                               echo "##########################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly viewed / modified /etc/inittab" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which vi) /etc/inittab" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "##########################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               clear
                               read -p "Press [enter] to continue..." ReadDamKey
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "########################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not viewed / modified /etc/inittab, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which vi) /etc/inittab" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "########################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep BSD
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "        COMMAND STATUS       "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which vi)                          bos.sysmgt.vi           exec"
                               echo "Command run: $(which vi) /etc/inittab"
                               sleep 2
                               $(which vi) /etc/inittab
                               if [ $? -eq 0 ]; then
                                    echo "##########################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly viewed / modified /etc/inittab" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which vi) /etc/inittab" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##########################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    clear
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "########################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not viewed / modified /etc/inittab, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which vi) /etc/inittab" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "########################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               clear
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey     
                          fi
                     fi
                     ;;
	    software)
                       clear
                       echo "#############################################" >> /var/log/smx-log/success.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                       echo "[$(date)] Successfuly entered pkg_menu" >> /var/log/smx-log/success.log
                       echo "[$(date)] Command run: $(basename $0)/sys_menu/pkg_menu" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       echo "#############################################" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       sleep 2
                       pkg_menu
                       ;;
	    backup)
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          $(which pax) >> /dev/null
                          if [ $? -eq 0 ]; then
                               echo "pax found in PATH"
                          else
                               clear
                               cat /proc/version | grep "Red Hat" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    echo "OS = Red Hat"
                                    $(which yum) -y install pax | $(which tee) /var/log/smx-log/pax-install-redhat.log
                               else
                                    clear
                                    cat /proc/version | grep "Debian" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         echo "OS = Debian"
                                         $(which apt-get) -y install pax | $(which tee) /var/log/smx-log/pax-install-debian.log
                                    else
                                         clear
                                         cat /proc/version | grep "Ubuntu" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              echo "OS = Ubuntu"
                                              $(which apt-get) -y install pax | $(which tee) /var/log/smx-log/pax-install-ubuntu.log
                                         else
                                              clear
                                              cat /proc/version | grep "SUSE" >> /dev/null
                                              if [ $? -eq 0 ]; then
                                                   echo "OS = SuSE"
                                                   $(which zypper) in -y pax | $(which tee) /var/log/smx-log/pax-install-suse.log
                                              fi
                                         fi
                                    fi
                               fi
                          fi
                          clear
                          echo "$(date)                                    $(whoami)@$(hostname)"
                          echo "[TOP]                          [Entry Fields]"
                          read -p " Backup or Recovery --------- > " ans
                          if [ "$ans" = "Backup" ]; then
                                clear
                                echo "$(date)                                               $(whoami)@$(hostname)"
                                echo "Backup filename and location example: /home/user/backup.tar"
                                echo "File to backup example: /home/*, each directory or file must be seperated by a space"
                                echo "[TOP]                                  [Entry Fields]"
                                read -p " Backup filename -------------------- > " bakName
                                read -p " File(s) to backup ------------------ > " fileBak
                                clear
                                echo "           COMMAND STATUS                   "
                                echo
                                echo "$(date)                                               $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no               "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which pax)                         bos.sysmgt.pax          exec"
                                echo "Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName"
                                sleep 2
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Backing up file: $fileBak to: $bakName"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName
                                if [ $PIPESTATUS -eq 0 ]; then
                                     echo "####################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly backed up: $fileBak to file: $bakName, compressed as $bakName.zip" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "####################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not backed up: $fileBak to file: $bakName, compressed as $bakName.zip, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
                                fi
                                $(which rm) $bakName
                          else
                                clear
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "Restore location example: /home/user/ (must end in /)"
                                echo "Backup file location example: /usr/src/ (must end in /)"
                                echo "Backup name example: backup.tar"
                                echo "User and group example for chown: user:group"
                                echo "[TOP]                               [Entry Fields]"
                                read -p " Restore location ---------------- > " restLoc
                                read -p " Backup file location ------------ > " bakLoc
                                read -p " Backup name --------------------- > " bakName
                                read -p " Enter username:group ------------ > " userGroup
                                clear
                                echo "         COMMAND STATUS                  "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which cp)                          bos.sysmgt.cp           exec"
                                echo "$(which unzip)                       bos.sysmgt.unzip        exec"
                                echo "$(which pax)                         bos.sysmgt.pax          exec"
                                echo "$(which chown)                       bos.sysmgt.chown        exec"
                                echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                echo "Command run: $(which cp) $bakLoc $restLoc"
                                echo "Command run: $(which unzip) $restLoc$bakName.zip"
                                echo "Command run: $(which pax) -rf $restLoc$bakName"
                                echo "Command run: $(which chown) -R $userGroup $restLoc*"
                                echo "Command run: $(which chmod) -R a+rwx $restLoc*"
                                sleep 2
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Copying file: $bakLoc to: $restLoc"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Unzipping file: $restLoc$bakName.zip"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Restoreing file: $restLoc$bakName"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "changing ownership of file $restLoc at: $userGroup"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "changing modify rights of file: $restLoc to: a+rwx"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                cp $bakLoc$bakName.zip $restloc
                                $(which unzip) $restLoc$bakName.zip
                                $(which pax) -rf $restLoc$bakName
                                $(which chown) -R $userGroup $restLoc*
                                $(which chmod) -R a+rwx $restLoc*
                                echo "#####################################################" >> /var/log/smx-log/success.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                echo "[$(date)] Successfuly restored backup to: $bakLoc" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which cp) $bakLoc$bakName.zip $restLoc" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which unzip) $restLoc$bakName.zip" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which pax) -rf $restLoc$bakName" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which chown) -R $userGroup $restLoc*" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which chmod) -R a+rwx $restLoc*" >> /var/log/smx-log/success.log
                                echo "#####################################################" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo "         COMMAND STATUS                  "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: OK         stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which cp)                          bos.sysmgt.cp           exec"
                                echo "$(which unzip)                       bos.sysmgt.unzip        exec"
                                echo "$(which pax)                         bos.sysmgt.pax          exec"
                                echo "$(which chown)                       bos.sysmgt.chown        exec"
                                echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                echo "Command run: $(which cp) $bakLoc $restLoc"
                                echo "Command run: $(which unzip) $restLoc$bakName.zip"
                                echo "Command run: $(which pax) -rf bakName"
                                echo "Command run: $(which chown) -R $userGroup $restLoc*"
                                echo "Command run: $(which chmod) -R a+rwx $restLoc*"
                                read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "$(date)                                    $(whoami)@$(hostname)"
                               echo "[TOP]                          [Entry Fields]"
                               read -p " Backup or Recovery --------- > " ans
                               if [ "$ans" = "Backup" ]; then
                                     clear
                                     echo "$(date)                                               $(whoami)@$(hostname)"
                                     echo "Backup filename and location example: /home/user/backup.tar"
                                     echo "File to backup example: /home/*, each directory or file must be seperated by a space"
                                     echo "[TOP]                                  [Entry Fields]"
                                     read -p " Backup filename -------------------- > " bakName
                                     read -p " File(s) to backup ------------------ > " fileBak
                                     clear
                                     echo "           COMMAND STATUS                   "
                                     echo
                                     echo "$(date)                                               $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no               "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which pax)                          bos.sysmgt.pax          exec"
                                     echo "$(which zip)                          bos.sysmgt.zip          exec"
                                     echo "$(which rm) -rf                       bos.sysmgt.rm           exec"
                                     echo "Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName"
                                     echo "Command run: $(which zip) $bakName.zip $bakName"
                                     echo "Command run: $(which rm) -rf $bakName"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Backing up file: $fileBak to: $bakName, zipping file as: $bakName.zip"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName
                                     if [ $PIPESTATUS -eq 0 ]; then
                                          echo "####################################################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly backed up: $fileBak to file: $bakName, compressed as $bakName.zip" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "####################################################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Not backed up: $fileBak to file: $bakName, compressed as $bakName.zip, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName" >> /var/log/sysExex-log/FAIL.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          exit 1
                                     fi
                                     $(which rm) -rf $bakName
                               else
                                     clear
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "Restore location example: /home/user/ (must end in /)"
                                     echo "Backup file location example: /usr/src/ (must end in /)"
                                     echo "Backup name example: backup.tar"
                                     echo "User and group example for chown: user:group"
                                     echo "[TOP]                               [Entry Fields]"
                                     read -p " Restore location ---------------- > " restLoc
                                     read -p " Backup file location ------------ > " bakLoc
                                     read -p " Backup name --------------------- > " bakName
                                     read -p " Enter username:group ------------ > " userGroup
                                     clear
                                     echo "         COMMAND STATUS                  "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which cp)                          bos.sysmgt.cp           exec"
                                     echo "$(which unzip)                       bos.sysmgt.unzip        exec"
                                     echo "$(which pax)                         bos.sysmgt.pax          exec"
                                     echo "$(which chown)                       bos.sysmgt.chown        exec"
                                     echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                     echo "Command run: $(which cp) $bakLoc $restLoc"
                                     echo "Command run: $(which unzip) $restLoc$bakName.zip"
                                     echo "Command run: $(which pax) -rf bakName"
                                     echo "Command run: $(which chown) -R $userGroup $restLoc*"
                                     echo "Command run: $(which chmod) -R a+rwx $restLoc*"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Copying file: $bakLoc$bakName.zip to: $restLoc"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Unzipping file: $restLoc$bakName.zip in current directory"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "restoreing file: $restLoc$bakName"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Changing ownership of file: $restLoc* as: $userGroup"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Changing executuction of file: $restLoc as: a+rwx"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which cp) $bakLoc$bakName.zip $restloc
                                     $(which unzip) $restLoc$bakName.zip
                                     $(which pax) -rf $restLoc$bakName
                                     $(which chown) -R $userGroup $restLoc*
                                     $(which chmod) -R a+rwx $restLoc*
                                     echo "#####################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restored backup to: $bakLoc" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which cp) $bakLoc$bakName.zip $restLoc" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which unzip) $restLoc$bakName.zip" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which pax) -rf $restLoc$bakName" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which chown) -R $userGroup $restLoc*" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which chmod) -R a+rwx $restLoc*" >> /var/log/smx-log/success.log
                                     echo "#####################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 9
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    $(which zip) >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "zip found in $PATH"
                                    else
                                         clear
                                         $(which make) -C /usr/ports/archivers/zip make clean
                                    fi
                                    echo "$(date)                                    $(whoami)@$(hostname)"
                                    echo "[TOP]                          [Entry Fields]"
                                    read -p " Backup or Recovery --------- > " ans
                                    if [ "$ans" = "Backup" ]; then
                                          clear
                                          echo "$(date)                                               $(whoami)@$(hostname)"
                                          echo "Backup filename and location example: /home/user/backup.tar"
                                          echo "File to backup example: /home/*, each directory or file must be seperated by a space"
                                          echo "[TOP]                                  [Entry Fields]"
                                          read -p " Backup filename -------------------- > " bakName
                                          read -p " File(s) to backup ------------------ > " fileBak
                                          clear
                                          echo "           COMMAND STATUS                   "
                                          echo
                                          echo "$(date)                                               $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no               "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which pax)                         bos.sysmgt.pax          exec"
                                          echo "Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName"
                                          sleep 2
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Backing up file: $fileBak to: $bakName"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName
                                          if [ $PIPESTATUS -eq 0 ]; then
                                               echo "####################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly backed up: $fileBak to file: $bakName, compressed as $bakName.zip" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "####################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          else
                                               echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not backed up: $fileBak to file: $bakName, compressed as $bakName.zip, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which pax) -w >$bakName $fileBak | $(which zip) $bakName.zip $bakName" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
                                          fi
                                          $(which rm) $bakName
                                    else
                                          clear
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo "Restore location example: /home/user/ (must end in /)"
                                          echo "Backup file location example: /usr/src/ (must end in /)"
                                          echo "Backup name example: backup.tar"
                                          echo "User and group example for chown: user:group"
                                          echo "[TOP]                               [Entry Fields]"
                                          read -p " Restore location ---------------- > " restLoc
                                          read -p " Backup file location ------------ > " bakLoc
                                          read -p " Backup name --------------------- > " bakName
                                          read -p " Enter username:group ------------ > " userGroup
                                          clear
                                          echo "         COMMAND STATUS                  "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which cp)                          bos.sysmgt.cp           exec"
                                          echo "$(which unzip)                       bos.sysmgt.unzip        exec"
                                          echo "$(which pax)                         bos.sysmgt.pax          exec"
                                          echo "$(which chown)                       bos.sysmgt.chown        exec"
                                          echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                          echo "Command run: $(which cp) $bakLoc $restLoc"
                                          echo "Command run: $(which unzip) $restLoc$bakName.zip"
                                          echo "Command run: $(which pax) -rf $restLoc$bakName"
                                          echo "Command run: $(which chown) -R $userGroup $restLoc*"
                                          echo "Command run: $(which chmod) -R a+rwx $restLoc*"
                                          sleep 2
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Copying file: $bakLoc to: $restLoc"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Unzipping file: $restLoc$bakName.zip"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restoreing file: $restLoc$bakName"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "changing ownership of file $restLoc at: $userGroup"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "changing modify rights of file: $restLoc to: a+rwx"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          cp $bakLoc$bakName.zip $restloc
                                          $(which unzip) $restLoc$bakName.zip
                                          $(which pax) -rf $restLoc$bakName
                                          $(which chown) -R $userGroup $restLoc*
                                          $(which chmod) -R a+rwx $restLoc*
                                          echo "#####################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly restored backup to: $bakLoc" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which cp) $bakLoc$bakName.zip $restLoc" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which unzip) $restLoc$bakName.zip" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which pax) -rf $restLoc$bakName" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which chown) -R $userGroup $restLoc*" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which chmod) -R a+rwx $restLoc*" >> /var/log/smx-log/success.log
                                          echo "#####################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo "         COMMAND STATUS                  "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: OK         stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which cp)                          bos.sysmgt.cp           exec"
                                          echo "$(which unzip)                       bos.sysmgt.unzip        exec"
                                          echo "$(which pax)                         bos.sysmgt.pax          exec"
                                          echo "$(which chown)                       bos.sysmgt.chown        exec"
                                          echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                          echo "Command run: $(which cp) $bakLoc $restLoc"
                                          echo "Command run: $(which unzip) $restLoc$bakName.zip"
                                          echo "Command run: $(which pax) -rf bakName"
                                          echo "Command run: $(which chown) -R $userGroup $restLoc*"
                                          echo "Command run: $(which chmod) -R a+rwx $restLoc*"
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    fi     
                               fi
                          fi
                     fi
            	     ;;
	    stACL)
		    clear
                    $(which uname) | grep Linux
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "Permissions example: rwx"
                         echo "[TOP]                              [Entry Fields]"
                         read -p " Enter filename ----------------- > " fileName
                         read -p " Enter username ----------------- > " userName
                         read -p " Enter permissions -------------- > " filePerm
                         clear
                         echo "         COMMAND STATUS                "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "Command: RUNNING     stdout: yes     stderr: no   "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                  Fileset                Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which setfacl)                      bos.sysmgt.setfacl     exec"
                         echo "Command run: $(which setfacl) -r -m user:$userName:$filePerm $fileName"
                         sleep 2
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Creating ACL on file: $fileName as: $userName:$filePerm"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         $(which setfacl) -r -m user:$userName:$filePerm $fileName
                         if [ $? -eq 0 ]; then
                              echo "############################################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly set access control list on file: $fileName with permissions: $userName:$filePerm" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which setfacl) -r -m user:$userName:$filePerm $fileName" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "############################################################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "######################################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Not set access control list on file: $fileName, check command syntax" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which setfacl) -r -m user:$userName:$filePerm $fileName" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "######################################################################"
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    else
                         clear
                         $(which uname) | grep BSD
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = BSD"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "Permissions example: rwx"
                              echo "[TOP]                              [Entry Fields]"
                              read -p " Enter filename ----------------- > " fileName
                              read -p " Enter username ----------------- > " userName
                              read -p " Enter group name --------------- > " grpName
                              read -p " Enter permissions -------------- > " filePerm
                              clear
                              echo "         COMMAND STATUS                "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING     stdout: yes     stderr: no   "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                  Fileset                Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which setfacl)                      bos.sysmgt.setfacl     exec"
                              echo "Command run: $(which setfacl) -m user:$userName:$filePerm,group:$grpName:$filePerm $fileName"
                              sleep 2
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Creating ACL on file: $fileName as: $userName:$filePerm,$grpName:$filePerm"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              $(which setfacl) -m user:$userName:$filePerm,group:$grpName:$filePerm $fileName
                              if [ $? -eq 0 ]; then
                                   echo "######################################################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly set ACL on file: $fileName" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which setfacl) -m user:$userName:$filePerm,group:$grpName:$filePerm $fileName" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "######################################################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "######################################################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not set ACL on file: $fileName, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which setfacl) -m user:$userName:$filePerm,group:$grpName:$filePerm $fileName" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "######################################################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi     
                         else
                              clear
                              echo "Feature not avalible for OS X"
                              read -p "Press [enter] to continue..." ReadDamKey
                              srv_menu
                         fi
                    fi
            	    ;;
	    gtACL)
    	            clear
		    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo "file name example: /home/user/test.txt"
                    echo "[TOP]                           [Entry Fields]"
                    read -p " Enter filename -------------- > " fileName
                    clear
                    echo "         COMMAND STATUS               "
                    echo
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo
                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                    echo
		    echo "Before command completion, additional instructions may appear below"
            	    echo
            	    echo "File                                  Fileset                Type"
                    echo "-----------------------------------------------------------------"
                    echo "$(which getfacl)			            bos.sysmgt.getfacl     exec"
                    echo "Command run: $(which getfacl) $fileName"
                    sleep 2
                    clear
                    $(which getfacl) $fileName
                    if [ $? -eq 0 ]; then
                         echo "#########################################################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly displayed access control list information for file: $fileName" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which getfacl) $fileName" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "#########################################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
		    else
                         echo "#######################################################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not displayed access control list information for file: $fileName, check command syntax" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Command run: $(which getfacl) $fileName" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         echo "#######################################################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
            	      fi
            	      ;;
	    stSelinux)
                        clear
                        $(which uname) | grep Linux
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Linux"
                        else
                             clear
                             echo "Feature not avalible on OS X and BSD"
                        fi          
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "Valid selinux security ratings: enforcing, permissive, disabled"
                      	echo "Current selinux security rating: $(getenforce)"
                    	SELINUX_CURR=`getenforce`
                        echo "[TOP]                                                    [Entry Fields]"
                        printf " Enter new selinux security rating [enforcing] -------- > "
                        if [ "$seLinux" = "" ]; then
                              SELINUX=""
                              read seLinux
                              SELINUX=$seLinux
                        fi
                        if [ "$seLinux" = "" ]; then
                              SELINUX=""
                              SELINUX=enforcing
                        fi
                        read -p " Reboot after finish --------------------------- (Y/N) > " ans
                      	clear
                      	echo "       COMMAND STATUS       "
                      	echo
                      	echo "$(date)                                     $(whoami)@$(hostname)"
                      	echo
                      	echo "Before command completion, additional instructions may appear below"
                      	echo
                      	echo "File                                 Fileset                 Type"
                      	echo "-----------------------------------------------------------------"
                      	echo "$(which sed)                         bos.sysmgt.sed          exec"
                      	echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                      	echo "Command run: $(which sed) -i 's/$SELINUX_CURR/$SELINUX/g' /etc/selinux/config"
                      	echo "Command run: $(which reboot) -f now --verbose; exit"
                      	sleep 2
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "changing selinux configuration to: $SELINUX"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                    	$(which sed) -i "s/$SELINUX_CURR/$SELINUX/g" /etc/selinux/config
                        if [ $? -eq 0 ]; then
                             echo "#############################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly set selinux security rating to: $SELINUX" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which sed) -i 's/$SELINUX_CURR/$SELINUX/g' /etc/selinux/config" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "#############################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                  	else
                  	     echo "#############################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not set selinux security rating to: $seLinux, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which sed) -i 's/$SELINUX_CURR/$SELINUX/g' /etc/selinux/config" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "#############################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                      	fi
                      	if [ "$ans" = "Y" ]; then
                              echo "The system will now reboot..."
                              read -p "Press [enter] to continue..." ReadDamKey
                              $(which reboot) -f now --verbose; exit
                        else
                              echo "The system will not reboot, new selinux security rating will be applied on next reboot"
                              read -p "Press [enter] to continue..." ReadDamKey
                        fi
                        ;;
	    ifconfig)
		       clear
                       echo "####################################################" >> /var/log/smx-log/success.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                       echo "[$(date)] Successfuly executed $(basename $0)/sys_menu/ip_menu" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       echo "####################################################" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       sleep 2
                       ip_menu
                       ;;
	    firewall)
		       clear
                       echo "######################################################" >> /var/log/smx-log/success.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                       echo "[$(date)] Successfuly executed $(basename $0)/sys_menu/fire_menu" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       echo "######################################################" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       sleep 2
                       fire_menu
                       ;;
	    nmap)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        $(which nmap) >> /dev/null
                        if [ $? -eq 0 ]; then
                             echo "nmap found in PATH"
                        else
                             clear
                             cat /proc/version | grep "Red Hat" >> /dev/null
                             if [ $? -eq 0 ]; then
                                  echo "OS = Red Hat"
                                  $(which yum) -y install nmap | $(which tee) /var/log/smx-log/nmap-install-redhat.log
                             else
                                  clear
                                  cat /proc/version | grep "Debian" >> /dev/null
                                  if [ $? -eq 0 ]; then
                                       echo "OS = Debian"
                                       $(which apt-get) -y install nmap | $(which tee) /var/log/smx-log/nmap-install-debian.log
                                  else
                                       clear
                                       cat /proc/version | grep "Ubuntu" >> /dev/null
                                       if [ $? -eq 0 ]; then
                                            echo "OS = Ubuntu"
                                            $(which apt-get) -y install nmap | $(which tee) /var/log/smx-log/nmap-install-ubuntu.log
                                       else
                                            clear
                                            cat /proc/version | grep "SUSE" >> /dev/null
                                            if [ $? -eq 0 ]; then
                                                 echo "OS = SuSE"
                                                 $(which zypper) in -y nmap | $(which tee) /var/log/smx-log/nmap-install-suse.log
                                            fi
                                       fi
                                  fi
                             fi
                        fi
                        clear
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "NOTE: This may take a while (on localhost it takes about 40 seconds"
                        echo "[TOP]                                   [Entry Fields]"
                        printf " Enter IP address [127.0.0.1] -------- > "
                        if [ "$ipAddr" = "" ]; then
                              IP_ADDR=""
                              read ipAddr
                              IP_ADDR=$ipAddr
                        fi
                        if [ "$ipAddr" = "" ]; then
                              IP_ADDR=""
                              IP_ADDR=127.0.0.1
                        fi          
                        clear
                        echo "        COMMAND STATUS                 "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING       stdout: yes     stderr: no "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                  Fileset                Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which ping)                         bos.sysmgt.ping        exec"
                        echo "$(which nmap)                         bos.sysmgt.nmap        exec"
                        echo "Command run: $(which ping) -c 5 $IP_ADDR"
                        echo "Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log"
                        sleep 2
                        $(which ping) -c 5 $IP_ADDR >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Performing nmap scan on ip address: $IP_ADDR"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             $(which nmap) -A -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log
                             if [ $PIPESTATUS -eq 0 ]; then
                                  echo "################################################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly scanned ip address: $IP_ADDR" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "################################################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#################################################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not scanned ip address: $IP_ADDR, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "################################################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                        else
                             echo "Ping to host: $IP_ADDR FAIL %100"
                             read -p "Press [enter] to continue..." ReadDamKey     
                        fi
                   else
                        $(which uname) | grep BSD >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = BSD"
                             $(which nmap) >> /dev/null
                             if [ $? -eq 0 ]; then
                                 echo "nmap found in PATH"
                            else
                                 clear
                                 $(which make) -C /usr/ports/security/nmap install clean
                            fi
                            clear
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "NOTE: This may take a while (on localhost it takes about 40 seconds"
                            echo "[TOP]                                   [Entry Fields]"
                            printf " Enter IP address [127.0.0.1] -------- > "
                            if [ "$ipAddr" = "" ]; then
                                  IP_ADDR=""
                                  read ipAddr
                                  IP_ADDR=$ipAddr
                            fi
                            if [ "$ipAddr" = "" ]; then
                                  IP_ADDR=""
                                  IP_ADDR=127.0.0.1
                            fi          
                            clear
                            echo "        COMMAND STATUS                 "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING       stdout: yes     stderr: no "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                  Fileset                Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which ping)                         bos.sysmgt.ping        exec"
                            echo "$(which nmap)                         bos.sysmgt.nmap        exec"
                            echo "Command run: $(which ping) -c 5 $IP_ADDR"
                            echo "Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log"
                            sleep 2
                            $(which ping) -c 5 $IP_ADDR >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Performing nmap scan on ip address: $IP_ADDR"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 $(which nmap) -A -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log
                                 if [ $PIPESTATUS -eq 0 ]; then
                                      echo "################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly scanned ip address: $IP_ADDR" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "#################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not scanned ip address: $IP_ADDR, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi
                            else
                                 echo "Ping to host: $IP_ADDR FAIL %100"
                                 read -p "Press [enter] to continue..." ReadDamKey     
                            fi
                        else
                            $(which uname) | grep Darwin >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = OS X"
                                 $(which nmap) >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      clear
                                      echo "Nmap found in $PATH"
                                 else
                                      clear
                                      echo "Nmap not found in $PATH, download from: nmap.org"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi
                                 clear
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "NOTE: This may take a while (on localhost it takes about 40 seconds"
                                 echo "[TOP]                                   [Entry Fields]"
                                 printf " Enter IP address [127.0.0.1] -------- > "
                                 if [ "$ipAddr" = "" ]; then
                                       IP_ADDR=""
                                       read ipAddr
                                       IP_ADDR=$ipAddr
                                 fi
                                 if [ "$ipAddr" = "" ]; then
                                       IP_ADDR=""
                                       IP_ADDR=127.0.0.1
                                 fi          
                                 clear
                                 echo "        COMMAND STATUS                 "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING       stdout: yes     stderr: no "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                  Fileset                Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which ping)                         bos.sysmgt.ping        exec"
                                 echo "$(which nmap)                         bos.sysmgt.nmap        exec"
                                 echo "Command run: $(which ping) -c 5 $IP_ADDR"
                                 echo "Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log"
                                 sleep 2
                                 $(which ping) -c 5 $IP_ADDR >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      clear
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Performing nmap scan on ip address: $IP_ADDR"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      $(which nmap) -A -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log
                                      if [ $PIPESTATUS -eq 0 ]; then
                                           echo "################################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly scanned ip address: $IP_ADDR" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "################################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "#################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not scanned ip address: $IP_ADDR, check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which nmap) -sV -T4 -O -A -v $IP_ADDR | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
                                 else
                                      echo "Ping to host: $IP_ADDR FAIL %100"
                                      read -p "Press [enter] to continue..." ReadDamKey     
                                 fi     
                            fi          
                        fi
                   fi
                   ;;
	    netmap)
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          $(which nmap) >> /dev/null
                          if [ $? -eq 0 ]; then
                               echo "nmap found in PATH"
                          else
                               clear
                               cat /proc/version | grep "Red Hat" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    echo "OS = Red Hat"
                                    $(which yum) -y install nmap | $(which tee) /var/log/smx-log/nmap-install-redhat.log
                               else
                                    clear
                                    cat /proc/version | grep "Debian" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         echo "OS = Debian"
                                         $(which apt-get) -y install nmap | $(which tee) /var/log/smx-log/nmap-install-debian.log
                                    else
                                         clear
                                         cat /proc/version | grep "Ubuntu" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              echo "OS = Ubuntu"
                                              $(which apt-get) -y install nmap | $(which tee) /var/log/smx-log/nmap-install-ubuntu.log
                                         else
                                              clear
                                              cat /proc/version | grep "SUSE" >> /dev/null
                                              if [ $? -eq 0 ]; then
                                                   echo "OS = SuSE"
                                                   $(which zypper) in -y nmap | $(which tee) /var/log/smx-log/nmap-install-suse.log
                                              fi
                                         fi
                                    fi
                               fi
                          fi   
                          clear
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "IP range expressed as '192.168.1.0-100'"
                          echo "[TOP]                                               [Entry Fields]"
                          printf " Enter IP address range [192.168.1.0-100] -------- > "
                          if [ "$ipRange" = "" ]; then
                                IPRANGE=""
                                read ipRange
                                IPRANGE=$ipRange
                          fi
                          if [ "$ipRange" = "" ]; then
                                IPRANGE=""
                                IPRANGE=192.168.1.0-100
                          fi       
                          clear
                          echo "        COMMAND STATUS                 "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                  Fileset                Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which nmap)                         bos.sysmgt.nmap        exec"
                          echo "Command run: $(which nmap) -Sp $IPRANGE | $(which tee) /var/log/smx-log/nmap.log"
                          sleep 2
                          clear
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Performing range scan on: $IPRANGE"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          $(which nmap) -Sp $IPRANGE | $(which tee) /var/log/smx-log/nmap.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "####################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly scanned ip address range: $IPRANGE" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which nmap) -Sp $IPRANGE | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "####################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "####################################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not scanned ip address range: $IPRANGE, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which nmap) -Sp $IPRANGE | $(which tee) /var/log/smx-log/nmap.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "####################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               $(which nmap) >> /dev/null
                               if [ $? -eq 0 ]; then
                                    echo "Nmap found in $PATH"
                               else
                                    echo "Nmap not installed, install from nmap.org"
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    sys_menu
                               fi         
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "IP range expressed as '192.168.1.0-100'"
                               echo "[TOP]                                       [Entry Fields]"
                               printf " Enter IP range [192.168.1.0-254] -------- > "
                               if [ "$ipRange" = "" ]; then
                                     IP_RANGE=""
                                     read ipRange
                                     IP_RANGE=$ipRange
                               fi
                               if [ "$ipRange" = "" ]; then
                                     IP_RANGE=""
                                     IP_RANGE=192.168.1.0-254
                               fi        
                               clear
                               echo "         COMMAND STATUS                   "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which nmap)                        bos.sysmgt.nmap         exec"
                               echo "Command run: $(which nmap) -Sp $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Performing scan on ip address range: $IP_RANGE"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which nmap) -sP $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "#########################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly scanned ip address range: $IP_RANGE" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which nmap) -sP $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "#########################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not scanned ip address: $IP_RANGE, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which nmap) -Sp $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    $(which nmap) >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         echo "Nmap found in $PATH"
                                    else
                                         $(which make) -C /usr/ports/security/nmap install clean
                                    fi
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "IP range expressed as '192.168.1.0-100'"
                                    echo "[TOP]                                       [Entry Fields]"
                                    printf " Enter IP range [192.168.1.0-254] -------- > "
                                    if [ "$ipRange" = "" ]; then
                                          IP_RANGE=""
                                          read ipRange
                                          IP_RANGE=$ipRange
                                    fi
                                    if [ "$ipRange" = "" ]; then
                                          IP_RANGE=""
                                          IP_RANGE=192.168.1.0-254
                                    fi        
                                    clear
                                    echo "         COMMAND STATUS                   "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which nmap)                        bos.sysmgt.nmap         exec"
                                    echo "Command run: $(which nmap) -Sp $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Performing scan on ip address range: $IP_RANGE"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which nmap) -sP $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "#########################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly scanned ip address range: $IP_RANGE" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which nmap) -sP $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "#########################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not scanned ip address: $IP_RANGE, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which nmap) -Sp $IP_RANGE | $(which tee) /var/log/smx-log/nmap-osx.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi          
                               fi
                          fi
                     fi
              	     ;;
            help)
                   echo "sysproc > View system processes"
                   echo "sysio > View system IO stats"
                   echo "vmstatus > View system virtual memory status"
                   echo "shell > Access user shell"
                   echo "cmdusr > Run a command as a user"
                   echo "remotemgt > smx remote management"
                   echo "chboot > Show boot messages"
                   echo "initLevel > Show and change system run level"
                   echo "viinit > View or modify /etc/inittab"
                   echo "software > Install software to system"
                   echo "backup > Backup or restore a filesystem using dump and bzip2"
                   echo "stACL > Set ACL on a file"
                   echo "gtACL > Get ACL settings on a file"
                   echo "stSelinux > Set new selinux security rating on system"
                   echo "ifconfig > IP configuration"
                   echo "firewall > Configure system firewall"
                   echo "nmap > Perform OS detection, version detection and portscanner"
                   echo "netmap > Perform a ping sweep of a given ip range"
                   echo "help > This menu"
                   echo "exit > Exit back to main menu"
                   echo "exit-mas > Exit back to shell"         
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;
	    exit)
		   clear
                   echo "##############################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/sys_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "##############################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   main_menu
                   ;;
	    exit-mas)
              	       clear
              	       echo "#################################" >> /var/log/smx-log/exit.log
              	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
              	       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
              	       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
              	       exit 0
              	       ;;
	    *)         clear
                       echo "        COMMAND STATUS                 "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL     stdout: yes      stderr: no       "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Command unknown, please consult the command list, executed with pid - 3155 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done
}

function ip_menu() {
   while :
   do
       clear
       echo "$(date)                                     $(whoami)@$(hostname)"
       echo
       read -p "$(whoami)@$(hostname):smx/ip_menu # " choice_ip
       echo

       case "$choice_ip" in
    	   list)
    	          clear
                  $(which uname) | grep Linux
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "[TOP]                                     [Entry Fields]"
                       printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                       if [ "$netIntf" = "" ]; then
                             NETINTF=""
                             read netIntf
                             NETINTF=$netIntf
                       fi
                       if [ "$netIntf" = "" ]; then
                             NETINTF=""
                             NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                       fi
                       clear
                       echo "        COMMAND STATUS                "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING     stdout: yes    stderr: no    "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                  Fileset                Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which ifconfig)                     bos.ipmgt.ifconfig     exec"
                       echo "Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log"
                       sleep 2
                       clear
                       $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log
                       if [ $PIPESTATUS -eq 0 ]; then
                            echo "#######################################################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly listed network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "#######################################################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            echo "#######################################################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not listed network adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "#######################################################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                  else
                       $(which uname) | grep Darwin
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = OS X"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                                     [Entry Fields]"
                            printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  read netIntf
                                  NETINTF=$netIntf
                            fi
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                            fi
                            clear
                            echo "        COMMAND STATUS                "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING     stdout: yes    stderr: no    "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                  Fileset                Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which ifconfig)                     bos.ipmgt.ifconfig     exec"
                            echo "Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log"
                            sleep 2
                            clear
                            $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log
                            if [ $PIPESTATUS -eq 0 ]; then
                                 echo "#######################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly listed network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#######################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "#######################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not listed network adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#######################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep BSD
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       read netIntf
                                       NETINTF=$netIntf
                                 fi
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                                 fi
                                 clear
                                 echo "        COMMAND STATUS                "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING     stdout: yes    stderr: no    "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                  Fileset                Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which ifconfig)                     bos.ipmgt.ifconfig     exec"
                                 echo "Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log"
                                 sleep 2
                                 clear
                                 $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log
                                 if [ $PIPESTATUS -eq 0 ]; then
                                      echo "#######################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly listed network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "#######################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "#######################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not listed network adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which ifconfig) $NETINTF | $(which tee) /var/log/smx-log/ifconfig.log" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "#######################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi
                            fi
                       fi
                  fi
            	  ;;
           ifstats)
                     clear
                     $(which uname) | grep Linux
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "Ethernet: eth0, wireless: wlan0"
                          echo "[TOP]                                     [Entry Fields]"
                          printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                          if [ "$netIntf" = "" ]; then
                                NETINTF=""
                                read netIntf
                                NETINTF=$netIntf
                          fi
                          if [ "$netIntf" = "" ]; then
                                NETINTF=""
                                NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                          fi       
                          clear
                          echo "         COMMAND STATUS                  "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which netstat)                     bos.ipmgt.netstat       exec"
                          echo "Command run: $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log"
                          sleep 2
                          clear
                          $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "###################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly displayed advanced status for network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which netstat) -i | $(which grep) $NETINTF" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "###################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not displayed advanced status for $netApt, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "########################################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi 
                     else
                          $(which uname) | grep Darwin
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "Ethernet: eth0, wireless: wlan0"
                               echo "[TOP]                                     [Entry Fields]"
                               printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                               if [ "$netIntf" = "" ]; then
                                     NETINTF=""
                                     read netIntf
                                     NETINTF=$netIntf
                               fi
                               if [ "$netIntf" = "" ]; then
                                     NETINTF=""
                                     NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                               fi       
                               clear
                               echo "         COMMAND STATUS                  "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which netstat)                     bos.ipmgt.netstat       exec"
                               echo "Command run: $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log"
                               sleep 2
                               clear
                               $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "###################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly displayed advanced status for network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which netstat) -i | $(which grep) $NETINTF" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "###################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not displayed advanced status for $netApt, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "########################################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               $(which uname) | grep BSD
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                                    if [ "$netIntf" = "" ]; then
                                          NETINTF=""
                                          read netIntf
                                          NETINTF=$netIntf
                                    fi
                                    if [ "$netIntf" = "" ]; then
                                          NETINTF=""
                                          NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                                    fi
                                    clear
                                    echo "         COMMAND STATUS                  "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which netstat)                     bos.ipmgt.netstat       exec"
                                    echo "Command run: $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log"
                                    sleep 2
                                    clear
                                    $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "###################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly displayed advanced status for network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which netstat) -i | $(which grep) $NETINTF" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "###################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not displayed advanced status for $netApt, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which netstat) -i | $(which grep) $NETINTF | $(which tee) /var/log/smx-log/netstat.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "########################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                               fi
                          fi
                     fi
                     ;;
           change)
                    clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         cat /proc/version | grep "Red Hat" >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              CURR_HOST=`hostname`
                              echo "[TOP]                                     [Entry Fields]"
                              read -p " Enter new hostname ------------------- > " hostName
                              read -p " Reboot after completion -------- (Y/N) > " ans
                              clear
                              echo "         COMMAND STATUS                       "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which sed)                         bos.sysmgt.sed          exec"
                              echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                              echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/sysconfig/network"
                              echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts"
                              echo "Command run: $(which reboot) -f now --verbose; exit"
                              sleep 2
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing hostname from: $CURR_HOST to $hostName in /etc/sysconfig/network"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/sysconfig/network
                              if [ $? -eq 0 ]; then
                                   echo "##############################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/sysconfig/network" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "##############################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "##############################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/sysconfig/network" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "##############################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   exit 1
                              fi
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing hostname from: $CURR_HOST to $hostName in /etc/hosts"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hosts
                              if [ $? -eq 0 ]; then
                                   echo "##################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "##################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "##################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "##################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi
                              if [ "$ans" = "Y" ]; then
                                    echo "Rebooting system now..."
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    $(which reboot) -f now --verbose; exit
                              else
                                    echo "System will not reboot"
                                    read -p "Press [enter] to continue..." ReadDamKey
                              fi
                         else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = Debian"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   CURR_HOST=`hostname`
                                   echo "[TOP]                                    [Entry Fields]"
                                   read -p " Enter new hostname ------------------ > " hostName
                                   read -p " Reboot after completion ------------- (Y/N) > " ans
                                   clear
                                   echo "         COMMAND STATUS                      "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                Type"
                                   echo "----------------------------------------------------------------"
                                   echo "$(which sed)                         bos.sysmgt.sed         exec"
                                   echo "$(which reboot)                      bos.sysmgt.reboot      exec"
                                   echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hostname"
                                   echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts"
                                   echo "Command run: $(which reboot) -f now --verbose; exit"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "changing hostname from: $CURR_HOST to $hostName in /etc/hostname"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hostname
                                   if [ $? -eq 0 ]; then
                                        echo "#####################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hostname" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#####################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "#####################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hostname" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "#####################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        exit 1
                                   fi
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Changing hostname from: $CURR_HOST to $hostName to /etc/hosts"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hosts
                                   if [ $? -eq 0 ]; then
                                        echo "##################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "##################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "###################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "##################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        exit 1
                                   fi
                                   if [ "$ans" = "Y" ]; then
                                         echo "Rebooting system now..."
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         $(which reboot) -f now --verbose; exit
                                   else
                                         echo "System will not reboot"
                                   fi
                              else
                                   clear
                                   cat /proc/version | grep "Ubuntu" >> /dev/null
                                   if [ $? -eq 0 ]; then
                                        clear
                                        echo "OS = Ubuntu"
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        CURR_HOST=`hostname`
                                        echo "[TOP]                                    [Entry Fields]"
                                        read -p " Enter new hostname ------------------ > " hostName
                                        read -p " Reboot after completion ------------- (Y/N) > " ans
                                        clear
                                        echo "         COMMAND STATUS                      "
                                        echo
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        echo
                                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                                        echo
                                        echo "Before command completion, additional instructions may appear below"
                                        echo
                                        echo "File                                 Fileset                Type"
                                        echo "----------------------------------------------------------------"
                                        echo "$(which sed)                         bos.sysmgt.sed         exec"
                                        echo "$(which reboot)                      bos.sysmgt.reboot      exec"
                                        echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hostname"
                                        echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts"
                                        echo "Command run: $(which reboot) -f now --verbose; exit"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Changing hostname $CURR_HOST to $hostName to /etc/hostname"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hostname
                                        if [ $? -eq 0 ]; then
                                             echo "#####################################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hostname" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "#####################################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                        else
                                             echo "#####################################################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hostname" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "#####################################################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             exit 1
                                        fi
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Changing hostname: $CURR_HOST to: $hostName in /etc/hosts"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hosts
                                        if [ $? -eq 0 ]; then
                                             echo "##################################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "##################################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                        else
                                             echo "###################################################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "##################################################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             exit 1
                                        fi
                                        $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hosts
                                        if [ "$ans" = "Y" ]; then
                                              echo "Rebooting system now..."
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              $(which reboot) -f now --verbose; exit
                                        else
                                              echo "System will not reboot"
                                        fi
                                   else
                                        clear
                                        cat /proc/version | grep "SUSE" >> /dev/null
                                        if [ $? -eq 0 ]; then
                                            clear
                                            echo "OS = SuSE"
                                            echo "$(date)                                     $(whoami)@$(hostname)"
                                            CURR_HOST=`hostname`
                                            echo "[TOP]                                    [Entry Fields]"
                                            read -p " Enter new hostname ------------------ > " hostName
                                            read -p " Reboot after completion ------------- (Y/N) > " ans
                                            clear
                                            echo "         COMMAND STATUS                      "
                                            echo
                                            echo "$(date)                                     $(whoami)@$(hostname)"
                                            echo
                                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                                            echo
                                            echo "Before command completion, additional instructions may appear below"
                                            echo
                                            echo "File                                 Fileset                Type"
                                            echo "----------------------------------------------------------------"
                                            echo "$(which sed)                         bos.sysmgt.sed         exec"
                                            echo "$(which reboot)                      bos.sysmgt.reboot      exec"
                                            echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/HOSTNAME"
                                            echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts"
                                            echo "Command run: $(which reboot) -f now --verbose; exit"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Changing hostname: $CURR_HOST to: $hostName in /etc/HOSTNAME"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/HOSTNAME
                                            if [ $? -eq 0 ]; then
                                                 echo "#####################################################################" >> /var/log/smx-log/success.log
                                                 echo "$(date):$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                                                 echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                                 echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/HOSTNAME" >> /var/log/smx-log/success.log
                                                 echo "" >> /var/log/smx-log/success.log
                                                 echo "#####################################################################" >> /var/log/smx-log/success.log
                                                 echo "" >> /var/log/smx-log/success.log
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                                 clear
                                                 echo
                                                 cat /var/log/smx-log/success.log | tail -n 7
                                                 echo
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                            else 
                                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                 echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName, check command syntax" >> /var/log/smx-log/fail.log
                                                 echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/HOSTNAME" >> /var/log/smx-log/fail.log
                                                 echo "" >> /var/log/smx-log/fail.log
                                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                                 clear
                                                 echo
                                                 cat /var/log/smx-log/fail.log | tail -n 7
                                                 exit 1
                                            fi
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Changing hostname: $CURR_HOST to: $hostName in /etc/hosts"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            $(which sed) -i "s/$CURR_HOST/$hostName/g" /etc/hosts
                                            if [ $? -eq 0 ]; then
                                                 echo "##################################################################" >> /var/log/smx-log/success.log
                                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                 echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                                 echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/success.log
                                                 echo "" >> /var/log/smx-log/success.log
                                                 echo "##################################################################" >> /var/log/smx-log/success.log
                                                 echo "" >> /var/log/smx-log/success.log
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                                 clear
                                                 echo
                                                 cat /var/log/smx-log/success.log | tail -n 7
                                                 echo
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                            else
                                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                 echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName, check command syntax" >> /var/log/smx-log/fail.log
                                                 echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/hosts" >> /var/log/smx-log/fail.log
                                                 echo "" >> /var/log/smx-log/fail.log
                                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                                 echo "" >> /var/log/smx-log/fail.log
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                                 clear
                                                 echo
                                                 cat /var/log/smx-log/fail.log | tail -n 7
                                                 echo
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                            fi
                                            if [ "$ans" = "Y" ]; then
                                                  echo "System rebooting now..."
                                                  read -p "Press [enter] to continue..." ReadDamKey
                                                  $(which reboot) -f now --verbose; exit
                                            else
                                                  echo "The system will not reboot..."
                                                  read -p "Press [enter] to continue..." ReadDamKey
                                            fi
                                        fi
                                   fi
                              fi
                         fi
                    else
                         $(which uname) | grep Darwin >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = OS X"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                                   [Entry Fields]"
                              read -p " Enter new hostname ----------------- > " newName
                              clear
                              echo "         COMMAND STATUS                     "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which scutil)                      bos.ipmgt.scutil        exec"
                              echo "Command run: $(which scutil) --set HostName $newName"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting hostname to: $newName"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which scutil) --set HostName $newName
                              if [ $? -eq 0 ]; then
                                   echo "####################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly changed hostname to: $newName" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which scutil) --set HostName $newName" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "####################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "#######################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not changed hostname to: $newName, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which scutil) --set HostName $newName" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "#######################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi
                              echo "[$(date)] Successfuly set hostname: $newName"
                              echo "The system must now reboot, you can choose not to, but the hostname will not be changed until next reboot"
                              read -p "Reboot system (Y/N) > " ans
                              if [ "$ans" = "Y" ]; then
                                    $(which reboot) -f now --verbose; exit
                              else
                                    echo "System will not be rebooted"
                              fi
                         else
                              $(which uname) | grep BSD >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = BSD"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   CURR_HOST=`$(hostname)`
                                   echo "[TOP]                                     [Entry Fields]"
                                   read -p " Enter new hostname ------------------- > " hostName
                                   clear
                                   echo "         COMMAND STATUS                "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which sed)                         bos.sysmgt.sed          exec"
                                   echo "Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/rc.conf"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Setting hostname to: $hostName"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/rc.conf
                                   if [ $? -eq 0 ]; then
                                        echo "##############################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly changed hostname from: $CURR_HOST to: $hostName" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/rc.conf" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "##############################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "###################################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not changed hostname from: $CURR_HOST to: $hostName, check command syntax" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$CURR_HOST/$hostName/g' /etc/rc.conf" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "###################################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   fi          
                              fi
                         fi
                    fi
                    ;;
	   chip)
                  clear
                  $(which uname) | grep Linux >> /dev/null
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       cat /proc/version | grep "Red Hat" >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Red Hat"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                                          [Entry Fields]"
                            printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  read netIntf
                                  NETINTF=$netIntf
                            fi
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)  
                            fi
                            read -p " Enter new IP address  --------------------- > " ipAddr
                            read -p " Enter new netmask address ----------------- > " netMask
                            read -p " Enter new defualt gateway ----------------- > " defGway
                            read -p " Enter new DNS server address -------------- > " dnsSrvAddr
                            read -p " Restart system after completion ----- (Y/N) > " ans
                            clear
                            echo "         COMMAND STATUS            "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"  
                            echo "-----------------------------------------------------------------"
                            echo "$(which sed)                         bos.sysmgt.sed          exec"
                            echo "$(which service)                     bos.sysmgt.service      exec"
                            echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                            echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                            echo "Command run: $(which service) network restart"
                            echo "Command run: $(which chkconfig) network on"
                            echo "Command run: $(which reboot) -f --verbose; exit"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Changing IP address to: $ipAddr on network interface: $NETINTF"
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which sed) -i 's/ONBOOT/#ONBOOT/g' /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            $(which sed) -i 'BOOTPROTO/#BOOTPROTO' /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            $(which sed) -i 's/IPADDR/#IPADDR/g' /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            echo "IPADDR=$ipAddr" >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            $(which sed) -i 's/NETMASK/#NETMASK/g' /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            echo "NETMASK=$netMask" >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            $(which sed) -i 's/GATEWAY/#GATEWAY/g' /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            echo "GATEWAY=$defGway" >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            $(which sed) -i 's/DNS1/#DNS1/G' /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            echo "DNS1=$dnsSrvAddr" >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Restarting network interfaces"
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which service) network restart
                            $(which chkconfig) network on
                            echo "########################################################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly set IP address to: $ipAddr on interface: $NETINTF" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: echo 'IPADDR=$ipAddr' >> /etc/sysconfig/network-scripts/ifcgf-Auto_$NETINTF" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "########################################################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            echo "IP address [$(date)] Successfuly set, system must now reboot"
                            if [ "$ans" = "Y" ]; then
                                  $(which reboot) -f --verbose; exit
                            else
                                  echo "System will not reboot..."
                                  read -p "Press [enter] to continue..." ReadDamKey
                            fi            
                       else
                            clear
                            cat /proc/version | grep "Debian" >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = Debian"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                          [Entry Fields]"
                                 printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       read netIntf
                                       NETINTF=$netIntf
                                 fi
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                 fi            
                                 read -p " Enter new IP address ---------------------- > " ipAddr
                                 read -p " Enter new netmask address ----------------- > " netMask
                                 read -p " Enter new broadcast address --------------- > " bcastAddr
                                 read -p " Enter new default gateway  ---------------- > " defGway
                                 read -p " Enter new DNS server IP address ----------- > " dnsSrvAddr
                                 read -p " Reboot system after completion ------ (Y/N) > " ans
                                 clear
                                 echo "         COMMAND STATUS            "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which sed)                         bos.sysmgt.sed          exec"
                                 echo "$(which ifdown)                      bos.ipmgt.ifdown        exec"
                                 echo "$(which ifup)                        bos.ipmgt.ifup          exec"
                                 echo "$(which reboot)                      bos.sysmgt.reboot       bos"
                                 echo "Command run: $(which ifdown) $NETINTF"
                                 echo "Command run: $(which ifup) $NETINTF"
                                 echo "Command run: $(which reboot) -f --verbose; exit"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Setting IP address: $ipAddr on network interface: $NETINTF"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which sed) -i 's/iface $NETINTF/#iface $NETINTF/g' /etc/network/interfaces
                                 echo "iface $NETINTF inet static" >> /etc/network/interfaces
                                 $(which sed) -i 's/address/#address/g' /etc/network/interface
                                 echo "address $ipAddr" >> /etc/network/interfaces
                                 $(which sed) -i 's/netmask/#netmask/g' /etc/network/interface
                                 echo "netmask $netMask" >> /etc/network/interfaces
                                 $(which sed) -i 's/broadcast/#broadcast/g' /etc/network/interface
                                 echo "broadcast $bcastAddr" >> /etc/network/interfaces
                                 $(which sed) -i 's/gateway/#gateway/g' /etc/network/interface
                                 echo "gateway $defGway" >> /etc/network/interfaces
                                 $(which sed) -i 's/dns-nameservers/#dns_nameservers' /etc/network/interface
                                 echo "dns-nameservers $dnsSrvAddr" >> /etc/network/interfaces
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Restarting network interface: $NETINTF"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which ifdown) $NETINTF
                                 $(which ifup) $NETINTF
                                 echo "##################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly set IP address: $ipAddr on network interface: $NETINTF" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: echo 'address $ipAddr' >> /etc/network/interface" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "##################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 echo
                                 echo "IP address [$(date)] Successfuly set, system must now reboot"
                                 if [ "$ans" = "" ]; then
                                       $(which reboot) -f --verbose; exit
                                 else
                                       echo "System will not reboot..."
                                       read -p "Press [enter] to continue..." ReadDamKey
                                 fi            
                            else
                                 clear
                                 cat /proc/version | grep "Ubuntu" >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      clear
                                      echo "OS = Ubuntu"
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "[TOP]                                          [Entry Fields]"
                                      printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                      if [ "$netIntf" = "" ]; then
                                            NETINTF=""
                                            read netIntf
                                            NETINTF=$netIntf
                                      fi
                                      if [ "$netIntf" = "" ]; then
                                            NETINTF=""
                                            NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                      fi            
                                      read -p " Enter new IP address ---------------------- > " ipAddr
                                      read -p " Enter new netmask address ----------------- > " netMask
                                      read -p " Enter new broadcast address --------------- > " bcastAddr
                                      read -p " Enter new default gateway  ---------------- > " defGway
                                      read -p " Enter new DNS server IP address ----------- > " dnsSrvAddr
                                      read -p " Reboot system after completion ------ (Y/N) > " ans
                                      clear
                                      echo "         COMMAND STATUS            "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which ifdown)                      bos.ipmgt.ifdown        exec"
                                      echo "$(which ifup)                        bos.ipmgt.ifup          exec"
                                      echo "$(which reboot)                      bos.sysmgt.reboot       bos"
                                      echo "Command run: $(which ifdown) $NETINTF"
                                      echo "Command run: $(which ifup) $NETINTF"
                                      echo "Command run: $(which reboot) -f --verbose; exit"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting IP address: $ipAddr on network interface: $NETINTF"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/iface $NETINTF/#iface $NETINTF/g' /etc/network/interfaces
                                      echo "iface $NETINTF inet static" >> /etc/network/interfaces
                                      $(which sed) -i 's/address/#address/g' /etc/network/interface
                                      echo "address $ipAddr" >> /etc/network/interfaces
                                      $(which sed) -i 's/netmask/#netmask/g' /etc/network/interface
                                      echo "netmask $netMask" >> /etc/network/interfaces
                                      $(which sed) -i 's/broadcast/#broadcast/g' /etc/network/interface
                                      echo "broadcast $bcastAddr" >> /etc/network/interfaces
                                      $(which sed) -i 's/gateway/#gateway/g' /etc/network/interface
                                      echo "gateway $defGway" >> /etc/network/interfaces
                                      $(which sed) -i 's/dns-nameservers/#dns_nameservers' /etc/network/interface
                                      echo "dns-nameservers $dnsSrvAddr" >> /etc/network/interfaces
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting network interface: $NETINTF"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which ifdown) $NETINTF
                                      $(which ifup) $NETINTF
                                      echo "##################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly set IP address: $ipAddr on network interface: $NETINTF" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: echo 'address $ipAddr' >> /etc/network/interface" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "##################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      echo
                                      echo "IP address [$(date)] Successfuly set, system must now reboot"
                                      if [ "$ans" = "" ]; then
                                            $(which reboot) -f --verbose; exit
                                      else
                                            echo "System will not reboot..."
                                            read -p "Press [enter] to continue..." ReadDamKey
                                      fi
                                 else
                                      clear
                                      cat /proc/version | grep "SUSE" >> /dev/null
                                      if [ $? -eq 0 ]; then
                                           clear
                                           echo "OS = SuSE"
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo "Network address example: 192.168.1.0"
                                           echo "Ensure that network is not configured via network manager in yast"
                                           echo "[TOP]                                       [Entry Fields]"
                                           printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                           if [ "$netIntf" = "" ]; then
                                                 NETINTF=""
                                                 read netIntf
                                                 NETINTF=$NETINTF
                                           fi
                                           if [ "$netIntf" = "" ]; then
                                                 NETINTF=""
                                                 NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                           fi            
                                           read -p " Enter new IP address ------------------- > " ipAddr
                                           read -p " Enter new netmask address -------------- > " netMask
                                           read -p " Enter new default gateway -------------- > " defGway
                                           read -p " Enter new network address -------------- > " networkAddr
                                           read -p " Enter new DNS server address ----------- > " dnsSrvAddr
                                           read -p " Reboot after completion ---------- (Y/N) > " ans
                                           clear
                                           echo "         COMMAND STATUS          "
                                           echo
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo
                                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                                           echo
                                           echo "Before command completion, additional instructions may appear below"
                                           echo
                                           echo "File                                 Fileset                 Type"
                                           echo "-----------------------------------------------------------------"
                                           echo "$(which sed)                         bos.sysmgt.sed          exec"
                                           echo "$(which service)                     bos.sysmgt.service      exec"
                                           echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                           echo "Command run: $(which sed) -i 's/dhcp/static/g' /etc/sysconfig/network/ifcgf-$NETINTF"
                                           echo "Command run: $(which service) network restart"
                                           echo "Command run: $(which reboot) -f --verbose; exit"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Setting IP address: $ipAddr on interface: $NETINTF"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which sed) -i 's/dhcp/static/g' /etc/sysconfig/network/ifcgf-$NETINTF
                                           $(which sed) -i 's/IPADDR/#IPADDR/g' /etc/sysconfig/network-scripts/ifcgf-$NETINTF
                                           echo "IPADDR='$ipAddr'" >> /etc/sysconfig/network/ifcgf-$NETINTF
                                           $(which sed) -i 's/NETMASK/#NETMASK/g' /etc/sysconfig/network-scripts/ifcgf-$NETINTF
                                           echo "NETMASK='$netMask'" >> /etc/sysconfig/network/ifcgf-$NETINTF
                                           $(which sed) -i 's/NETWORK/#NETWORK/G/g' /etc/sysconfig/network-scripts/ifcgf-$NETINTF 
                                           echo "NETWORK='$networkAddr'" >> /etc/sysconfig/network/ifcgf=$NETINTF
                                           $(which sed) -i 's/default/#default/g' /etc/sysconfig/network/routes
                                           echo "default $defGway" >> /etc/sysconfig/network/routes
                                           $(which sed) -i 's/nameserver/#nameserver/g' /etc/resolv.conf
                                           echo "nameserver $dnsSrvAddr" >> /etc/resolv.conf
                                           $(which service) network restart
                                           echo "#############################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly set IP address: $ipAddr on network interface: $NETINTF" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: echo 'IPADDR='$ipAddr' >> /etc/sysconfig/network/ifcgf-$NETINTF'" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "#############################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           echo
                                           echo "IP address [$(date)] Successfuly set, system must now reboot"
                                           if [ "$ans" = "" ]; then
                                                 $(which reboot) -f --verbose; exit
                                           else
                                                 echo "System will not reboot..."
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                           fi
                                      fi
                                 fi
                            fi
                       fi
                  else
                       $(which uname) | grep Darwin >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = OS X"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "New ip address example: 192.168.1.35"
                            echo "System netmask example: 255.255.255.0"
                            echo "Must be done localy, as this command will take the network adaptor down"
                            echo "[TOP]                                    [Entry Fields]"    
                            read -p " Enter new ip address ---------------- > " ipAddr
                            read -p " Enter system netmask ---------------- > " netMask
                            read -p " Enter default gateway --------------- > " defGway
                            read -p " Enter new connection name ----------- > " conName
                            clear
                            echo "         COMMAND STATUS                   "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which networksetup)                bos.ipmgt.networksetup  exec"
                            echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                            echo "Command run: $(which networksetup) -setmanual $conName $ipAddr $netMask $defGway"
                            echo "Command run: $(which reboot) -f now --verbose; exit"
                            sleep 2
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Setting static IP address: $ipAddr"
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which networksetup) -setmanual $conName $ipAddr $netMask $defGway
                            if [ $? -eq 0 ]; then
                                 echo "#################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly changed ip address to: $ipAddr" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which networksetup) -setmanual $conName $ipAddr $netMask $defGway" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "###################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not changed ip address set to: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which networksetup) -setmanual $conName $ipAddr $netMask $defGway" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "###################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 exit 1
                            fi
                            clear
                            echo "[$(date)] Successfuly set ip address to: $ipAddr on adaptor: $NETINTF"
                            echo "The system must now reboot, you can choose not to, however the ip address will not be set until the next reboot"
                            read -p "Reboot system (Y/N) > " ans
                            if [ "$ans" = "Y" ]; then
                                  echo "The system will now reboot"
                                  $(which reboot) -f now --verbose; exit
                            else
                                  echo "The system will not reboot"
                            fi
                       else
                            $(which uname) | grep BSD >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                     [Entry Fields]"
                                 read -p " Enter new IP address ----------------- > " newipAddr
                                 read -p " Enter new netmask -------------------- > " netMask
                                 read -p " Enter new default route -------------- > " defGway
                                 read -p " Enter new DNS server address --------- > " dnsSrvAddr
                                 printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       read netIntf
                                       NETINTF=$netIntf
                                 fi
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                                 fi
                                 printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] -------------- > "
                                 if [ "$ipAddr" = "" ]; then
                                       IP_ADDR=""
                                       read ipAddr
                                       IP_ADDR=$ipAddr
                                 fi
                                 if [ "$ipAddr" = "" ]; then
                                       IP_ADDR=""
                                       IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                 fi
                                 clear
                                 echo "             COMMAND STATUS                    "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                  Fileset                Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which sed)                          bos.sysmgt.sed         exec"
                                 echo "Command run: $(which sed) -i 's/inet $IP_ADDR netmask $netMask/inet $newipAddr netmask $netMask/g' /etc/rc.conf"
                                 echo "Command run: $(which sed) -i 's/$currdefGway/$defGway/g' /etc/rc.conf"
                                 echo "Command run: $(which sed) -i 's/defaultrouter/#defaultrouter/g' /etc/rc.conf"
                                 echo "Command run: $(which sed) -i 's/nameserver/#nameserver/g' /etc/rc.conf"
                                 sleep 2
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Setting static IP address: $newipAddr"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which sed) -i 's/inet $IP_ADDR netmask $netMask/inet $newipAddr netmask $netMask/g' /etc/rc.conf
                                 if [ $? -eq 0 ]; then
                                      echo "#######################################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly changed IP address from: $IP_ADDR to: $newipAddr" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which sed) -i 's/inet $IP_ADDR netmask $netMask/inet $newipAddr netmask $netMask' /etc/rc.conf" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "#######################################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "#######################################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not changed IP address from: $IP_ADDR to $newipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which sed) -i 's/inet $IP_ADDR netmask $netMask/inet $newipAddr netmask $netMask' /etc/rc.conf" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "#######################################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue.." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi     
                            fi
                       fi
                  fi
                  ;;
	   down)
                  clear
                  $(which uname) | grep Linux >> /dev/null
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       echo "$(date)                                    $(whoami)@$(hostname)"
                       echo "[TOP]                                     [Entry Fields]"
                       printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                       if [ "$netIntf" = "" ]; then
                             NETINTF=""
                             read netIntf
                             NETINTF=$netIntf
                       fi
                       if [ "$netIntf" = "" ]; then
                             NETINTF=""
                             NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                       fi             
                       clear
                       echo "         COMMAND STATUS               "
                       echo
                       echo "$(date)                                    $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING     stdout: yes     stderr: no  "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                  Fileset                Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which ifdown)                       bos.ipmgt.ifdown       exec"
                       echo "Command run: $(which ifdown) $NETINTF"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Shutting down network interface: $NETINTF"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       $(which ifdown) $NETINTF
                       if [ $? -eq 0 ]; then
                            echo "##############################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly disabled network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which ifdown) $NETINTF" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "##############################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            echo "############################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "Not disabled network adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which ifdown) $NETINTF" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "############################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                  else
                       $(which uname) | grep Darwin >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = OS X"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                                    [Entry Fields]"
                            printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  read netIntf
                                  NETINTF=$netIntf
                            fi
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                            fi        
                            clear
                            echo "         COMMAND STATUS                     "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which ifconfig)                    bos.ipmgt.ifconfig      exec"
                            echo "Command run: $(which ifconfig) $NETINTF down"
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Bringing down interface: $NETINTF"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which ifconfig) $NETINTF down
                            if [ $? -eq 0 ]; then
                                 echo "#############################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly taken adaptor: $NETINTF down" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which ifconfig) $NETINTF down" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#############################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "#######################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not taken adaptor: $NETINTF down, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which ifconfig) $NETINTF down" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#######################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep BSD >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                    [Entry Fields]"
                                 printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       read netIntf
                                       NETINTF=$netIntf
                                 fi
                                 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                                 fi        
                                 clear
                                 echo "         COMMAND STATUS                     "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "/etc/rc.d/netif                      bos.ipmgt.netif         exec"
                                 echo "/etc/rc.d/routing                    bos.ipmgt.routing       exec"
                                 echo "Command run: /etc/rc.d/netif stop $NETINTF"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Bringing down interface: $NETINTF"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 /etc/rc.d/netif stop $NETINTF
                                 if [ $? -eq 0 ]; then
                                      echo "##############################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly brought network interface: $NETINTF down" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: /etc/rc.d/netif stop $NETINTF" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "##############################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "############################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not brought network interface: $NETINTF down, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: /etc/rc.d/netif stop $NETINTF" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "############################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      exit 1
                                 fi
                                 /etc/rc.d/routing stop
                                 if [ $? -eq 0 ]; then
                                      echo "############################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly stopped network routing" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: /etc/rc.d/routing stop" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "############################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "############################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not stopped network routing, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: /etc/rc.d/routing stop" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "############################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi               
                            fi
                       fi
                  fi
                  ;;
	   up)
                clear
                $(which uname) | grep Linux
                if [ $? -eq 0 ]; then
                     clear
                     echo "OS = Linux"
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo "[TOP]                                     [Entry Fields]"
                     printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                     if [ "$netIntf" = "" ]; then
                           NETINTF=""
                           read netIntf
                           NETINTF=$netIntf
                     fi
                     if [ "$netIntf" = "" ]; then
                           NETINTF=""
                           NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                     fi      
                     clear
                     echo "         COMMAND STATUS        "
                     echo
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING     stdout: yes     stderr: no   "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "File                                  Fileset                Type"
                     echo "-----------------------------------------------------------------"
                     echo "$(which ifup)                         bos.ipmgt.ifup         exec"
                     echo "[$(date)] Command run: $(which ifup) $NETINTF"
                     sleep 2
                     $(which ifup) $NETINTF
                     if [ $? -eq 0 ]; then
                          echo "################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly brought up network adaptor: $NETINTF" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which ifup) $NETINTF" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     else
                          echo "#############################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not brought up network adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which ifup) $NETINTF" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "#############################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     fi
                else
                     $(which uname) | grep Darwin
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = OS X"
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "[TOP]                                    [Entry Fields]"
                          printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                          if [ "$netIntf" = "" ]; then
                                NETINTF=""
                                read netIntf
                                NETINTF=$netIntf
                          fi
                          if [ "$netIntf" = "" ]; then
                                NETINTF=""
                                NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                          fi        
                          clear
                          echo "         COMMAND STATUS                     "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which ifconfig)                    bos.ipmgt.ifconfig      exec"
                          echo "Command run: $(which ifconfig) $NETINTF up"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Bringing down interface: $NETINTF"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          $(which ifconfig) $NETINTF up
                          if [ $? -eq 0 ]; then
                               echo "#############################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly taken adaptor: $NETINTF up" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which ifconfig) $NETINTF up" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "#############################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "#######################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not taken adaptor: $NETINTF up, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which ifconfig) $NETINTF up" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "#######################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                              read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep BSD
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "[TOP]                                    [Entry Fields]"
                               printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                               if [ "$netIntf" = "" ]; then
                                     NETINTF=""
                                     read netIntf
                                     NETINTF=$netIntf
                               fi
                               if [ "$netIntf" = "" ]; then
                                     NETINTF=""
                                     NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                               fi        
                               clear
                               echo "         COMMAND STATUS                     "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "/etc/rc.d/netif                      bos.ipmgt.netif         exec"
                               echo "/etc/rc.d/routing                    bos.ipmgt.routing       exec"
                               echo "Command run: /etc/rc.d/netif stop $NETINTF"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Bringing down interface: $NETINTF"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               /etc/rc.d/netif stop $NETINTF
                               if [ $? -eq 0 ]; then
                                    echo "##############################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly brought network interface: $NETINTF down" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: /etc/rc.d/netif stop $NETINTF" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##############################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "############################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not brought network interface: $NETINTF down, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: /etc/rc.d/netif stop $NETINTF" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "############################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    exit 1
                               fi
                               /etc/rc.d/routing stop
                               if [ $? -eq 0 ]; then
                                    echo "############################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly stopped network routing" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: /etc/rc.d/routing stop" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "############################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "############################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not stopped network routing, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: /etc/rc.d/routing stop" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "############################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          fi
                     fi
                fi
                ;;
	   trace)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        $(which whois) >> /dev/null
                        if [ $? -eq 0 ]; then
                             echo "whois found in PATH"
                        else
                             clear
                             cat /proc/version | grep "Red Hat" >> /dev/null
                             if [ $? -eq 0 ]; then
                                  echo "OS = Red Hat"
                                  $(which yum) -y install whois | $(which tee) /var/log/smx-log/whois-install-redhat.log
                             else
                                  clear
                                  cat /proc/version | grep "Debian" >> /dev/null
                                  if [ $? -eq 0 ]; then
                                       echo "OS = Debian"
                                       $(which apt-get) -y install whois | $(which tee) /var/log/smx-log/whois-install-whois.log
                                  else
                                       clear
                                       cat /proc/version | grep "Ubuntu" >> /dev/null
                                       if [ $? -eq 0 ]; then
                                            echo "OS = Ubuntu"
                                            $(which apt-get) -y install whois | $(which tee) /var/log/smx-log/whois-install-ubuntu.log
                                       else
                                            clear
                                            cat /proc/version | grep "SUSE" >> /dev/null
                                            if [ $? -eq 0 ]; then
                                                 echo "OS = SuSE"
                                                 $(which zypper) in -y whois | $(which tee) /var/log/smx-log/whois-install-suse.log
                                            fi
                                       fi
                                  fi
                             fi
                        fi
                        clear
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "[TOP]                          [Entry Fields]"
                        read -p " Enter ip address ---------- > " ipAddr
                        clear
                        echo "        COMMAND STATUS                  "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING      stdout: yes    stderr: no   "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                  Fileset                Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which ping)                         bos.ipmgt.ping         exec"
                        echo "$(which traceroute)                   bos.ipmgt.traceroute   exec"
                        echo "$(which nslookup)                     bos.ipmgt.nslookup     exec"
                        echo "$(which whois)                        bos.ipmgt.whois        exec"
                        echo "Command run: $(which ping) -c 5 $ipAddr"
                        echo "Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log"
                        echo "Command run: $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup.log"
                        echo "Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log"
                        sleep 2
                        clear
                        $(which ping) -c 5 $ipAddr
                        if [ $? -eq 0 ]; then
                             echo "###########################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly sent ping test to host: $ipAddr" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which ping) -c 5 $ipAddr" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###########################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "#########################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not sent ping test to host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which ping) -c 5 $ipAddr" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "#########################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        clear
                        $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log
                        if [ $PIPESTATUS -eq 0 ]; then
                             echo "###########################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly traced host: $ipAddr" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###########################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "###########################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "Not traced host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "###########################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        clear
                        $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup.log
                        if [ $PIPESTATUS -eq 0 ]; then
                             echo "####################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly looked up host: $ipAddr" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "###################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "Not looked up host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "###################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        clear
                        $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log
                        if [ $PIPESTATUS -eq 0 ]; then
                             echo "#################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly displayed domain information for host: $ipAddr" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "#################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "#################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "Not displayed domain information for host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "#################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep Darwin >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = OS X"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo "[TOP]                          [Entry Fields]"
                             read -p " Enter ip address ---------- > " ipAddr
                             clear
                             echo "        COMMAND STATUS                  "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING      stdout: yes    stderr: no   "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                  Fileset                Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which ping)                         bos.ipmgt.ping         exec"
                             echo "$(which traceroute)                   bos.ipmgt.traceroute   exec"
                             echo "$(which nslookup)                     bos.ipmgt.nslookup     exec"
                             echo "$(which whois)                        bos.ipmgt.whois        exec"
                             echo "Command run: $(which ping) -c 5 $ipAddr"
                             echo "Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log"
                             echo "Command run: $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup.log"
                             echo "Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log"
                             sleep 2
                             clear
                             $(which ping) -c 5 $ipAddr
                             if [ $? -eq 0 ]; then
                                  echo "###########################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly sent ping test to host: $ipAddr" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which ping) -c 5 $ipAddr" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "###########################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#########################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not sent ping test to host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which ping) -c 5 $ipAddr" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "#########################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             clear
                             $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log
                             if [ $PIPESTATUS -eq 0 ]; then
                                  echo "###########################################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly traced host: $ipAddr" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "###########################################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "Not traced host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             clear
                             $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup.log
                             if [ $PIPESTATUS -eq 0 ]; then
                                  echo "####################################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly looked up host: $ipAddr" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "###################################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "###################################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "Not looked up host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which nslookup) $ipAddr | $(which tee) /var/log/smx-log/nslookup" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "###################################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             clear
                             $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log
                             if [ $PIPESTATUS -eq 0 ]; then
                                  echo "#################################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly displayed domain information for host: $ipAddr" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#################################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#################################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "Not displayed domain information for host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "#################################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                        else
                             $(which uname) | grep >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "[TOP]                          [Entry Fields]"
                                  read -p " Enter ip address ---------- > " ipAddr
                                  clear
                                  echo "        COMMAND STATUS                  "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING      stdout: yes    stderr: no   "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                  Fileset                Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which ping)                         bos.ipmgt.ping         exec"
                                  echo "$(which traceroute)                   bos.ipmgt.traceroute   exec"
                                  echo "$(which host)                         bos.ipmgt.host         exec"
                                  echo "$(which whois)                        bos.ipmgt.whois        exec"
                                  echo "Command run: $(which ping) -c 5 $ipAddr"
                                  echo "Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log"
                                  echo "Command run: $(which host) $ipAddr | $(which tee) /var/log/smx-log/nslookup.log"
                                  echo "Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log"
                                  sleep 2
                                  clear
                                  $(which ping) -c 5 $ipAddr
                                  if [ $? -eq 0 ]; then
                                       echo "###########################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly sent ping test to host: $ipAddr" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which ping) -c 5 $ipAddr" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###########################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "#########################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not sent ping test to host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which ping) -c 5 $ipAddr" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#########################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       exit 1
                                  fi
                                  clear
                                  $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log
                                  if [ $PIPESTATUS -eq 0 ]; then
                                       echo "###########################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly traced host: $ipAddr" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###########################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "Not traced host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which traceroute) $ipAddr | $(which tee) /var/log/smx-log/traceroute.log" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       exit 1
                                  fi
                                  clear
                                  $(which host) $ipAddr | $(which tee) /var/log/smx-log/host.log
                                  if [ $PIPESTATUS -eq 0 ]; then
                                       echo "####################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly looked up host: $ipAddr" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which host) $ipAddr | $(which tee) /var/log/smx-log/host.log" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "###################################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "Not looked up host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which host) $ipAddr | $(which tee) /var/log/smx-log/host.log" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "###################################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       exit 1
                                  fi
                                  clear
                                  $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log
                                  if [ $PIPESTATUS -eq 0 ]; then
                                       echo "#################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly displayed domain information for host: $ipAddr" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "#################################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "Not displayed domain information for host: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which whois) $ipAddr | $(which tee) /var/log/smx-log/whois.log" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#################################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi
                             fi
                        fi
                   fi
                   ;;
           help)
                  echo "list > List network adaptor"
                  echo "ifstats > Advanced network status"
                  echo "change > Change hostname address on system"
                  echo "chip > Change ip address"
                  echo "down > Bring network adaptor down"
                  echo "up > Bring network adaptor up"
                  echo "trace > Trace an ip address"
                  echo "help > This menu"
                  echo "exit > Exit back to system menu"
                  echo "exit-mas > Exit back to shell"
                  read -p "Press [enter] to continue..." ReadDamKey
                  ;;        
	   exit)
    	          clear
		  echo "######################################################" >> /var/log/smx-log/exit.log
        	  echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                  echo "[$(date)] Successfuly terminated $(basename $0)/sys_menu#ip_menu" >> /var/log/smx-log/exit.log
		  echo "" >> /var/log/smx-log/exit.log
                  echo "######################################################" >> /var/log/smx-log/exit.log
                  echo "" >> /var/log/smx-log/exit.log
            	  sys_menu
            	  ;;
	   exit-mas)
    	              clear
		      echo "#################################" >> /var/log/smx-log/exit.log
            	      echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                      echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
                      echo "" >> /var/log/smx-log/exit.log
                      echo "#################################" >> /var/log/smx-log/exit.log
                      echo "" >> /var/log/smx-log/exit.log
          	      exit 0
                      ;;
	   *)     clear
                  echo "        COMMAND STATUS                 "
		  echo
                  echo "$(date)                                     $(whoami)@$(hostname)"
              	  echo
              	  echo "Command: FAIL    stdout: yes     stderr: no         "
              	  echo
              	  echo "Before command completion, additional instructions may appear below"
              	  echo
              	  echo "Unkonwn command, please consult the command list, executed with pid - 3115 (0x1)"
              	  read -p "Press [enter] to continue..." ReadDamKey;;
       esac
   done
}

function fire_menu() {
    while :
    do
        clear
        echo "$(date)                                    $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/fire_menu" choice_fire
        echo

        case "$choice_fire" in
            status)
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "          COMMAND STATUS           "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING     stdout: yes     stderr: no   "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                  Fileset                Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which iptables)                     bos.firemgt.iptables   exec"
                          echo "Command run: $(which iptables) -L -n -v | $(which tee) /var/log/smx-log/iptables.log"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Displaying firewall status"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          $(which iptables) -L -n -v | $(which tee) /var/log/smx-log/iptables.log
                          if [ $PIPESTATUS -eq 0 ]; then
                               echo "########################################################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly displayed firewall status" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which iptables) -L -n -v | $(which tee) /var/log/smx-log/iptables.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "########################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "########################################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not displayed firewall status, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which iptables) -L -n -v | $(which tee) /var/log/smx-log/iptables.log" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "########################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep BSD >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "          COMMAND STATUS               "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which ipfw)                        bos.firemgt.ipfw        exec"
                               echo "Command run: $(which ipfw) list | $(which tee) /var/log/smx-log/firewall-bsd.log"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Displaying firewall status"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which ipfw) list | $(which tee) /var/log/smx-log/firewall-bsd.log
                               if [ $? -eq 0 ]; then
                                    echo "##########################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly listed firewall status" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which ipfw) list | $(which tee) /var/log/smx-log/firewall-bsd.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##########################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not listed firewall status, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which ipfw) list | $(which tee) /var/log/smx-log/firewall-bsd.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi          
                          else
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey
                               fire_menu
                          fi
                     fi
                     ;;
            port_open)
                        clear
                        $(which uname) | grep Linux >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Linux"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo "[TOP]                                     [Entry Fields]"
                             printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                             if [ "$netIntf" = "" ]; then
                                   NETINTF=""
                                   read netIntf
                                   NETINTF=$netIntf
                             fi
                             if [ "$netIntf" = "" ]; then
                                   NETINTF=""
                                   NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                             fi      
                             read -p " Enter port --------------------------- > " firePort
                             clear
                             echo "          COMMAND STATUS          "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING     stdout: yes    stderr: no    "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                  Fileset                Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which iptables)                     bos.firemgt.iptables   exec"
                             echo "$(which iptables-save)                bos.firemgt.iptables   exec"
                             echo "Command run: $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j ACCEPT"
                             echo "Command run: $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Opening port: $firePort on network interface: $NETINTF"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j ACCEPT
                             if [ $? -eq 0 ]; then
                                  echo "#########################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly opened port: $firePort on adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j ACCEPT" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#########################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "######################################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not opened port: $firePort on adaptor: $NETINTF" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j ACCEPT" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "######################################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log
                        else
                             $(which uname) | grep BSD >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "[TOP]                                    [Entry Fields]"
                                  read -p " Enter port -------------------------- > " firePort
                                  clear
                                  echo "         COMMAND STATUS                      "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which ipfw)                        bos.firemgt.ipfw        exec"
                                  echo "Command run: $(which ipfw) -q add allow tcp from any to any $firePort in"
                                  echo "Command run: $(which ipfw) -q add allow tcp from any to any $firePort out"
                                  echo "Command run: $(which ipfw) list | grep 'allow tcp from any to any dst-port $firePort'"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Opening port: $firePort"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  $(which ipfw) -a add allow tcp from any to any $firePort in
                                  if [ $? -eq 0 ]; then
                                       echo "##################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly opened port: $firePort, allowing inward connections" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which ipfw) -a add allow tcp from any to any $firePort in" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "##################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "##################################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not opened port: $firePort, check commad syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which ipfw) -a add allow tcp from any to any $firePort in" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "##################################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       exit 1
                                  fi
                                  $(which ipfw) -a add allow tcp from any to any $firePort out
                                  if [ $? -eq 0 ]; then
                                       echo "###################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly opened port: $firePort, allowing outward connections" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which ipfw) -a add allow tcp from any to any $firePort out" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "###################################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not opened port: $firePort, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which ipfw) -a add allow tcp from any to any $firePort out" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "###################################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       exit 1
                                  fi
                                  $(which ipfw) list | grep 'allow tcp from any to any dst-port $firePort'                   
                             else
                                  echo "Feature not avalible for OS X"
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  fire_menu
                             fi
                        fi     
                        ;;
            port_close)
                         clear
                         $(which uname) | grep Linux
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Linux"
                              echo "$(date)                                    $(whoami)@$(hostname)"
                              echo "[TOP]                                     [Entry Fields]"
                              printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                              if [ "$netIntf" = "" ]; then
                                    NETINTF=""
                                    read netIntf
                                    NETINTF=$netIntf
                              fi
                              if [ "$netIntf" = "" ]; then
                                    NETINTF=""
                                    NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                              fi
                              read -p " Enter port --------------------------- > " firePort
                              clear
                              echo "         COMMAND STATUS          "
                              echo
                              echo "$(date)                                    $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING     stdout: yes    stderr: no   "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                  Fileset                Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which iptables)                     bos.firemgt.iptables   exec"
                              echo "$(which iptables-save)                bos.firemgt.iptables   exec"
                              echo "Command run: $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j DROP"
                              echo "Command run: $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Closing port: $firePort on network interface: $NETINTF"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j DROP
                              if [ $? -eq 0 ]; then
                                   echo "####################################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly closed port: $firePort on adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j DROP" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "####################################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "####################################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not closed port: $firePort on adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which iptables) -A INPUT -i $NETINTF -p tcp --dport $firePort -j DROP" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "####################################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   exit 1
                              fi
                              $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log
                         else
                              $(which uname) | grep BSD
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = BSD"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo "[TOP]                                     [Entry Fields]"
                                   read -p " Enter port --------------------------- > " firePort
                                   clear
                                   echo "         COMMAND STATUS                       "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which ipfw)                        bos.firemgt.ipfw        exec"
                                   echo "Command run: $(which ipfw) -a add deny tcp from any to any $firePort in"
                                   echo "Command run: $(which ipfw) -a add deny tcp from any to any $firePort out"
                                   echo "Command run: $(which ipfw) list | grep 'deny tcp from any to any dst-port $firePort'"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Closing port: $firePort on network interface: $NETINTF"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   $(which ipfw) -a add deny tcp from any to any $firePort in
                                   if [ $? -eq 0 ]; then
                                        echo "#################################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly closed port: $firePort, not allowing inward connections" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which ipfw) -a add deny tcp from any to any $firePort in" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#################################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "#################################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log 
                                        echo "[$(date)] Not closed port: $filePort, not allowing outward connections" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which ipfw) -a add deny tcp from any to any $firePort in" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "#################################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        exit 1
                                   fi
                                   $(which ipfw) -a add deny tcp from any to any $firePort out
                                   if [ $? -eq 0 ]; then
                                        echo "#################################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly closed port: $firePort, not allowing outward connections" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which ipfw) -a add deny from any to any $firePort out" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#################################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "#################################################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not closed port: $firePort, check command syntax" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which ipfw) -a add deny from any to any $firePort out" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "#################################################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        exit 1
                                   fi
                                   $(which ipfw) list | grep 'deny tcp from any to any dst-port $firePort'
                              else
                                   echo "Feature not avalible on OS X"
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   fire_menu
                              fi
                         fi
                         ;;
            block_domain)
                           clear
                           $(which uname) | grep Linux >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = Linux"
                                echo "$(date)                                      $(whoami)@$(hostname)"
                                echo "[TOP]                                     [Entry Fields]"
                                read -p " Enter domain name -------------------- > " domainName
                                printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                if [ "$netIntf" = "" ]; then
                                      NETINTF=""
                                      read netIntf
                                      NETINTF=$netIntf
                                fi
                                if [ "$netIntf" = "" ]; then
                                      NETINTF=""
                                      NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                fi
                                clear
                                echo "         COMMAND STATUS             "
                                echo
                                echo "$(date)                                      $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING     stdout: yes      stderr: no   "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                  Fileset                Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which iptables)                     bos.firemgt.iptables   exec"
                                echo "$(which iptables-save)                bos.firemgt.iptables   exec"
                                echo "Command run: $(which iptables) -A OUTPUT -i $NETINTF -p tcp -d $domainName -j DROP"
                                echo "Command run: $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Blocking domain name: $domainName on network interface: $NETINTF"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                $(which iptables) -A OUTPUT -i $NETINTF -p tcp -d $domainName -j DROP
                                if [ $? -eq 0 ]; then
                                     echo "##################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly blocked domain: $domainName on adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which iptables) -A OUTPUT -i $NETINTF -p tcp -d $domainName -j DROP" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "##################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "##################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "Not blocked domain: $domainName on adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which iptables) -A OUTPUT -i $NETINTF -p tcp -d $domainName -j DROP" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "##################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
                                fi
                                $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log
                           else
                                $(which uname) | grep BSD >> /dev/null
                                if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = BSD"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "[TOP]                                   [Entry Fields]"
                                     read -p " Enter domain name ------------------ > " domainName
                                     clear
                                     echo "         COMMAND STATUS                     "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(whoami)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no"
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which ipfw)                        bos.firemgt.ipfw        exec"
                                     echo "Command run: $(which ipfw) -a add deny tcp from any to $domainName"
                                     echo "Command run: $(which ipfw) list | grep $domainName"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Blocking domain name: $domainName"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     $(which ipfw) -a add deny tcp from any to $domainName
                                     if [ $? -eq 0 ]; then
                                          echo "############################################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly blocked domain: $domainName" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which ipfw) -a add deny tcp from any to $domainName" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "############################################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "############################################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Not blocked domain: $domainName, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which ipfw) -a add deny tcp from any to $domainName" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "############################################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          exit 1
                                     fi
                                     $(which ipfw) list | grep $domainName          
                                else
                                     echo "Feature not avalible for OS X"
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     fire_menu
                                fi
                           fi
                           ;;
            block_ip)
                       clear
                       $(which uname) | grep Linux >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Linux"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                                     [Entry Fields]"
                            read -p " Enter ip address --------------------- > " ipAddr
                            printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  read netIntf
                                  NETINTF=$netIntf
                            fi
                            if [ "$netIntf" = "" ]; then
                                  NETINTF=""
                                  NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                            fi
                            clear
                            echo "        COMMAND STATUS             "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING       stdout: yes     stderr: no "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                  Fileset                Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which iptables)                     bos.firemgt.iptables   exec"
                            echo "$(which iptables-save)                bos.firemgt.iptables   exec"
                            echo "Command run: $(which iptables) -A OUTPUT -I $NETINTF -d $ipAddr -j DROP"
                            echo "Command run: $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log"
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Blocking IP address: $ipAddr on network interface: $NETINTF"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            $(which iptables) -A OUTPUT -I $NETINTF -d $ipAddr -j DROP
                            if [ $? -eq 0 ]; then
                                 echo "#######################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly blocked ip address: $ipAddr on adaptor: $NETINTF" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which iptables) -A OUTPUT -I $NETINTF -d $ipAddr -j DROP" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#######################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "##########################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not blocked ip address: $ipAddr on adaptor: $NETINTF, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which iptables) -A OUTPUT -I $NETINTF -d $ipAddr -j DROP" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "##########################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 exit 1
                            fi
                            $(which iptables-save) | $(which tee) /var/log/smx-log/iptables-save.log
                       else
                            $(which uname) | grep BSD >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                     [Entry Fields]"
                                 read -p " Enter IP address --------------------- > " ipAddr
                                 clear
                                 echo "         COMMAND STATUS                       "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which ipfw)                        bos.firemgt.ipfw        exec"
                                 echo "Command run: $(which ipfw) -a add deny from $ipAddr to any"
                                 echo "Command run: $(which ipfw) list | grep $ipAddr"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Blocking IP address: $ipAddr"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 $(which ipfw) -a add deny from $ipAddr to any
                                 if [ $? -eq 0 ]; then
                                      echo "####################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly blocked ip address: $ipAddr" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which ipfw) -a add deny from $ipAddr to any" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "####################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "####################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not blocked ip address: $ipAddr, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which ipfw) -a add deny from $ipAddr to any" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "####################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      exit 1
                                 fi
                                 $(which ipfw) list | grep $ipAddr          
                            else
                                 echo "Feature not avalible on OS X"
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 fire_menu
                            fi
                       fi
                       ;;
            setup)
                    $(which uname) | grep BSD
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = BSD"
                    else
                         clear
                         echo "Feature not avalible for Linux or OS X"
                         read -p "Press [enter] to continue..." ReadDamKey
                         fire_menu
                    fi
                    echo "$(date)                                     $(whoami)@$(hostname)"
                    echo "FreeBSD version example: 10.1"
                    echo "[TOP]                                   [Entry Fields]"
                    printf " Enter network interface [$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')] > "
                    if [ "$netIntf" = "" ]; then
                          NETINTF=""
                          read netIntf
                          NETINTF=$netIntf
                    fi
                    if [ "$netIntf" = "" ]; then
                          NETINTF=""
                          NETINTF=$(route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
                    fi
                    printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] -------------------------- > "
                    if [ "$ipAddr" = "" ]; then
                          IP_ADDR=""
                          read ipAddr
                          IP_ADDR=$ipAddr
                    fi
                    if [ "$ipAddr" = "" ]; then
                          IP_ADDR=""
                          IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                    fi
                    read -p " Is the system source code installed on this system (Y/N) -------------------------------------------------------------- > " ansSrc
                    read -p " Enter freebsd version ------------------------------------------------------------------------------------------------- > " bsdVersion
                    if [ "$ansSrc" = "Y" ]; then
                          echo "System source code is installed"
                    else
                          echo "Installing system source code"
                          $(which subversion) >> /dev/null
                          if [ $? -eq 0 ]; then
                               echo "subversion is installed"
                          else
                               $(which make) -C /usr/ports/devel/subversion install clean
                          fi
                          $(which svn) checkout https://svn0.us-west.freebsd.org/base/releng/$bsdVersion/ /usr/src/
                    fi
                    cp /usr/src/sys/`uname -m`/conf/GENERIC /usr/src/sys/`uname -m`/conf/IPFWKERNEL
                    echo "options IPFWKERNEL # required for IPFW" >> /usr/src/sys/`uname -m`/conf/IPFWKERNEL
                    echo "options IPFWKERNEL_VERBOSE # optional; logging" >> /usr/src/sys/`uname -m`/conf/IPFWKERNEL
                    echo "options IPFWKERNEL_VERBOSE_LIMIT=10" >> /usr/src/sys/`uname -m`/conf/IPFWKERNEL
                    echo "options IPDIVERT" >> /usr/src/sys/`uname -m`/conf/IPFWKERNEL
                    cd /usr/src
                    $(which make) buildkernel KERNELCONF=IPFWKERNEL
                    cp -R /usr/src/sys/`uname -m`/conf/GENERIC /usr/obj/usr/src/sys/
                    $(which make) installkernel KERNELCONF=IPFWKERNEL
                    echo
                    echo 'firewall_enable="YES"' >> /etc/rc.conf
                    echo 'firewall_script="/usr/local/etc/ipfw.rules"' >> /etc/rc.conf
                    echo 'IPF="ipfw -q all"' >> /usr/local/etc/ipfw.rules
                    echo "ipfw -q -f flush" >> /usr/local/etc/ipfw.rules
                    echo "# loopback" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 10 allow all from to any via lo0" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 20 deny all from any to 127.0.0.0/8" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 30 deny all from 127.0.0.0/8 to any" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 40 deny tcp from any to any frag" >> /usr/local/etc/ipfw.rules
                    echo "# statefull" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 50 check-state" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 60 allow tcp from any to any $IP_ADDR" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 70 allow all from any to any out keep-state" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 80 allow icmp from any to any" >> /usr/local/etc/ipfw.rules
                    echo "# open port ftp (20, 21), ssh (22), mail (25), http (80), dns (53)"  >> /usr/local/etc/ipfw.rules
                    echo "$IPF 110 allow tcp from any to any 21 in" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 120 allow tcp from any to any 21 out" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 130 allow tcp from any to any 22 in" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 140 allow tcp from any to any 22 out" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 150 allow tcp from any to any 25 in" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 160 allow tcp from any to any 25 out" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 170 allow tcp from any to any 53 in" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 175 allow udp from any to any 53 in" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 180 allow tcp from any to any 53 out" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 185 allow udp from any to any 53 out" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 200 allow tcp from any to any 80 in" >> /usr/local/etc/ipfw.rules
                    echo "$IPF 210 allow tcp from any to any 80 out" >> /usr/local/etc/ipfw.rules
                    $(which sh) /usr/local/etc/ipfw.rules
                    echo "IPFW has been successfuly configure, system must now reboot"
                    read -p "Reboot system (Y/N) > " ansReboot
                    if [ "$ansReboot" = "Y" ]; then
                          $(which reboot)
                    else
                          echo "System will not reboot, IPFW will not be enabled untill next reboot"
                    fi
                    ;;
            help)
                   echo "status > View the state of the system firewall"
                   echo "port_open > Open a port in the firewall"
                   echo "port_close > Close a port in the firewall"
                   echo "block_domain > Block domain in firewall"
                   echo "block_ip > Block IP address in firewall"
                   echo "setup > Setup and configure ipfw (BSD only)"
                   echo "help > This menu"
                   echo "exit > Exit back to sys_menu"
                   echo "exit-mas > Exit back to shell" 
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;     
            exit)
                   clear
		   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/sys_menu#fire_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   sys_menu
                   ;;
            exit-mas)
            	       clear
            	       echo "#################################" >> /var/log/smx-log/exit.log
              	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
              	       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
              	       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
              	       exit 0
              	       ;;
            *)
                clear
                echo "       COMMAND STATUS         "
                echo
                echo "$(date)                                     $(whoami)@$(hostname)"
                echo
                echo "Command: FAIL     stdout: yes     stderr: no       "
                echo
                echo "Before command completion, additional instructions may appear below"
                echo
                echo "command unknown, please consult the command list, executed with pid - 2516 (0x1)"
                read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function pkg_menu() {
    while :
    do
        clear
        echo
        echo "$(date)                                      $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/pkg_menu" choice_soft
        echo

        case "$choice_soft" in
            search)
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          cat /proc/version | grep "Red Hat" >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Red Hat"
                               echo "$(date)                                    $(whoami)@$(hostname)"
                               echo "[TOP]                                        [Entry Fields]"
                               read -p " Enter package name ---------------------- > " pkgName
                               read -p " Install package: $pkgName --------- (Y/N) > " ans
                               clear
                               echo "         COMMAND STATUS                    "
                               echo
                               echo "$(date)                                    $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no    "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which yum)                         bos.pkgmgt.yum          exec"
                               echo "Command run: $(which yum) search $pkgName | $(which tee) /var/log/smx-log/yum.log"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Searching for package: $pkgName"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which yum) search $pkgName | $(which tee) /var/log/smx-log/yum.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "#####################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly searched for package: $pkgName" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which yum) search $pkgName | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "#####################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "Not searched for package: $pkgName, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which yum) search $pkgName | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    exit 1
                               fi
                               if [ "$ans" = "Y" ]; then
                                     clear
                                     echo "      COMMAND STATUS         "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                     echo "[$(date)] Command run: $(which yum) -y install $pkgName | $(which tee) /var/log/smx-log/yum.log"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing package: $pkgName"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     $(which yum) -y install $pkgName | $(which tee) /var/log/smx-log/yum.log
                                     if [ $PIPESTATUS -eq 0 ]; then
                                          echo "#########################################################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly installed program: $pkgName on system" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which yum) -y install $pkgName | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "#########################################################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "Not installed program: $pkgName, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which yum) -y install $pkgName | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     fi
                               else
                                     echo "Program: $pkgName will not be installed on this system !!"
                                     read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               clear
                               cat /proc/version | grep "Debian" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = Debian"
                                    echo "$(date)                                      $(whoami)@$(hostname)"
                                    echo "[TOP]                                           [Entry Fields]"
                                    read -p " Enter package name ------------------------- > " pkgName
                                    read -p " Install package: $pkgName ------------ (Y/N) > " ans
                                    clear
                                    echo "         COMMAND STATUS                       "
                                    echo
                                    echo "$(date)                                      $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no      "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which apt-cache)                   bos.pkgmgt.apt-cache    exec"
                                    echo "Command run: $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-get.log"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Searching for package: $pkgName"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-cache.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "#################################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly searched for package: $pkgName" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-cache.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "#################################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "Not searched for package: $pkgName, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    if [ "$ans" = "Y" ]; then
                                          clear
                                          echo "       COMMAND STATUS       "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                          echo "Command run: $(which apt-get) -y install $pkgName"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Installing package: $pkgName"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          $(which apt-get) -y install $pkgName
                                          if [ $PIPESTATUS -eq 0 ]; then
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed package: $pkgName on system" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install $pkgName" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          else
                                               echo "###############################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "Not installed package: $pkgName on system, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install $pkgName" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "###############################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          fi
                                    else
                                          echo "Package: $pkgName will not be installed on system !!"
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    fi      
                               else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "$(date)                                      $(whoami)@$(hostname)"
                                         echo "[TOP]                                           [Entry Fields]"
                                         read -p " Enter package name ------------------------- > " pkgName
                                         read -p " Install package: $pkgName ------------ (Y/N) > " ans
                                         clear
                                         echo "         COMMAND STATUS                       "
                                         echo
                                         echo "$(date)                                      $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no      "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                 Type"
                                         echo "-----------------------------------------------------------------"
                                         echo "$(which apt-cache)                   bos.pkgmgt.apt-cache    exec"
                                         echo "Command run: $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-get.log"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Searching for package: $pkgName"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-cache.log
                                         if [ $PIPESTATUS -eq 0 ]; then
                                              echo "#################################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly searched for package: $pkgName" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-cache.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "#################################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "Not searched for package: $pkgName, check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-cache) search $pkgName | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              exit 1
                                         fi
                                         if [ "$ans" = "Y" ]; then
                                               clear
                                               echo "       COMMAND STATUS       "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                               echo "Command run: $(which apt-get) -y install $pkgName"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Installing package: $pkgName"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               $(which apt-get) -y install $pkgName
                                               if [ $PIPESTATUS -eq 0 ]; then
                                                    echo "#################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly installed package: $pkgName on system" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which apt-get) -y install $pkgName" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "#################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               else
                                                    echo "###############################################################" >> /var/log/smx-log/fail.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                    echo "Not installed package: $pkgName on system, check command syntax" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Command run: $(which apt-get) -y install $pkgName" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    echo "###############################################################" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/fail.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               fi
                                         else
                                               echo "Package: $pkgName will not be installed on system !!"
                                               read -p "Press [enter] to continue..." ReadDamKey
                                         fi      
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo "[TOP]                                          [Entry Fields]"
                                              read -p " Enter package name ------------------------ > " pkgName
                                              read -p " Install package: $pkgName ----------- (Y/N) > " ans
                                              clear
                                              echo "         COMMAND STATUS                      "
                                              echo
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                              echo "Command run: $(which zypper) search --match-exact $pkgName | $(which tee) /var/log/smx-log/zypper.log"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Searching for package: $pkgName"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              $(which zypper) search --match-exact $pkgName | $(which tee) /var/log/smx-log/zypper.log
                                              if [ $PIPESTATUS -eq 0 ]; then
                                                   echo "#########################################################################################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly searched for package: $pkgName" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) search --match-exact $pkgName | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "#########################################################################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "Not searched for package: $pkgName, check command syntax" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) search --match-exact $pkgName | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   exit 1
                                              fi
                                              if [ "$ans" = "Y" ]; then
                                                    clear
                                                    echo "       COMMAND STATUS         "
                                                    echo
                                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                                    echo
                                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                    echo
                                                    echo "Before command completion, additional instructions may appear below"
                                                    echo
                                                    echo "File                                 Fileset                 Type"
                                                    echo "-----------------------------------------------------------------"
                                                    echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                    echo "Command run: $(which zypper) in -y $pkgName | $(which tee) /var/log/smx-log/zypper.log"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Installing package: $pkgName"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    $(which zypper) in -y $pkgName | $(which tee) /var/log/smx-log/zypper.log
                                                    if [ $PIPESTATUS -eq 0 ]; then
                                                         echo "##########################################################################################" >> /var/log/smx-log/success.log
                                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                         echo "[$(date)] Successfuly installed package: $pkgName on system" >> /var/log/smx-log/success.log
                                                         echo "[$(date)] Command run: $(which zypper) in -y $pkgName | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                         echo "" >> /var/log/smx-log/success.log
                                                         echo "##########################################################################################" >> /var/log/smx-log/success.log
                                                         echo "" >> /var/log/smx-log/success.log
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         clear
                                                         echo
                                                         cat /var/log/smx-log/zypper.log | tail -n 7
                                                         echo
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                    else
                                                         echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                         echo "Not installed package: $pkgName on system, check command syntax" >> /var/log/smx-log/fail.log
                                                         echo "[$(date)] Command run: $(which zypper) in -y $pkgName | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                         echo "" >> /var/log/smx-log/fail.log
                                                         echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                                         echo "" >> /var/log/smx-log/fail.log
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         clear
                                                         echo
                                                         cat /var/log/smx-log/fail.log | tail -n 7
                                                         echo
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                    fi
                                              else
                                                    echo "Package: $pkgName will not be installed on system"
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                              fi
                                         fi
                                    fi
                               fi
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               read -p "Install dmg or pkg file [dmg/pkg] > " installAns
                               if [ "$installAns" = "dmg" ]; then
                                     clear
                                     echo "$(date)                                    $(whoami)@$(hostname)"
                                     echo "Software path example: /Applications (don't end in /)"
                                     echo "Binary path example: /Users/user/Download/file.dmg"
                                     echo "mount path example: /Volumes/Application (don't end in /)"
                                     echo "Program name example: example.app"
                                     echo "[TOP]                            [Entry Fields]"
                                     read -p " Enter software path ---------- > " softPath
                                     read -p " Enter binary path ------------ > " binPath
                                     read -p " Enter mounted path ----------- > " mountPath
                                     read -p " Enter program name ----------- > " softName
                                     clear
                                     echo "         COMMAND STATUS               "
                                     echo
                                     echo "$(date)                                    $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no    "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which hdiutil)                     bos.softmgt.hdiutil     exec"
                                     echo "$(which cp)                          bos.sysmgt.cp           exec"
                                     echo "Command run: $(which hdiutil) mount $binPath"
                                     echo "Command run: $(which cp) -R $mountPath/$softName $softPath"
                                     echo "Command run: $(which hdiutil) unmount $mountPath"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Mounting disk as: $binPath"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Copying file from: $mountPath/$softName to $softPath"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Unmounting diskL $mountPath"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which hdiutil) mount "$binPath"
                                     if [ $? -eq 0 ]; then
                                          echo "############################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly mounted disk: $binPath" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which hdiutil) mount $binPath" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "############################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Not mounted disk: $binPath, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which hdiutil) mount $binPath" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          exit 1
                                     fi
                                     $(which cp) -R "$mountPath/$softName" "$softPath"
                                     $(which hdiutil) unmount "$mountPath"
                               else
                                     clear
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "Path to file example: /Users/Download/file.pkg"
                                     echo "Path to install location: /Volumes/Machintosh\ HD/"
                                     echo "[TOP]                               [Entry Fields]"
                                     read -p " Enter path to file -------------- > " pkgPath
                                     read -p " Enter install location ---------- > " instLoc
                                     clear
                                     echo "          COMMAND STATUS          "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which installer)                   bos.softmgt.installer   exec"
                                     echo "Command run: $(which installer) -package $pkgPath -target $instLoc"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing .pkg file: $pkgPath to: $instLoc"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which installer) -package $pkgPath -target $instLoc
                                     if [ $? -eq 0 ]; then
                                          echo "##################################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly installed package: $pkgPath in location: $instLoc" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which installer) -package $pkgPath -target $instLoc" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "##################################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "##########################################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Not installed package: $pkgPath in location: instLoc, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which installer) -package $pkgPath -target $instLoc" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "##########################################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     fi
                               fi      
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "Package source example: lang/perl5.14"
                                    echo "[TOP]                                    [Entry Fields]"
                                    read -p " Enter package source ---------------- > " pkgSource
                                    clear
                                    echo "         COMMAND STATUS                      "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which make)                        bos.pkgmgt.make         exec"
                                    echo "Command run: $(which make) -C /usr/ports/$pkgSource install clean"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Installing package source: $pkgSource"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which make) -C /usr/ports/$pkgSource install clean
                                    if [ $? -eq 0 ]; then
                                         echo "###########################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly installed package source: $pkgSource" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which make) -C /usr/ports/$pkgSource install clean" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "###########################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "###########################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not installed package source: $pkgSource, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which make) -C /usr/ports/$pkgSource install clean" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "###########################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi     
                               fi     
                          fi
                     fi
                     ;;
	    remove)
                     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          cat /proc/version | grep "Red Hat" >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Red Hat"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "[TOP]                        [Entry Fields]"
                               read -p " Enter package name ------ > " pkgName
                               clear
                               echo "         COMMAND STATUS          "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: OK    stdout: yes    stderr: no          "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which yum)                         bos.pkgmgt.yum          exec"
                               echo "Command run: $(which yum) remove $pkgName | $(which tee) /var/log/smx-log/yum.log"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Removing package: $pkgName"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which yum) remove $pkgName | $(which tee) /var/log/smx-log/yum.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "#####################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly removed package: $pkgName from system" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which yum) remove $pkgName | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "#####################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "Not removed package: $pkgName, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which yum) remove $pkgName | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               clear
                               cat /proc/version | grep "Debian" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = Debian"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "[TOP]                        [Entry Fields]"
                                    read -p " Enter package name ------ > " pkgName
                                    clear
                                    echo "         COMMAND STATUS          "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                    echo "Command run: $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Removing package: $pkgName"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly removed package: $pkgName from system" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "Not removed package: $pkgName from system, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                              else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo "[TOP]                        [Entry Fields]"
                                         read -p " Enter package name ------ > " pkgName
                                         clear
                                         echo "         COMMAND STATUS          "
                                         echo
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                 Type"
                                         echo "-----------------------------------------------------------------"
                                         echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                         echo "Command run: $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Removing package: $pkgName"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log
                                         if [ $PIPESTATUS -eq 0 ]; then
                                              echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly removed package: $pkgName from system" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "Not removed package: $pkgName from system, check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-get) remove --purge $pkgName | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo "[TOP]                              [Entry Fields]"
                                              read -p " Enter package name ------------ > " pkgName
                                              clear
                                              echo "         COMMAND STATUS                "
                                              echo
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                              echo "Command run: $(which zypper) remove $pkgName | $(which tee) /var/log/smx-log/zypper.log"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Removing package: $pkgName"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              $(which zypper) remove $pkgName | $(which tee) /var/log/smx-log/zypper.log
                                              if [ $PIPESTATUS -eq 0 ]; then
                                                   echo "#################################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "Package: $pkgName [$(date)] Successfuly removed from system" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) remove $pkgName" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "#################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "Package: $pkgName not removed from system, check command syntax" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) remove $pkgName | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              fi
                                         fi
                                    fi
                               fi
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "App example: firefox.app"
                               echo "[TOP]                                    [Entry Fields]"
                               read -p " Enter app to remove ----------------- > " appRemove
                               clear
                               echo "         COMMAND STATUS                      "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which rm)                          bos.sysmgt.rm           exec"
                               echo "Command run: $(which rm) -rf /Applications/$appRemove"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Removing application: $appRemove"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which rm) -rf /Applications/$appRemove
                               if [ $? -eq  0 ]; then
                                    echo "####################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly removed Application: $appRemove" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which rm) -rf /Applications/$appRemove" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "####################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not removed Application: $appRemove, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which rm) -rf /Applications/$appRemove" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi          
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    $(which pkg_deinstall) >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         echo "pkg_deinstall found in $PATH"
                                    else
                                         $(which make) -C /usr/ports/ports-mgmt/portsupgrade install clean
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi               
                                    echo "OS = BSD"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "Package example: lynx"
                                    echo "[TOP]                                      [Entry Fields]"
                                    read -p " Enter package to remove --------------- > " pkgRemove
                                    clear
                                    echo "         COMMAND STATUS                        "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which pkg_deinstall)               bos.pkg.pkg_deinstall   exec"
                                    echo "Command run: $(which pkg_deinstall) -R -r $pkgRemove"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Removing application: $pkgRemove"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(pkg_deinstall) -R -r $pkgRemove
                                    if [ $? -eq 0 ]; then
                                         echo "##############################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "Successfuly removed package: $pkgRemove" >> /var/log/smx-log/success.log
                                         echo "Command run: $(which pkg_deinstall) -R -r $pkgRemove" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "##############################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "##############################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "Not removed package: $pkgRemove, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "Command run: $(which pkg_deinstall) -R -r $pkgRemove" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "##############################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi          
                               fi
                          fi
                     fi
                     ;;
	    install_deb)
		          clear
                      	  echo "$(date)                                     $(whoami)@$(hostname)"
                      	  echo "Package location example: /home/user/pkg.deb"
                      	  echo "[TOP]                           [ Entry Fields]"
                      	  read -p " Enter package location ------ > " pkgLoc
                      	  clear
                      	  echo "         COMMAND STATUS              "
                      	  echo
                      	  echo "$(date)                                     $(whoami)@$(hostname)"
                      	  echo
                      	  echo "Command: RUNNING    stdout: yes    stderr: no     "
                      	  echo
                      	  echo "Before command completion, additional instructions may appear below"
                      	  echo
                      	  echo "File                                 Fileset                 Type"
                      	  echo "-----------------------------------------------------------------"
                      	  echo "$(which dpkg)                        bos.pkgmgt.dpkg         exec"
                      	  echo "Command run: $(which dpkg) -i $pkgLoc | $(which tee) /var/log/smx-log/dpkg.log"
                      	  sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Installing .deb file: $pkgLoc"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                      	  $(which dpkg) -i $pkgLoc | $(which tee) /var/log/smx-log/dpkg.log
                      	  if [ $PIPESTATUS -eq 0 ]; then
  			       echo "##################################################################################" >> /var/log/smx-log/success.log
                      	       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                      	       echo "[$(date)] Package at location: $pkgLoc [$(date)] Successfuly installed" >> /var/log/smx-log/success.log
			       echo "[$(date)] Command run: $(which dpkg) -i $pkgLoc | $(which tee) /var/log/smx-log/dpkg.log" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "##################################################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                      	       read -p "Press [enter] to continue..." ReadDamKey
                               clear
                      	       echo
                      	       cat /var/log/smx-log/success.log | tail -n 7
                      	       echo
                      	       read -p "Press [enter] to continue..." ReadDamKey
                    	  else
                    	       echo "##################################################################################" >> /var/log/smx-log/fail.log
                      	       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                      	       echo "[$(date)] Package not installed at location: $pkgLoc, check command syntax" >> /var/log/smx-log/fail.log
			       echo "[$(date)] Command run: $(which dpkg) -i $pkgLoc | $(which tee) /var/log/smx-log/dpkg.log" >> /var/log/smx-log/fail.log
                    	       echo "" >> /var/log/smx-log/fail.log
                               echo "##################################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                      	       read -p "Press [enter] to continue..." ReadDamKey
                               clear
                      	       echo
                      	       cat /var/log/smx-log/fail.log | tail -n 7
                      	       echo
                      	       read -p "Press [enter] to continue..." ReadDamKey
                      	  fi
                      	  ;;
	    install_rpm)
                          clear
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "[TOP]                                                     [Entry Fields]"
                          read -p " Install or remove rpm file ---------- (install/remove) > " ans
                          if [ "$ans" = "install" ]; then
                                clear
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "You must know the location of the rpm file on the filesystem"
                              	echo "For example: /home/user/file.rpm"
                              	echo "[TOP]                                     [Entry Fields]"
                              	read -p " Enter rpm file location -------------- > " pkgLoc
                              	clear
                              	echo "         COMMAND STATUS                       "
                              	echo
                		echo "$(date)                                     $(whoami)@$(hostname)"
                          	echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                              	echo
                              	echo "Before command completion, additional instructions may appear below"
                              	echo
                              	echo "File                                 Fileset                 Type"
                              	echo "-----------------------------------------------------------------"
                              	echo "$(which rpm)                         bos.pkgmgt.rpm          exec"
                              	echo "Command run: $(which rpm) -ivh $pkgLoc | $(which tee) /var/log/smx-log/rpm.log"
                              	sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Installing .rpm file: $pkgLoc"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
				$(which rpm) -ivh $pkgLoc | $(which tee) /var/log/smx-log/rpm.log
                                if [ $PIPESTATUS -eq 0 ]; then
                              	     echo "##################################################################################" >> /var/log/smx-log/success.log
                              	     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              	     echo "[$(date)] Successfuly installed package at location: $pkgLoc" >> /var/log/smx-log/success.log
                              	     echo "[$(date)] Command run: $(which rpm) -ivh $pkgLoc | $(which tee) /var/log/smx-log/rpm.log" >> /var/log/smx-log/success.log
                              	     echo "" >> /var/log/smx-log/success.log
                              	     echo "##################################################################################" >> /var/log/smx-log/success.log
                              	     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                        	     echo
                            	     cat /var/log/smx-log/success.log | tail -n 7
                            	     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                  		else
                              	     echo "##################################################################################" >> /var/log/smx-log/fail.log
                              	     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          	     echo "[$(date)] Not installed package at location: $pkgLoc, check command syntax" >> /var/log/smx-log/fail.log
                		     echo "[$(date)] Command run: $(which rpm) -ivh $pkgLoc | $(which tee) /var/log/smx-log/rpm.log" >> /var/log/smx-log/fail.log
                              	     echo "" >> /var/log/smx-log/fail.log
                              	     echo "##################################################################################" >> /var/log/smx-log/fail.log
                          	     echo "" >> /var/log/smx-log/fail.log
                              	     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                              	     echo
                              	     cat /var/log/smx-log/fail.log | tail -n 7
                              	     echo
                              	     read -p "Press [enter] to continue..." ReadDamKey
                            	fi
                    	  else
        			clear
                              	echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "pkgName example: iptables"
                            	echo "[TOP]                                   [Entry Fields]"
                            	read -p " Enter package name ----------------- > " pkgName
                            	clear
                            	echo "         COMMAND STATUS        "
                            	echo
                            	echo "$(date)                                     $(whoami)@$(hostname)"
                            	echo
                            	echo "Command: RUNNING    stdout: yes    stderr: no     "
                            	echo
                            	echo "Before command completion, additional instructions may appear below"
                            	echo
                            	echo "File                                 Fileset                 Type"
                            	echo "-----------------------------------------------------------------"
                            	echo "$(which rpm)                         bos.pkgmgt.rpm          exec"
                            	echo "[$(date)] Command run: $(which rpm) -qa $RPM_FULL | $(which tee) /var/log/smx-log/rpm.log"
                              	sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Removing .rpm package: $RPM_FULL"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                            	RPM_FULL=`rpm -qa | grep $pkgName`
                            	$(which rpm) -e $RPM_FULL | $(which tee) /var/log/smx-log/rpm.log
                		if [ $PIPESTATUS -eq 0 ]; then
                            	     echo "##################################################################################" >> /var/log/smx-log/success.log
                            	     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            	     echo "[$(date)] Successfuly removed package: $RPM_FULL" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which rpm) -e $RPM_FULL | $(which tee) /var/log/smx-log/rpm.log" >> /var/log/smx-log/success.log
                        	     echo "" >> /var/log/smx-log/success.log
                                     echo "##################################################################################" >> /var/log/smx-log/success.log
                            	     echo "" >> /var/log/smx-log/success.log
                            	     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                              	     echo
                              	     cat /var/log/smx-log/success.log | tail -n 7
                              	     echo
				     read -p "Press [enter] to continue..." ReadDamKey
                  		else
                            	     echo "###################################################################################" >> /var/log/smx-log/fail.log
                            	     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            	     echo "[$(date)] Not removed package: $RPM_FULL, check command syntax" >> /var/log/smx-log/fail.log
                            	     echo "[$(date)] Command run: $(which rpm) -qa $RPM_FULL | $(which tee) /var/log/smx-log/rpm.log" >> /var/log/smx-log/fail.log
                            	     echo "" >> /var/log/smx-log/fail.log
                            	     echo "###################################################################################" >> /var/log/smx-log/fail.log
                            	     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                            	     echo
                            	     cat /var/log/smx-log/fail.log | tail -n 7
                            	     echo
                            	     read -p "Press [enter] to continue..." ReadDamKey
                		fi
                          fi
			  ;;
	    update)
		     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          cat /proc/version | grep "Red Hat" >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Red Hat"
                               echo "            COMMAND STATUS            "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which yum)                         bos.pkgmgt.yum          exec"
                               echo "Command run: $(which yum) list updates | $(which tee) /var/log/smx-log/yum.log"
                               echo "Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log"
                               sleep 2
                               clear
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Listing updates"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which yum) list updates | $(which tee) /var/log/smx-log/yum.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "##################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly listed updates" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which yum) list updates | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "##################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not listed updates, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which yum) list updates | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "##################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    exit 1
                               fi
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Updating system"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "############################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly installed updates" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "############################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "############################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not installed updates, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "############################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               clear
                               cat /proc/version | grep "Debian" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = Debian"
                                    echo "          COMMAND STATUS           "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                    echo "Command run: $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log"
                                    echo "Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log"
                                    echo "Command run: $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Listing updates"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log
                                    if [ $? -eq 0 ]; then
                                         echo "####################################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly listed all avalible updates" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "####################################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not listed all avalible updates, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Updating system sources"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "####################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly updated sources" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "####################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "####################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not updated sources, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "####################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Updating system"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "#####################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly updated software" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "#####################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not updated software, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                               else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "          COMMAND STATUS           "
                                         echo
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                 Type"
                                         echo "-----------------------------------------------------------------"
                                         echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                         echo "Command run: $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log"
                                         echo "Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log"
                                         echo "Command run: $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Listing updates"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log
                                         if [ $? -eq 0 ]; then
                                              echo "####################################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly listed all avalible updates" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "####################################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Not listed all avalible updates, check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-get) -s upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              exit 1
                                         fi
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Updating system sources"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log
                                         if [ $PIPESTATUS -eq 0 ]; then
                                              echo "####################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly updated sources" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "####################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "####################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Not updated sources, check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "####################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              exit 1
                                         fi
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Updating system"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log
                                         if [ $PIPESTATUS -eq 0 ]; then
                                              echo "#####################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly updated software" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "#####################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Not updated software, check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-get) -y upgrade | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "        COMMAND STATUS       "
                                              echo
                                              echo "$(date)                                      $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no      "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                              echo "Command run: $(which zypper) list-updates | $(which tee) /var/log/smx-log/zypper.log"
                                              echo "Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log"
                                              echo "Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Listing updates"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              $(which zypper) list-updates | $(which tee) /var/log/smx-log/zypper.log
                                              if [ $? -eq 0 ]; then
                                                   echo "########################################################################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly listed updates for system" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) list_updates | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "########################################################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [Enter] to continue..." ReadDamKey
                                              else
                                                   echo "########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Not listed updates for system, check command syntax" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) list-updates | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   exit 1
                                              fi
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Updating system sources"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log
                                              if [ $PIPESTATUS -eq 0 ]; then
                                                   echo "###################################################################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly refreshed repositories" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "###################################################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   echo "###################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Not refreshed repositories, check command syntax, and network connection" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "###################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   exit 1
                                              fi
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Updating system"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log
                                              if [ $PIPESTATUS -eq 0 ]; then
                                                   echo "##################################################################################" >> /var/log/smx-log/success.log
                                                   echo "$(date):$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly updated packages" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "##################################################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   echo "##################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Not updated packages, check command syntax and internet connection" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "##################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              fi
                                         fi
                                    fi
                               fi
                          fi
                     else
                          $(which uname) | grep BSD >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "          COMMAND STATUS                 "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which portsnap)                    bos.pkgmgt.portsnap     exec"
                               echo "$(which pkg)                         bos.pkgmgt.pkg          exec"
                               echo "Command run: $(which portsnap) fetch extract"
                               echo "Command run: $(which portsnap) fetch update"
                               echo "Command run: $(which pkg) version -l '<'"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Updating system"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               $(which portsnap) fetch extract
                               if [ $? -eq 0 ]; then
                                    echo "######################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly extracted /usr/ports update" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which portsnap) fetch extract" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "######################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###############################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not extracted /usr/ports update, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which portsnap) fetch extract" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###############################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    exit 1
                               fi
                               $(which portsnap) fetch update
                               if [ $? -eq 0 ]; then
                                    echo "###############################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly updated /usr/ports" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which portsnap) fetch update" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "###############################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###############################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not updated /usr/ports, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which portsnap) fetch update" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###############################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue.." ReadDamKey
                                    exit 1
                               fi
                               $(which portmaster) >> /dev/null
                               if [ $? -eq 0 ]; then
                                    echo "Portmaster found in $PATH"
                               else
                                    $(which make) -C /usr/ports/ports-mgmt/portmaster install clean
                                    echo "WITH_PKGNG=YES" >> /etc/make.conf
                                    $(which pkg2ng)
                               fi
                               $(which pkg) version -l '<'
                               $(which portmaster) -Da
                               if [ $? -eq 0 ]; then
                                    echo "###############################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly updated all packages on system" >> /var/log/smx-log/success.log
                                    echo "[$(dste)] Command run: $(which portmaster) -Da" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "###############################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###############################################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not updated all packages on system, check command syntax or other programs may have to be reinstalled" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which portmaster) -Da" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###############################################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi           
                          else
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey
                               pkg_menu
                          fi
                     fi
		     ;;
	    repomgt)
		      clear
                      $(which uname) | grep Linux >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Linux"
                      else
                           echo "Feature not avalible for OS X and BSD"
                           read -p "Press [enter] to continue..." ReadDamKey
                           pkg_menu
                      fi          
                      cat /proc/version | grep "Red Hat" >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                      	   echo "OS = Red Hat"
                      	   echo "$(date)                                      $(whoami)@$(hostname)"
                           echo "[TOP]                                           [Entry Fields]"
			   read -p " Add or remove a repository ---- (add/remove) > " ans_repo
                           if [ "$ans_repo" = "add" ]; then
		                 clear
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                             [Entry Fields]"
                                 read -p " Enter repository name -------- > " repoName
                                 clear
                                 echo "        COMMAND STATUS        "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no      "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                  Fileset                              Type"
                                 echo "-------------------------------------------------------------------------------"
                                 echo "$(which yum-config-manager)           bos.pkgmgt.yum-config-manager        exec"
                                 echo "$(which yum)                          bos.pkgmgt.yum                       exec"
                                 echo "Command run: $(which yum-config-manager) --add-repo $repoName"
                                 echo "Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Adding repository: $repoName"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 $(which yum-config-manager) --add-repo $repoName
                                 if [ $? -eq 0 ]; then
				      echo "#############################################################" >> /var/log/smx-log/success.log
                            	      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly added repository: $repoName" >> /var/log/smx-log/success.log
                              	      echo "[$(date)] Command run: $(which yum-config-manager) --add-repo $repoName" >> /var/log/smx-log/success.log
                              	      echo "" >> /var/log/smx-log/success.log
                            	      echo "#############################################################" >> /var/log/smx-log/success.log
                        	      echo "" >> /var/log/smx-log/success.log
                              	      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                            	      read -p "Press [enter] to continue..." ReadDamKey
              			 else
				      echo "###############################################################" >> /var/log/smx-log/fail.log
                              	      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not added repository, check command syntax, and internet access" >> /var/log/smx-log/fail.log
				      echo "[$(date)] Command run: $(which yum-config-manager) --add-repo $repoName" >> /var/log/smx-log/fail.log
                               	      echo "" >> /var/log/smx-log/fail.log
                            	      echo "###############################################################" >> /var/log/smx-log/fail.log
                		      echo "" >> /var/log/smx-log/fail.log
                              	      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                              	      echo
                              	      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
				      exit 1
				 fi
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Updating system"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log
                                 if [ $? -eq 0 ]; then
				      echo "###############################################################################" >> /var/log/smx-log/success.log
                            	      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly updated system" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                            	      echo "" >> /var/log/smx-log/success.log
                        	      echo "###############################################################################" >> /var/log/smx-log/success.log
                		      echo "" >> /var/log/smx-log/success.log
                              	      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                              	      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                          	      read -p "Press [enter] to continue..." ReadDamKey
              			 else
				      echo "###############################################################################" >> /var/log/smx-log/fail.log
                            	      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            	      echo "[$(date)] Not added repository, check command syntax, and internet access" >> /var/log/smx-log/fail.log
                              	      echo "[$(date)] Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                              	      echo "" >> /var/log/smx-log/fail.log
                            	      echo "###############################################################################" >> /var/log/smx-log/fail.log
                            	      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                              	      echo
                              	      cat /var/log/smx-log/fail.log | tail -n 7
                              	      echo
                               	      read -p "Press [enter] to continue..." ReadDamKey
          			 fi
          		   else
          		         clear
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "repository name example: test.repo"
                                 echo "[TOP]                           [Entry Fields]"
                                 read -p "Enter repository name ------- > " repoName
                                 clear
                                 echo "        COMMAND STATUS              "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which rm)                          bos.sysmgt.rm           exec"
                                 echo "Command run: $(which rm) -rf /etc/yum.repos.d/$repoName"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Removing repository: $repoName"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 $(which rm) -rf /etc/yum.repos.d/$repoName
                                 if [ $? -eq 0 ]; then
				      echo "##########################################################" >> /var/log/smx-log/success.log
                               	      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              	      echo "[$(date)] Successfuly deleted repository: /etc/yum.repos.d/$repoName" >> /var/log/smx-log/success.log
                              	      echo "[$(date)] Command run: $(which rm) -rf /etc/yum.repos.d/$repoName" >> /var/log/smx-log/success.log
                              	      echo "" >> /var/log/smx-log/success.log
                            	      echo "##########################################################" >> /var/log/smx-log/success.log
                        	      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                              	      echo
                              	      cat /var/log/smx-log/success.log | tail -n 7
                              	      echo
                              	      read -p "Press [enter] to continue..." ReadDamKey
                        	 else
                        	      echo "#######################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not found repository, check command syntax" >> /var/log/smx-log/fail.log
				      echo "[$(date)] Command run: $(which rm) -rf /etc/yum.repos.d/$repoName" >> /var/log/smx-log/fail.log
                            	      echo "" >> /var/log/smx-log/fail.log
                            	      echo "#######################################################" >> /var/log/smx-log/fail.log
                        	      echo "" >> /var/log/smx-log/fail.log
                              	      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                              	      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                            	      read -p "Press [enter] to continue..." ReadDamKey
              			 fi
                      	   fi
                      else
                           clear
                           cat /proc/version | grep "Debian" >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                              	echo "OS = Debian"
                              	echo "$(date)                                     $(whoami)@$(hostname)"
                              	echo "[TOP]                                          [Entry Fields]"
                              	read -p "Add or remove repository ------ (add/remove) > " ans_repo
                              	if [ "$ans_repo" = "add" ]; then
                              	      clear
                              	      echo "$(date)                                     $(whoami)@$(hostname)"
                              	      echo "[TOP]                          [Entry Fields]"
                              	      read -p "Enter repository name ------ > " repoName
                              	      clear
                              	      echo "        COMMAND STATUS             "
                              	      echo
                              	      echo "$(date)                                     $(whoami)@$(hostname)"
                              	      echo
                              	      echo "command: RUNNING    stdout: yes    stderr: no      "
                              	      echo
                              	      echo "Before command completion, additional instructions may appear below"
                              	      echo
                              	      echo "File                                 Fileset                           Type"
                              	      echo "---------------------------------------------------------------------------"
                              	      echo "$(which add-apt-repository)          bos.pkgmgt.add-apt-repository     exec"
                              	      echo "$(which apt-get) update              bos.pkgmgt.apt-get update         exec"
                              	      echo "Command run: $(which add-apt-repository) $repoName"
                        	      echo "Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log"
                		      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Adding repository: $repoName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                              	      $(which add-apt-repository) $repoName
                              	      if [ $? -eq 0 ]; then
                                      	   echo "##################################################" >> /var/log/smx-log/success.log
                                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      	   echo "[$(date)] Successfuly added repository: $repoName to system" >> /var/log/smx-log/success.log
                                      	   echo "[$(date)] Command run: $(which add-apt-repository) $repoName" >> /var/log/smx-log/success.log
                                      	   echo "" >> /var/log/smx-log/success.log
                                      	   echo "##################################################" >> /var/log/smx-log/success.log
                                      	   echo "" >> /var/log/smx-log/success.log
                    			   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                      	   echo
                                      	   cat /var/log/smx-log/success.log | tail -n 7
                                      	   echo
                                      	   read -p "Press [enter] to continue..." ReadDamKey
				      else
                                      	   echo "####################################################" >> /var/log/smx-log/fail.log
                                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      	   echo "[$(date)] Not added repository $repoName, check command syntax" >> /var/log/smx-log/fail.log
                                      	   echo "[$(date)] Command run: $(which add-apt-repository) $repoName" >> /var/log/smx-log/fail.log
                                      	   echo "" >> /var/log/smx-log/fail.log
                                  	   echo "####################################################" >> /var/log/smx-log/fail.log
                                      	   echo "" >> /var/log/smx-log/fail.log
                                      	   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                  	   echo
                                	   cat /var/log/smx-log/fail.log | tail -n 7
                                    	   echo
                                    	   read -p "Press [enter] to continue..." ReadDamKey
                                    	   exit 1
                            	      fi
                            	      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Updating system sources"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                             	      $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log
                              	      if [ $PIPESTATUS -eq 0 ]; then
                                     	   echo "####################################################################################" >> /var/log/smx-log/success.log
                                     	   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    	   echo "[$(date)] Successfuly updated package sources" >> /var/log/smx-log/success.log
                                      	   echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                      	   echo "" >> /var/log/smx-log/success.log
                                      	   echo "####################################################################################" >> /var/log/smx-log/success.log
                                    	   echo "" >> /var/log/smx-log/success.log
                                    	   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                      	     	    	   echo
                           		   cat /var/log/smx-log/success.log | tail -n 7
                                      	   echo
                                      	   read -p "Press [enter] to continue..." ReadDamKey
				      else
                                      	   echo "####################################################################################" >> /var/log/smx-log/fail.log
                                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      	   echo "[$(date)] Not updated package sources, check command syntax" >> /var/log/smx-log/fail.log
                                    	   echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                    	   echo "" >> /var/log/smx-log/fail.log
                                  	   echo "####################################################################################" >> /var/log/smx-log/fail.log
                                  	   echo "" >> /var/log/smx-log/fail.log
                                  	   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                      	   echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                	   echo
                                  	   read -p "Press [enter] to continue..." ReadDamKey
                                  	   exit 1
				      fi
          		        else
			              clear
                              	      echo "$(date)                                    $(whoami)@$(hostname)"
                              	      echo "[TOP]                       [Entry Fields]"
                              	      read -p "repository name --------- > " repoName
                              	      clear
                              	      echo "          COMMAND STATUS        "
                                      echo
                             	      echo "$(date)                                    $(whoami)@$(hostname)"
                              	      echo
                              	      echo "Command: RUNNING    stdout: yes    stderr: no    "
                              	      echo
                              	      echo "Before command completion, additional instructions may appear below"
                              	      echo
                              	      echo "File                                 Fileset                            Type"
                              	      echo "----------------------------------------------------------------------------"
                                      echo "$(which add-apt-repository)          bos.pkgmgt.add-apt-repository      exec"
                            	      echo "$(which apt-get)                     bos.pkgmgt.apt-get                 exec"
                            	      echo "Command run: $(which add-apt-repository) -r $repoName"
                            	      echo "Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log"
                            	      read -p "Press [enter] to continue..." ReadDamKey
                            	      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Removing repository: $repoName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                              	      $(which add-apt-repository) -r $repoName
                              	      if [ $? -eq 0 ]; then
                                      	   echo "#####################################################" >> /var/log/smx-log/success.log
                                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      	   echo "[$(date)] Successfuly removed repository: $repoName from system" >> /var/log/smx-log/success.log
                                    	   echo "[$(date)] Command run: $(which add-apt-repository) -r $repoName" >> /var/log/smx-log/success.log
                                    	   echo "" >> /var/log/smx-log/success.log
                                           echo "#####################################################" >> /var/log/smx-log/success.log
                                      	   echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                      	   echo
                                  	   cat /var/log/smx-log/success.log | tail -n 7
                                  	   echo
                                  	   read -p "Press [enter] to continue..." ReadDamKey
			              else
                                      	   echo "###################################################################" >> /var/log/smx-log/fail.log
                                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      	   echo "[$(date)] Not removed repository: $repoName from system, check command syntax" >> /var/log/smx-log/fail.log
                                      	   echo "[$(date)] Command run: $(which add-apt-repository) -r $repoName" >> /var/log/smx-log/fail.log
                                    	   echo "" >> /var/log/smx-log/fail.log
                                    	   echo "###################################################################" >> /var/log/smx-log/fail.log
                                    	   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                      	   echo
                                      	   cat /var/log/smx-log/fail.log | tail -n 7
                                    	   echo
                                  	   read -p "Press [enter] to continue..." ReadDamKey
                                  	   exit 1
          			      fi
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Updating system sources"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                             	      $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log
                              	      if [ $PIPESTATUS -eq 0 ]; then
                                    	   echo "######################################################################################" >> /var/log/smx-log/success.log
                                    	   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    	   echo "[$(date)] Successfuly updated package sources" >> /var/log/smx-log/success.log
                                    	   echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                      	   echo "" >> /var/log/smx-log/success.log
                                      	   echo "######################################################################################" >> /var/log/smx-log/success.log
                                      	   echo "" >> /var/log/smx-log/success.log
                                    	   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                    	   echo
                                    	   cat /var/log/smx-log/success.log | tail -n 7
                                      	   echo
                                      	   read -p "Press [enter] to continue..." ReadDamKey
				      else
                                      	   echo "######################################################################################" >> /var/log/smx-log/fail.log
                                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      	   echo "[$(date)] Not updated package sources, check command syntax" >> /var/log/smx-log/fail.log
                                    	   echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                     	   echo "" >> /var/log/smx-log/fail.log
                                    	   echo "######################################################################################" >> /var/log/smx-log/fail.log
                                      	   echo "" >> /var/log/smx-log/fail.log
                                      	   read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                     	   echo
                                    	   cat /var/log/smx-log/fail.log | tail -n 7
                                      	   echo
                                      	   read -p "Press [enter] to continue..." ReadDamKey
                          	      fi
                          	fi
                           else
                                clear
                                cat /proc/version | grep "Ubuntu" >> /dev/null
                                if [ $? -eq 0 ]; then
                              	     clear
                              	     echo "OS = Ubuntu"
                              	     echo "$(date)                                     $(whoami)@$(hostname)"
                              	     echo "[TOP]                                          [Entry Fields]"
                              	     read -p "Add or remove repository ------ (add/remove) > " ans_repo
                              	     if [ "$ans_repo" = "add" ]; then
                                       	   clear
                                      	   echo "$(date)                                     $(whoami)@$(hostname)"
                                       	   echo "[TOP]                          [Entry Fields]"
                                      	   read -p "Enter repository name ------ > " repoName
                                      	   clear
                                      	   echo "        COMMAND STATUS             "
                                      	   echo
                                      	   echo "$(date)                                     $(whoami)@$(hostname)"
                                      	   echo
                                      	   echo "command: RUNNING    stdout: yes    stderr: no      "
                                      	   echo
                                      	   echo "Before command completion, additional instructions may appear below"
                                      	   echo
                                	   echo "File                                 Fileset                           Type"
                                      	   echo "---------------------------------------------------------------------------"
                                      	   echo "$(which add-apt-repository)          bos.pkgmgt.add-apt-repository     exec"
                                     	   echo "$(which apt-get) update              bos.pkgmgt.apt-get update         exec"
                                           echo "Command run: $(which add-apt-repository) $repoName"
                                    	   echo "Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log"
                          		   sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Adding repository: $repoName"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                       	   $(which add-apt-repository) $repoName
                                      	   if [ $? -eq 0 ]; then
                      			        echo "##################################################" >> /var/log/smx-log/success.log
                                              	echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              	echo "[$(date)] Successfuly added repository: $repoName to system" >> /var/log/smx-log/success.log
                                              	echo "[$(date)] Command run: $(which add-apt-repository) $repoName" >> /var/log/smx-log/success.log
                                              	echo "" >> /var/log/smx-log/success.log
                                              	echo "##################################################" >> /var/log/smx-log/success.log
                                              	echo "" >> /var/log/smx-log/success.log
                        			read -p "Press [enter] to continue..." ReadDamKey
						clear
                                        	echo
                                        	cat /var/log/smx-log/success.log | tail -n 7
                                            	echo
                                            	read -p "Press [enter] to continue..." ReadDamKey
              		                   else
					        echo "####################################################" >> /var/log/smx-log/fail.log
                                          	echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          	echo "[$(date)] Not added repository $repoName, check command syntax" >> /var/log/smx-log/fail.log
                                               	echo "[$(date)] Command run: $(which add-apt-repository) $repoName" >> /var/log/smx-log/fail.log
                                          	echo "" >> /var/log/smx-log/fail.log
                                            	echo "####################################################" >> /var/log/smx-log/fail.log
                                            	echo "" >> /var/log/smx-log/fail.log
                        			read -p "Press [enter] to continue..." ReadDamKey
						clear
                                        	echo
                                        	cat /var/log/smx-log/fail.log | tail -n 7
                                            	echo
                                            	read -p "Press [enter] to continue..." ReadDamKey
                        			exit 1
                                      	   fi
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Updating system sources"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                              		   $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log
                    			   if [ $PIPESTATUS -eq 0 ]; then
                                                echo "####################################################################################" >> /var/log/smx-log/success.log
                                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                echo "[$(date)] Successfuly updated package sources" >> /var/log/smx-log/success.log
                                                echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                                echo "" >> /var/log/smx-log/success.log
                                                echo "####################################################################################" >> /var/log/smx-log/success.log
                                                echo "" >> /var/log/smx-log/success.log
                                                read -p "Press [enter] to continue..." ReadDamKey
                                                clear
                                                echo
                                                cat /var/log/smx-log/success.log | tail -n 7
                                                echo
                                                read -p "Press [enter] to continue..." ReadDamKey
			                   else
					        echo "####################################################################################" >> /var/log/smx-log/fail.log
                                                echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                echo "[$(date)] Not updated package sources, check command syntax" >> /var/log/smx-log/fail.log
                                                echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                echo "" >> /var/log/smx-log/fail.log
                                                echo "####################################################################################" >> /var/log/smx-log/fail.log
                                                echo "" >> /var/log/smx-log/fail.log
                            		        read -p "Press [enter] to continue..." ReadDamKey
                                                clear
                                                echo
                                                cat /var/log/smx-log/fail.log | tail -n 7
                                                echo
                                                read -p "Press [enter] to continue..." ReadDamKey
                                                exit 1
				           fi
          			     else
                                      	   clear
                                           echo "$(date)                                    $(whoami)@$(hostname)"
                                    	   echo "[TOP]                        [Entry Fields]"
                                	   read -p " repository name --------- > " repoName
                                  	   clear
                                  	   echo "          COMMAND STATUS        "
                                           echo
                                     	   echo "$(date)                                    $(whoami)@$(hostname)"
                                     	   echo
                                	   echo "Command: RUNNING    stdout: yes    stderr: no    "
                                           echo
                                           echo "Before command completion, additional instructions may appear below"
                                           echo
                                           echo "File                                 Fileset                            Type"
                                           echo "----------------------------------------------------------------------------"
                                           echo "$(which add-apt-repository)          bos.pkgmgt.add-apt-repository      exec"
                                           echo "$(which apt-get)                     bos.pkgmgt.apt-get                 exec"
                                           echo "Command run: $(which add-apt-repository) -r $repoName"
                                           echo "Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log"
                                           read -p "Press [enter] to continue..." ReadDamKey
                    			   sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Removing repository: $repoName"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           $(which add-apt-repository) -r $repoName
                                           if [ $? -eq 0 ]; then
                    			        echo "#####################################################" >> /var/log/smx-log/success.log
                                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                echo "[$(date)] Successfuly removed repository: $repoName from system" >> /var/log/smx-log/success.log
                                                echo "[$(date)] Command run: $(which add-apt-repository) -r $repoName" >> /var/log/smx-log/success.log
                                                echo "" >> /var/log/smx-log/success.log
                                                echo "#####################################################" >> /var/log/smx-log/success.log
                                                echo "" >> /var/log/smx-log/success.log
                                                read -p "Press [enter] to continue..." ReadDamKey
                                                clear
                                                echo
                                                cat /var/log/smx-log/success.log | tail -n 7
                                                echo
                                                read -p "Press [enter] to continue..." ReadDamKey
				           else
					        echo "###################################################################" >> /var/log/smx-log/fail.log
                                                echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                echo "[$(date)] Not removed repository: $repoName from system, check command syntax" >> /var/log/smx-log/fail.log
                                                echo "[$(date)] Command run: $(which add-apt-repository) -r $repoName" >> /var/log/smx-log/fail.log
                                                echo "" >> /var/log/smx-log/fail.log
                                                echo "###################################################################" >> /var/log/smx-log/fail.log
                                                read -p "Press [enter] to continue..." ReadDamKey
                                                clear
                                                echo
                                                cat /var/log/smx-log/fail.log | tail -n 7
                                                echo
                                                read -p "Press [enter] to continue..." ReadDamKey
                                                exit 1
					   fi
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Updating system sources"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
  					   $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log
                               	           if [ $PIPESTATUS -eq 0 ]; then
					        echo "######################################################################################" >> /var/log/smx-log/success.log
                                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                echo "[$(date)] Successfuly updated package sources" >> /var/log/smx-log/success.log
                                                echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                                echo "" >> /var/log/smx-log/success.log
                                                echo "######################################################################################" >> /var/log/smx-log/success.log
                                                echo "" >> /var/log/smx-log/success.log
                        		        read -p "Press [enter] to continue..." ReadDamKey
                                                clear
                                                echo
                                                cat /var/log/smx-log/success.log | tail -n 7
                                                echo
                                                read -p "Press [enter] to continue..." ReadDamKey
                    			   else
                    			        echo "######################################################################################" >> /var/log/smx-log/fail.log
                                                echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                echo "[$(date)] Not updated package sources, check command syntax" >> /var/log/smx-log/fail.log
                                                echo "[$(date)] Command run: $(which apt-get) update | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                echo "" >> /var/log/smx-log/fail.log
                                                echo "######################################################################################" >> /var/log/smx-log/fail.log
                                                echo "" >> /var/log/smx-log/fail.log
                        		        read -p "Press [enter] to continue..." ReadDamKey
                                                clear
                                                echo
                                                cat /var/log/smx-log/fail.log | tail -n 7
                                                echo
                                                read -p "Press [enter] to continue..." ReadDamKey
                			   fi
                		     fi
				else
                        	     clear
                            	     cat /proc/version | grep "SUSE" >> /dev/null
                        	     if [ $? -eq 0 ]; then
                                          clear
                                          echo "OS = SuSE"
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo "[TOP]                                          [Entry Fields]"
                                          read -p "Add or remove repository ------ (add/remove) > " ans_repo
                                          if [ "$ans_repo" = "add" ]; then
                                                echo "$(date)                                      $(whoami)@$(hostname)"
                                    		echo "Repository URL example: http://download.opensuse.org/update/11.1/"
                                    		echo "Repository alias example: update"
                                    		echo "[TOP]                                     [Entry Fields]"
                                    		read -p " Enter repository URL ----------------- > " repoUrl
                                    		read -p " Enter repository alias --------------- > " repoAlias
                                    		clear
                                              	echo "        COMMAND STATUS       "
                                              	echo
                                          	echo "$(date)                                      $(whoami)@$(hostname)"
                                         	echo
                                          	echo "Command: RUNNING    stdout: yes    stderr: no      "
                                            	echo
                                            	echo "Before command completion, additional instructions may appear below"
                                              	echo
                                              	echo "File                                 Fileset                 Type"
                                              	echo "-----------------------------------------------------------------"
                                              	echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                              	echo "Command run: $(which zypper) ar $repoUrl $repoAlias"
                                              	echo "Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log"
                                              	echo "Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		echo "Adding repository: $repoUrl as: $repoAlias"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                              	$(which zypper) ar $repoUrl $repoAlias
                                              	if [ $? -eq 0 ]; then
                                              	     echo "########################################################################################" >> /var/log/smx-log/success.log
                                              	     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            			     echo "[$(date)] Successfuly listed updates for system" >> /var/log/smx-log/success.log
                                              	     echo "[$(date)] Command run: $(which zypper) ar $repoUrl $repoAlias" >> /var/log/smx-log/success.log
                                              	     echo "" >> /var/log/smx-log/success.log
                                              	     echo "########################################################################################" >> /var/log/smx-log/success.log
                                              	     echo "" >> /var/log/smx-log/success.log
                            			     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                              	     echo
                                              	     cat /var/log/smx-log/success.log | tail -n 7
                                              	     echo
                                              	     read -p "Press [Enter] to continue..." ReadDamKey
                      				else
                                              	     echo "########################################################################################" >> /var/log/smx-log/fail.log
                                              	     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              	     echo "[$(date)] Not listed updates for system, check command syntax" >> /var/log/smx-log/fail.log
                            			     echo "[$(date)] Command run: $(which zypper) ar $repoUrl $repoAlias" >> /var/log/smx-log/fail.log
                                              	     echo "" >> /var/log/smx-log/fail.log
                                              	     echo "########################################################################################" >> /var/log/smx-log/fail.log
                                              	     echo "" >> /var/log/smx-log/fail.log
                                              	     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                            			     echo
                                              	     cat /var/log/smx-log/fail.log | tail -n 7
                                              	     echo
                                              	     read -p "Press [enter] to continue..." ReadDamKey
                                              	     exit 1
                                              	fi
                                              	sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		echo "Updating system sources"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                              	$(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log
                                              	if [ $PIPESTATUS -eq 0 ]; then
                                              	     echo "###################################################################################" >> /var/log/smx-log/success.log
                                              	     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            			     echo "[$(date)] Successfuly refreshed repositories" >> /var/log/smx-log/success.log
                                        	     echo "[$(date)] Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                        	     echo "" >> /var/log/smx-log/success.log
                                            	     echo "###################################################################################" >> /var/log/smx-log/success.log
                                            	     echo "" >> /var/log/smx-log/success.log
                            			     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                              	     echo
                                              	     cat /var/log/smx-log/success.log | tail -n 7
                                              	     echo
                                              	     read -p "Press [enter] to continue..." ReadDamKey
                        		        else
                                              	     echo "###################################################################################" >> /var/log/smx-log/fail.log
                                              	     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            			     echo "[$(date)] Not refreshed repositories, check command syntax, and network connection" >> /var/log/smx-log/fail.log
                                              	     echo "[$(date)] Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                              	     echo "" >> /var/log/smx-log/fail.log
                                              	     echo "###################################################################################" >> /var/log/smx-log/fail.log
                                              	     echo "" >> /var/log/smx-log/fail.log
                            			     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                              	     echo
                                              	     cat /var/log/smx-log/fail.log | tail -n 7
                                              	     echo
                                              	     read -p "Press [enter] to continue..." ReadDamKey
                            			     exit 1
                        			fi
                                          else
                                                echo "$(date)                                     $(whoami)@$(hostname)"
                                    		echo "Repository alias example: update"
                                    		echo "[TOP]                                 [Entry Fields]"
                                    		read -p " Enter repository alias ----------- > " repoAlias
                                    		clear
                                    		echo "         COMMAND STATUS               "
                                    		echo
                                    		echo "$(date)                                     $(whoami)@$(hostname)"
                                    		echo
                                    		echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    		echo
                                    		echo "Before command completion, additional instructions may appear below"
                                    		echo
                                    		echo "File                                 Fileset                 Type"
                                    		echo "-----------------------------------------------------------------"
                                    		echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                    		echo "Command run: $(which zypper) rr $repoAlias"
                                    		echo "Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log"
                                    		echo "Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		echo "Removing repository: $repoAlias"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		$(which zypper) rr $repoAlias
                                    		if [ $? -eq 0 ]; then
                                                     echo "##########################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly removed repository: $repoAlias" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which zypper) rr $repoAlias" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "##########################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue" ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						else
                                                     echo "#############################################################################" >> /var/log/smx-log/fail.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Not removed repository: $repoAlias, check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Command run: $(which zypper) rr $repoAlias" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "#############################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                    		fi
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		echo "Updating system sources"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		$(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log
                                    		if [ $? -eq 0 ]; then
                                                     echo "###############################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly refreshed system sources" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "###############################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						else
                                                     echo "#################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Not refreshed system sources, check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Command run: $(which zypper) refresh | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "#################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                    		fi
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		echo "Updating system"
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		sleep 1
                                    		update_spinner
                                    		$(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log
                                    		if [ $? -eq 0 ]; then
                                                     echo "##############################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly updated system" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "##############################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/zypper.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						else
                                                     echo "###############################################################################" >> /var/log/smx-log/fail.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Not updated system, check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Command run: $(which zypper) update -y | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "###############################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						fi           
				          fi
                                     fi
				fi
			   fi
                      fi
		      ;;
            updateFed)
                        clear
                        echo "It is recomended to do the update outside of a graphical environment"
                        echo
                        echo "        COMMAND STATUS         "
                        echo
                        echo "$(date)                                    $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING    stdout: yes    stderr: no    "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                        Type"
                        echo "------------------------------------------------------------------------"
                        echo "$(which yum)                         bos.pkgmgt.yum                 exec"
                        echo "$(which fedora-upgrade)              bos.sysmgt.fedora-upgrade      exec"
                        echo "Command run: $(which yum) -y install fedora-upgrade | $(which tee) /var/log/smx-log/yum.log"
                        echo "Command run: $(which fedora-upgrade) | $(which tee) /var/log/smx-log/yum.log"
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Installing fedora-upgrade"
                        sleep 1
                        update_spinner
                        sleep 1
                        $(which yum) -y install fedora-upgrade | $(which tee) /var/log/smx-log/yum.log
                        if [ $PIPESTATUS -eq 0 ];then
                             echo "###############################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly upgraded fedora to latest version" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which yum) -y install fedora-upgrade | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###############################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "###############################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not upgraded fedora to latest version, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which yum) -y install fedora-upgrade | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "###############################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                             exit 1
                        fi
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Updating system"
                        sleep 1
                        update_spinner
                        sleep 1
                        $(which fedora-upgrade) | $(which tee) /var/log/smx-log/fedora-upgrade.log
                        if [ $PIPESTATUS -eq 0 ]; then
                             echo "###########################################################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly upgraded system" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which fedora-upgrade) | $(which tee) /var/log/smx-log/fedora-upgrade.log" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###########################################################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "###########################################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not upgraded system, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which fedora-upgrade) | $(which tee) /var/log/smx-log/fedora-upgrade.log" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "###########################################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                        echo "The system must now reboot, you can choose not to, but the update will not be appled until next reboot"
                        read -p "Reboot system (Y/N) > " rebootSys
                        if [ "$rebootSys" = "Y" ]; then
                              $(which reboot) -f now --verbose; exit
                        else
                              echo "System will not reboot"
                        fi
                        ;;
            updatekrnl)
                         clear
                         cat /proc/version | grep "Red Hat" >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "WARNING: this update process will take a while, it took up to an hour on my system"                 # But you know that
                              echo "Kernel major version example: v3.x"
                              echo "Kernel minor version example: 3.18.3"
                              echo "Kernel build root example: /usr/src"
                              KRNLNAME=`uname -r`
                              echo "Current running kernel: $KRNLNAME"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                                            [Entry Fields]"
                              read -p " Enter kernel major version ------------------ > " krnlMajor
                              read -p " Enter kernel minor version ------------------ > " krnlMinor
                              printf " Enter kernel build root ---------------------- [/usr/src] >  "
                              if [ "$krnlRoot" = "" ]; then
                                    KRNLROOT=""
                                    read krnlRoot
                                    KRNLROOT=$krnlRoot
                              fi
                              if [ "$krnlRoot" = "" ]; then
                                    KRNLROOT=""
                                    KRNLROOT=/usr/src
                              fi
                              read -p " Reboot after completion --------------- (Y/N) > " rebootSys
                              clear
                              echo "         COMMAND STATUS               "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which yum)                         bos.pkgmgt.yum          exec"
                              echo "$(which wget)                        bos.sysmgt.wget         exec"
                              echo "$(which tar)                         bos.sysmgt.tar          exec"
                              echo "$(which sh)                          bos.sysmgt.sh           exec"
                              echo "$(which make)                        bos.sysmgt.make         exec"
                              echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                              echo "Command run: $(which yum) -y groupinstall 'Development Tools' | $(which tee) /var/log/smx-log/yum.log"
                              echo "Command run: $(which yum) -y install ncurses-devel | $(which tee) /var/log/smx-log/yum.log"
                              echo "Command run: $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log"
                              echo "Command run: cd /tmp"
                              echo "Command run: $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                              echo "Command run: $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT"
                              echo "Command run: cd $KRNLROOT/linux-$krnlMinor"
                              echo "Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_rhel.log"
                              echo "Command run: $(which make) | $(which tee) /var/log/smx-log/kernel_build_rhel.log"
                              echo "Command run: $(which make) modules_install install | $(which tee) /var/log/smx-log/kernel_build_rhel.log"
                              echo "Command run: $(which reboot) -f --verbose; exit"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Installing group file 'Development Tools'"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which yum) -y groupinstall "Development Tools" | $(which tee) /var/log/smx-log/yum.log
                              echo "" >> /var/log/smx-log/yum.log
                              echo "#############################################" >> /var/log/smx-log/yum.log
                              echo "" >> /var/log/smx-log/yum.log
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Installing packages: ncurses-devel and wget"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which yum) -y install ncurses-devel wget | $(which tee) /var/log/smx-log/yum.log
                              echo "" >> /var/log/smx-log/yum.log
                              echo "#############################################" >> /var/log/smx-log/yum.log
                              echo "" >> /var/log/smx-log/yum.log
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Updating system"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which yum) -y update | $(which tee) /var/log/smx-log/yum.log
                              cd /tmp
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Downloading file: https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Unpacking file /tmp/linux-$krnlMinor.tar.gz to: $KRNLROOT"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT
                              cd $KRNLROOT/linux-$krnlMinor
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Building kernel with old/current configuration"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which sh) -c 'yes "" | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_rhel.log
                              echo "" | $(which tee) /var/log/smx-log/kernel_build_rhel.log
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Making kernel"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which make) | $(which tee) /var/log/smx-log/kernel_build_rhel.log
                              echo "" | $(which tee) /var/log/smx-log/kernel_build_rhel.log
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Installing kernel"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which make) modules_install install | $(which tee) /var/log/smx-log/kernel_build_rhel.log
                              echo "" | $(which tee) /var/log/smx-log/kernel_build_rhel.log
                              echo "######################################################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly built new kernel: linux-$krnlMinor" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build.log" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which make) | $(which tee) /var/log/smx-log/kernel_build.log" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which make) modules_install install | $(which tee) /var/log/smx-log/kernel_build.log" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "###################################################################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 8
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                              if [ "$rebootSys" = "Y" ]; then
                                    echo "System will now reboot!!"
                                    $(which reboot) -f --verbose; exit
                              else
                                    echo "System will not reboot, reboot to use new kernel"
                                    read -p "Press [enter] to continue..." ReadDamKey
                              fi
                         else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = Debian"
                                   echo "Kernel major version example: v3.x"
                                   echo "Kernel minor version example: 3.18.3"
                                   KRNLNAME=`uname -r`
                                   echo "Current running kernel: $KRNLNAME"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo "[TOP]                                            [Entry Fields]"
                                   read -p " Enter kernel major version -------------------- > " krnlMajor
                                   read -p " Enter kernel minor version -------------------- > " krnlMinor
                                   echo "System concurrency level is the number of processor cores in the system + 1, example: 4 cores = concurrency level of 5" # Not required, but helps speed up compile of kernel
                                   read -p " Enter system concurrency level ---------------- > " conLevel
                                   printf " Enter kernel build root ---------------------- [/usr/src] >  "
                                   if [ "$krnlRoot" = "" ]; then
                                         KRNLROOT=""
                                         read krnlRoot
                                         KRNLROOT=$krnlRoot
                                   fi
                                   if [ "$krnlRoot" = "" ]; then
                                         KRNLROOT=""
                                         KRNLROOT=/usr/src
                                   fi
                                   read -p " Reboot after completion ----------------- (Y/N) > " rebootSys
                                   clear
                                   echo "          COMMAND STATUS               "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                   echo "$(which wget)                        bos.sysmgt.wget         exec"
                                   echo "$(which tar)                         bos.sysmgt.tar          exec"
                                   echo "$(which sh)                          bos.sysmgt.sh           exec"
                                   echo "$(which make-kpkg)                   bos.sysmgt.make-kpkg    exec"
                                   echo "$(which fakeroot)                    bos.sysmgt.fakeroot     exec"
                                   echo "$(which dpkg)                        bos.pkgmgt.dpkg         exec"
                                   echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                   echo "Command run: $(which apt-get) install fakeroot kernel-package libncurses5-dev | $(which tee) /var/log/smx-log/apt-get.log"
                                   echo "Command run: cd /tmp"
                                   echo "Command run: $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                                   echo "Command run: $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT"
                                   echo "Command run: cd $KRNLROOT/linux-$krnlMinor"
                                   echo "Command run: cp /boot/config-`uname -r` $KRNLROOT/linux-$krnlMinor/.config"
                                   echo "Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_deb.log"
                                   echo "Command run: $(which make-kpkg) clean | $(which tee) /var/log/smx-log/kernel_build_deb.log"
                                   echo "Command run: export CONCURRENCY_LEVEL=$conLevel"
                                   echo "Command run: $(which fakeroot) make-kpkg --append-to-version '-customkernel' --revision '1' --initrd kernel_image kernel_headers | $(which tee) /var/log/smx-log/kernel_build_deb.log"
                                   echo "Command run: cd $KRNLROOT"
                                   echo "Command run: $(which dpkg) -i *.deb | $(which tee) /var/log/smx-log/dpkg.log"
                                   echo "Command run: $(which reboot) -f --verbose; exit"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Installing packages: fakeroot kernel-package, libncurses5-dev"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which apt-get) install fakeroot kernel-package libncurses5-dev | $(which tee) /var/log/smx-log/apt-get.log
                                   cd /tmp
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Downloading file: https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Unpacking file: /tmp/linux-$krnlMinor.tar.gz to: $KRNLROOT"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT
                                   cd $KRNLROOT/linux-$krnlMinor
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Building .config file from /boot/config-`uname -r`"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   cp /boot/config-`uname -r` /$KRNLROOT/linux-$krnlMinor/.config
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Building kernel with old/current configuration"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which sh) -c 'yes "" | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                   echo "" | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Cleaning source tree"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which make-kpkg) clean | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                   echo "" | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                   export CONCURRENCY_LEVEL=$conLevel
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Building kernel package"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which fakeroot) make-kpkg --append-to-version "-customkernel" --revision "1" --initrd kernel_image kernel_headers | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                   echo "" | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                   cd $KRNLROOT
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Installing kernel"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which dpkg) -i *.deb | $(which tee) /var/log/smx-log/dpkg.log
                                   echo "#####################################################################################################################################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly build new kernel: linux-$krnlMinor" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_deb.log" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which kpkg-make) clean | $(which tee) /var/log/smx-log/kernel_build_deb.log" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which fakeroot) make-kpkg --append-to-version '-customkernel' --revision '1' --initrd kernel_image kernel_headers | $(which tee) /var/log/smx-log/kernel_build_deb.log" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "#####################################################################################################################################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 8
                                   clear
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   if [ "$rebootSys" = "Y" ]; then
                                         echo "System will now reboot!!"
                                         $(which reboot) -f --verbose; exit
                                   else
                                         echo "System will not reboot, reboot to use new kernel"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                   fi
                              else
                                   clear
                                   cat /proc/version | grep "Ubuntu" >> /dev/null
                                   if [ $? -eq 0 ]; then
                                        clear
                                        echo "OS = Ubuntu"
                                        echo "Kernel major version example: v3.x"
                                        echo "Kernel minor version example: 3.18.3"
                                        KRNLNAME=`uname -r`
                                        echo "Current running kernel: $KRNLNAME"
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        echo "[TOP]                                            [Entry Fields]"
                                        read -p " Enter kernel major version -------------------- > " krnlMajor
                                        read -p " Enter kernel minor version -------------------- > " krnlMinor
                                        echo "System concurrency level is the number of processor cores in the system + 1, example: 5 cores = concurrency level of 6"
                                        read -p " Enter system concurrency level ---------------- > " conLevel
                                        printf " Enter kernel build root ---------------------- [/usr/src] >  "
                                        if [ "$krnlRoot" = "" ]; then
                                              KRNLROOT=""
                                              read krnlRoot
                                              KRNLROOT=$krnlRoot
                                        fi
                                        if [ "$krnlRoot" = "" ]; then
                                             KRNLROOT=""
                                             KRNLROOT=/usr/src
                                        fi
                                        read -p " Reboot after completion ----------------- (Y/N) > " rebootSys
                                        clear
                                        echo "          COMMAND STATUS               "
                                        echo
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        echo
                                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                                        echo
                                        echo "Before command completion, additional instructions may appear below"
                                        echo
                                        echo "File                                 Fileset                 Type"
                                        echo "-----------------------------------------------------------------"
                                        echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                        echo "$(which wget)                        bos.sysmgt.wget         exec"
                                        echo "$(which tar)                         bos.sysmgt.tar          exec"
                                        echo "$(which sh)                          bos.sysmgt.sh           exec"
                                        echo "$(which make-kpkg)                   bos.sysmgt.make-kpkg    exec"
                                        echo "$(which fakeroot)                    bos.sysmgt.fakeroot     exec"
                                        echo "$(which dpkg)                        bos.pkgmgt.dpkg         exec"
                                        echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                        echo "Command run: $(which apt-get) install fakeroot kernel-package libncurses5-dev | $(which tee) /var/log/smx-log/apt-get.log"
                                        echo "Command run: cd /tmp"
                                        echo "Command run: $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                                        echo "Command run: $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT"
                                        echo "Command run: cd $KRNLROOT/linux-$krnlMinor"
                                        echo "Command run: cp /boot/config-`uname -r` $KRNLROOT/linux-$krnlMinor/.config"
                                        echo "Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_deb.log"
                                        echo "Command run: $(which make-kpkg) clean | $(which tee) /var/log/smx-log/kernel_build_deb.log"
                                        echo "Command run: export CONCURRENCY_LEVEL=$conLevel"
                                        echo "Command run: $(which fakeroot) make-kpkg --append-to-version '-customkernel' --revision '1' --initrd kernel_image kernel_headers | $(which tee) /var/log/smx-log/kernel_build_deb.log"
                                        echo "Command run: cd $KRNLROOT"
                                        echo "Command run: $(which dpkg) -i *.deb | $(which tee) /var/log/smx-log/dpkg.log"
                                        echo "Command run: $(which reboot) -f --verbose; exit"
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Installing packages: fakeroot, kernel-package libncurses5-dev"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which apt-get) install fakeroot kernel-package libncurses5-dev | $(which tee) /var/log/smx-log/apt-get.log
                                        cd /tmp
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Downloading file: https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Unpacking file: /tmp/linux-$krnlMinor.tar.gz to: $KRNLROOT"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT
                                        cd $KRNLROOT/linux-$krnlMinor
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Creating .config file from /boot/config-`uname -r`"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        cp /boot/config-`uname -r` $KRNLROOT/linux-$krnlMinor/.config
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Building kernel from old/current configuration"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which sh) -c 'yes "" | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                        echo "" | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Cleaning source tree"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which make-kpkg) clean | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                        echo "" | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                        export CONCURRENCY_LEVEL=$conLevel
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Building kernel package"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which fakeroot) make-kpkg --append-to-version "-customkernel" --revision "1" --initrd kernel_image kernel_headers | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                        echo "" | $(which tee) /var/log/smx-log/kernel_build_deb.log
                                        cd $KRNLROOT
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Installing kernel"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which dpkg) -i *.deb | $(which tee) /var/log/smx-log/dpkg.log
                                        echo "#####################################################################################################################################################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly build new kernel: linux-$krnlMinor" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_deb.log" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which kpkg-make) clean | $(which tee) /var/log/smx-log/kernel_build_deb.log" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which fakeroot) make-kpkg --append-to-version '-customkernel' --revision '1' --initrd kernel_image kernel_headers | $(which tee) /var/log/smx-log/kernel_build_deb.log" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#####################################################################################################################################################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 8
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        if [ "$rebootSys" = "Y" ]; then
                                              echo "System will now reboot!!"
                                              $(which reboot) -f --verbose; exit
                                        else
                                             echo "System will not reboot, reboot to use new kernel"
                                             read -p "Press [enter] to continue..." ReadDamKey
                                        fi
                                   else
                                        clear
                                        cat /proc/version | grep "SUSE" >> /dev/null
                                        if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "Kernel major version example: v3.x"
                                             echo "Kernel minor version example: 3.18.3"
                                             KRNLNAME=`uname -r`
                                             echo "Current running kernel: $KRNLNAME"
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo "[TOP]                                            [Entry Fields]"
                                             read -p " Enter kernel major version ------------------ > " krnlMajor
                                             read -p " Enter kernel minor version ------------------ > " krnlMinor
                                             printf " Enter kernel build root ---------------------- [/usr/src] >  "
                                             if [ "$krnlRoot" = "" ]; then
                                                   KRNLROOT=""
                                                   read krnlRoot
                                                   KRNLROOT=$krnlRoot
                                             fi
                                             if [ "$krnlRoot" = "" ]; then
                                                   KRNLROOT=""
                                                   KRNLROOT=/usr/src
                                             fi
                                             read -p " Reboot after completion --------------- (Y/N) > " rebootSys
                                             clear
                                             echo "         COMMAND STATUS               "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no   "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which zypper)                      bos.sysmgt.zypper       exec"
                                             echo "$(which wget)                        bos.sysmgt.wget         exec"
                                             echo "$(which tar)                         bos.sysmgt.tar          exec"
                                             echo "$(which make)                        bos.sysmgt.make         exec"
                                             echo "$(which sh)                          bos.sysmgt.sh           exec"
                                             echo "$(which rpm)                         bos.sysmgt.rpm          exec"
                                             echo "$(which mkinitrd)                    bos.sysmgt.mkinitrd     exec"
                                             echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                             echo "Command run: $(which zypper) in -y ncurses-devel make gcc | $(which tee) /var/log/smx-log/zypper.log"
                                             echo "Command run: cd /tmp"
                                             echo "Command run: $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                                             echo "Command run: $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT"
                                             echo "Command run: cd $KRNLROOT/linux-$krnlMinor"
                                             echo "Command run: $(which make) mrproper"
                                             echo "Command run: cp /boot/config-`uname -r` $KRNLROOT/linux-$krnlMinor/.config"
                                             echo "Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_suse.log"
                                             echo "Command run: $(which make) rpm | $(which tee) /var/log/smx-log/kernel_build_suse.log"
                                             echo "Command run: $(which rpm) -ivh /usr/src/packages/RPMS/`uname -m`/kernel-$krnlMinor* | $(which tee) /var/log/smx-log/kernel_build_suse.log"
                                             echo "Command run: $(which reboot) -f --verbose; exit"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Installing packages: ncurses-devel make gcc"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which zypper) in -y ncurses-devel make gcc | $(which tee) /var/log/smx-log/zypper.log
                                             cd /tmp
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Downloading file: https://www.kernel/org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which wget) https://www.kernel.org/pub/linux/kernel/$krnlMajor/linux-$krnlMinor.tar.gz
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Unpacking file /tmp/linux-$krnlMinor.tar.gz to: $KRNLROOT"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which tar) -zxvf /tmp/linux-$krnlMinor.tar.gz -C $KRNLROOT
                                             cd $KRNLROO/linux-$krnlMinor
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Building new .config from /boot/config-`uname -r`"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             cp /boot/config-`uname -r` $KRNLROOT/linux-$krnlMinor/.config
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Building kernel from old/current configuration"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which sh) -c 'yes "" | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_suse.log
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Creating .rpm file"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which make) rpm | $(which tee) /var/log/smx-log/kernel_build_suse.log
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Installing kernel as file: /usr/src/packages/RPMS/`uname -m`/kernel-$krnlMinor*"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which rpm) -ivh /usr/src/packages/RPMS/`uname -m`/kernel-$krnlMinor* | $(which tee) /var/log/smx-log/kernel_build_suse.log
                                             echo "###########################################################################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly built new kernel: kernel-$krnlMinor" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which sh) -c 'yes '' | make oldconfig' | $(which tee) /var/log/smx-log/kernel_build_suse.log" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which make) rpm | $(which tee) /var/log/smx-log/kernel_build_suse.log" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "###########################################################################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             if [ "$rebootSys" = "Y" ]; then
                                                   echo "System will now reboot!!"
                                                   $(which reboot) -f --verbose; exit
                                             else
                                                   echo "System will not reboot, reboot to use new kernel"
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                             fi
                                        fi
                                   fi
                              fi
                         fi
                         ;;          
            help)
                   echo "search > Search and install software on system"
                   echo "remove > Remove software on system"
                   echo "install_deb > Install a downloaded .deb file"
                   echo "rpm > Install or remove a program via rpm"
                   echo "update > Install updates on system"
                   echo "repomgt > Perform repoistory management on system"
                   echo "updateFed > Update Fedora Linux to the latest version"
                   echo "updatekrnl > Update Linux kernel"
                   echo "Help > This menu"
                   echo "exit > Exit back to sys_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey;;          
	    exit)
		   clear
            	   echo "#######################################################" >> /var/log/smx-log/exit.log
            	   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
            	   echo "[$(date)] Successfuly terminated $(basename $0)/sys_menu#pkg_menu" >> /var/log/smx-log/exit.log
            	   echo "" >> /var/log/smx-log/exit.log
            	   echo "#######################################################" >> /var/log/smx-log/exit.log
            	   echo "" >> /var/log/smx-log/exit.log
            	   sys_menu
		   ;;
	    exit-mas)
        	       clear
            	       echo "#################################" >> /var/log/smx-log/exit.log
            	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
               	       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
               	       echo "" >> /var/log/smx-log/exit.log
            	       echo "#################################" >> /var/log/smx-log/exit.log
        	       echo "" >> /var/log/smx-log/exit.log
               	       exit 0
		       ;;
    	    *)
    	        clear
            	echo "      COMMAND STATUS       "
            	echo
            	echo "$(date)                                     $(whoami)@$(hostname)"
            	echo
                echo "Command: FAIL    stdout: yes    stderr: no        "
              	echo
              	echo "Before command completion, additional instructions may appear below"
              	echo
              	echo "Command unknown, please consult the command list, executed with pid - 2721 (0x1)"
            	read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function grp_menu() {
   while :
   do
      clear
      echo "$(date)                                     $(whoami)@$(hostname)"
      echo
      read -p "$(whoami)@$(hostname):smx/grp_menu" choice_grp
      echo

      case "$choice_grp" in
          grpadd)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "[TOP]                         [Entry Fields]"
                        read -p " Enter group ID ----------- > " grpId
                        read -p " Enter group name --------- > " grpName
                        clear
                        echo "          COMMAND STATUS       "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING     stdout: yes     stderr: no   "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                  Fileset                Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which groupadd)                     bos.grpmgt.groupadd    exec"
                        echo "Command run: $(which groupadd) -g $grpId $grpName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Adding group: $grpName with GID: $grpId"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which groupadd) -g $grpId $grpName
                        if [ $? -eq 0 ]; then
                             echo "####################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly created group: $grpName with GID: $grpId" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which groupadd) -g $grpId $grpName" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "####################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "##################################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not created group: $grpName with GID: $grpId, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which groupadd) -g $grpId $grpName" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "##################################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep Darwin >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
                             echo "OS = OS X"
                             echo "$(date)                                      $(whoami)@$(hostname)"
                             echo "[TOP]                               [Entry Fields]"
                             printf " Enter group ID [1000] ----------- > "
                             if [ "$grpId" = "" ]; then
                                   GROUP_ID=""
                                   read grpId
                                   GROUP_ID=$grpId
                             fi
                             if [ "$grpId" = "" ]; then
                                   GROUP_ID=""
                                   GROUP_ID=1000
                             fi
                             read -p " Enter group name --------------- > " grpName
                             clear
                             echo "         COMMAND STATUS                 "
                             echo
                             echo "$(date)                                      $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no      "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which dscl)                        bos.grpmgt.dscl         exec"
                             echo "Command run: $(which dscl) . -create /Groups/$grpName"
                             echo "Command run: $(which dscl) . -create /Groups/$grpName gid $GROUP_ID"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Adding group: $grpName to system"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which dscl) . -create /Groups/$grpName
                             if [ $? -eq 0 ]; then
                                  echo "#####################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly created group: $grpName" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#####################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#####################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not created group: $grpName, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "#####################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue" ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  exit 1
                             fi
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Setting new group: $grpName GID to $GROUP_ID"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which dscl) . -create /Groups/$grpName gid $GROUP_ID
                             if [ $? -eq 0 ]; then
                                  echo "################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly set gid: $grpId of group: $userName" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName gid $grpId" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not set gid: $grpId of group: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName gid $grpId" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
			else
                             $(which uname) | grep BSD >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "[TOP]                                     [Entry Fields]"
                                  read -p " Enter group name --------------------- > " grpName
                                  read -p " Enter group ID ----------------------- > " grpId
                                  clear
                                  echo "         COMMAND STATUS                       "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which pw)                          bos.grpmgt.pw           exec"
                                  echo "Command run: $(which pw) groupadd -n $grpName -g $grpId"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Adding group: $grpName to system"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which pw) groupadd -n $grpName -g $grpId
                                  if [ $? -eq 0 ]; then
                                       echo "#################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly added group: $grpName" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which pw) groupadd -n $grpName -g $grpId" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "#################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not added group: $grpName, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which pw) groupadd -n $grpName -g $grpId" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi          
                             fi
			fi
                   fi
                   ;;
	  sysgrpadd)
                      clear
                      $(which uname) | grep Linux >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Linux"
                      else
                           echo "Feature not avalible for OS X and BSD"
                           read -p "Press [enter] to continue..." ReadDamKey
                           grp_menu
                      fi          
              	      echo "$(date)                                     $(whoami)@$(hostname)"
              	      echo "[TOP]                                    [Entry Fields]"
              	      read -p " Enter new system group name --------- > " sysgrpName
              	      read -p " Enter new system group ID ----------- > " sysgrpId
              	      clear
              	      echo "         COMMAND STATUS                      "
              	      echo
              	      echo "$(date)                                     $(whoami)@$(hostname)"
              	      echo
              	      echo "Command: RUNNING    stdout: yes    stderr: no     "
              	      echo
              	      echo "Before command completion, additional instructions may appear below"
              	      echo
              	      echo "File                                 Fileset                 Type"
              	      echo "-----------------------------------------------------------------"
              	      echo "$(which groupadd)                    bos.grpmgt.groupadd     exec"
              	      echo "Command run: $(which groupadd) -g $sysgrpId -r $sysgrpName"
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
                      echo "Adding system group: $sysgrpName with GID: $sysgrpId"
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
                      sleep 1
                      update_spinner
              	      $(which groupadd) -g $sysgrpId -r $sysgrpName
              	      if [ $? -eq 0 ]; then
                      	   echo "#################################################################" >> /var/log/smx-log/success.log
                      	   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                      	   echo "[$(date)] Successfuly created system group: $sysgrpName with GID: $sysgrpId" >> /var/log/smx-log/success.log
                      	   echo "[$(date)] Command run: $(which groupadd) -g $sysgrpId -r $sysgrpName" >> /var/log/smx-log/success.log
                      	   echo "" >> /var/log/smx-log/success.log
                           echo "#################################################################" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                      	   read -p "Press [enter] to continue..." ReadDamKey
                           clear
                      	   echo
                      	   cat /var/log/smx-log/success.log | tail -n 7
                      	   echo
                      	   read -p "Press [enter] to continue..." ReadDamKey
          	      else
			   echo "###################################################################################" >> /var/log/smx-log/fail.log
                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                    	   echo "[$(date)] Not created new system group: $sysgrpName with GID: $sysgrpId, check command syntax" >> /var/log/smx-log/fail.log
			   echo "[$(date)] Command run: $(which groupadd) -g $sysgrpId -r $sysgrpName" >> /var/log/smx-log/fail.log
                   	   echo "" >> /var/log/smx-log/fail.log
                           echo "###################################################################################" >> /var/log/smx-log/fail.log
                           echo "" >> /var/log/smx-log/fail.log
                      	   read -p "Press [enter] to continue..." ReadDamKey
                           clear
                      	   echo
                      	   cat /var/log/smx-log/fail.log | tail -n 7
                      	   echo
                      	   read -p "Press [enter] to continue..." ReadDamKey
              	      fi
              	      ;;
          chgid)
                  clear
                  $(which uname) | grep Linux >> /dev/null
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "[TOP]                       [Entry Fields]"
                       read -p " Enter new GID ---------- > " grpId
                       read -p " Enter group name ------- > " grpName
                       clear
                       echo "         COMMAND STATUS      "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING     stdout: yes     stderr: no   "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                  Fileset                Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which groupmod)                     bos.grpmgt.groupmod    exec"
                       echo "Command run: $(which groupmod) -g $grpId $grpName"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Changing GID of group: $grpName to: $grpId"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       $(which groupmod) -g $grpId $grpName
                       if [ $? -eq 0 ]; then
                            echo "#################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly changed group: $grpName id to: $grpId" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which groupmod) -g $grpId $grpName" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "#################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            echo "###############################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not changed group: $grpName id to: $grpId, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which groupmod) -g $grpId $grpName" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "###############################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                  else
                       $(which uname) | grep Darwin >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = OS X"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                                 [Entry Fields]"
                            read -p " Enter group name ----------------- > " grpName
                            printf " Enter new group ID [1000] --------- > "
                            if [ "$grpId" = "" ]; then
                                  GROUP_ID=""
                                  read grpId
                                  GROUP_ID=$grpId
                            fi
                            if [ "$grpId" = "" ]; then
                                  GROUP_ID=""
                                  GROUP_ID=1000
                            fi            
                            clear
                            echo "         COMMAND STATUS                   "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which dscl)                        bos.grpmgt.dscl         exec"
                            echo "Command run: $(which dscl) . -create /Groups/$grpName gid $GROUP_ID"
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Changing GID of group: $grpName to: $GROUP_ID"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which dscl) . -create /Groups/$grpName gid $GROUP_ID
                            if [ $? -eq 0 ]; then
                                 echo "#####################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly changed gid of group: $grpName, gid now set to: $GROUP_ID" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName gid $GROUP_ID" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "####################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "###################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not set gid of group: $grpName, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName gid $GROUP_ID" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "###################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep BSD >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                     [Entry Fields]"
                                 read -p " Enter current group ID --------------- > " currGrpId
                                 read -p " Enter new group ID ------------------- > " grpId
                                 clear
                                 echo "         COMMAND STATUS                       "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which sed)                         bos.grpmgt.sed          exec"
                                 echo "Command run: $(which sed) -i 's/$currGrpId/$grpId/g' /etc/group"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Changing GID from: $currGrpId to: $grpId"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which sed) -i 's/$currGrpId/$grpId/g' /etc/group
                                 if [ $? -eq 0 ]; then
                                      echo "###############################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "Successfuly changed GID from: $currGrpId to: $grpId" >> /var/log/smx-log/success.log
                                      echo "Command run: $(which sed) -i 's/$currGrpId/$grpId/g' /etc/group" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "###############################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "###############################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "Not changed GID from: $currGrpId to: $grpId" >> /var/log/smx-log/fail.log
                                      echo "Command run: $(which sed) -i 's/$currGrpId/$grpId/g' /etc/group" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "###############################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi           
                            fi
                       fi
                  fi
                  ;;
          chgname)
                    clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "[TOP]                            [Entry Fields]"
                         read -p " Enter new group name -------- > " newGname
                         read -p " Enter existing group name --- > " grpName
                         clear
                         echo "         COMMAND STATUS        "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "Command: RUNNING     stdout: yes    stderr: no    "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                 Fileset                 Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which groupmod)                    bos.grpmgt.groupmod     exec"
                         echo "Command run: $(which groupmod) -n $newGname $grpName"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         echo "Changing name of group: $grpName to $newGname"
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         sleep 1
                         update_spinner
                         $(which groupmod) -n $newGname $grpName
                         if [ $? -eq 0 ]; then
                              echo "####################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly changed group: $grpName to $newGname" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which groupmod) -n $newGname $grpName" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "####################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              echo "##############################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Not changed group: $grpName to $newGname, check command syntax" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which groupmod) -n $newGname $grpName" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "##############################################################" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/fail.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    else
                         $(which uname) | grep Darwin >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = OS X"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                                [Entry Fields]"
                              read -p " Enter group name ---------------- > " grpName
                              read -p " Enter group real name ----------- > " grprealName
                              clear
                              echo "         COMMAND STATUS                  "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which dscl)                        bos.grpmgt.dscl         exec"
                              echo "Command run: $(which dscl) . -create /Groups/$grpName RealName $grprealName"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Changing real name of group: $grpName to: $grprealName"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which dscl) . -create /Groups/$grpName RealName "$grprealName"
                              if [ $? -eq 0 ]; then
                                   echo "################################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly changed real name of group: $grpName, real name set to: $grprealName" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName RealName $grprealName" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "################################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "#############################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not changed real name of group: $grpName check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which dscl) . -create /Groups/$grpName RealName $grprealName" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "#############################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi
                         else
                              $(which uname) | grep BSD >> /dev/null
                              if [ $? -eq 0 ]; then
                                   echo "Feature not avalible for BSD"
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   grp_menu   
                              fi
                         fi
                    fi
                    ;;
          grpusr)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "[TOP]                         [Entry Fields]"
                        read -p " Enter username ----------- > " userName
                        read -p " Enter group name --------- > " grpName
                        clear
                        echo "         COMMAND STATUS         "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING     stdout: yes    stderr: no    "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                  Fileset                Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which groupmod)                     bos.grpmgt.groupmod    exec"
                        echo "Command run: $(which groupmod) -a $userName $grpName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Adding user: $userName to group: $grpName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which gpasswd) -a $userName $grpName
                        if [ $? -eq 0 ]; then
                             echo "####################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly added user: $userName to group: $grpName" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which gpasswd) -a $userName $grpName" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "####################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "Not added user: $userName to group: $grpName" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which groupmod) -a $userName $grpName" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "####################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep Darwin >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = OS X"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo "[TOP]                                 [Entry Fields]"
                             read -p " Enter username ------------------- > " userName
                             printf " Enter user group [staff] ---------- > "
                             if [ "$userGroup" = "" ]; then
                                  USER_GROUP=""
                                  read userGroup
                                  USER_GROUP=$userGroup
                             fi
                             if [ "$userGroup" = "" ]; then
                                   USER_GROUP=""
                                   USER_GROUP=staff 
                             fi    
                             clear
                             echo "         COMMAND STATUS                  "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which dseditgroup)                 bos.grpmgt.dseditgroup  exec"
                             echo "Command run: $(which dseditgroup) -o edit -a $userName -t user $USER_GROUP"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Adding user: $userName to group: $USER_GROUP"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which dseditgroup) -o edit -a $userName -t user $USER_GROUP
                             if [ $? -eq 0 ]; then
                                  echo "#############################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly added user: $userName to group: $USER_GROUP" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which dseditgroup) -o edit -a $userName -t user $USER_GROUP" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#############################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "##########################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not added user: $userName to group: $grpName, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which dseditgroup) -o edit -a $userName -t user $USER_GROUP" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "##########################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                        else
                             $(which uname) | grep BSD >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "Seperate groups with a comma"
                                  echo "[TOP]                                     [Entry Fields]"
                                  read -p " Enter username ----------------------- > " userName
                                  printf " Enter group [staff] ------------------- > "
                                  if [ "$userGroup" = "" ]; then
                                        USER_GROUP=""
                                        read $userGroup
                                        USER_GROUP=$userGroup
                                  fi
                                  if [ "$userGroup" = "" ]; then
                                        USER_GROUP=""
                                        USER_GROUP=staff
                                  fi            
                                  clear
                                  echo "         COMMAND STATUS                       "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which pw)                          bos.grpmgt.pw           exec"
                                  echo "Command run: $(which pw) usermod $userName -G $USER_GROUP"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Adding user: $userName to group: $USER_GROUP"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which pw) usermod $userName -G $USER_GROUP
                                  if [ $? -eq 0 ]; then
                                       echo "#################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file stated at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly added user: $userName to group: $USER_GROUP" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which pw) usermod $userName -G $USER_GROUP" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "#################################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not added user: $userName to group: $USER_GROUP, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which pw) usermod $userName -G $USER_GROUP" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#################################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi     
                             fi
                        fi
                   fi
                   ;;
          chadm)
                 clear
                 $(which uname) | grep Linux >> /dev/null
                 if [ $? -eq 0 ]; then
                      clear
                      echo "OS = Linux"
                      cat /proc/version | grep "Red Hat" >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Red Hat"
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo "[TOP]                                  [ Entry Fields]"
                           read -p " Enter username --------------------- > " userName
                           clear
                           echo "       COMMAND STATUS        "
                           echo
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo
                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                           echo
                           echo "Before command completion, additional instructions may appear below"
                           echo
                           echo "File                                 Fileset                 Type"
                           echo "-----------------------------------------------------------------"
                           echo "$(which gpasswd)                     bos.grpmgt.gpasswd      exec"
                           echo "Command run: $(which gpasswd) -a $userName wheel"
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Adding user: $userName to group: wheel, making user admin"
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           $(which gpasswd) -a $userName wheel >> /dev/null
                           if [ $? -eq 0 ]; then
                                echo "####################################################" >> /var/log/smx-log/success.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                echo "[$(date)] User: $userName modified, added user to group: wheel" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which passwd) -a $userName wheel" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                echo "###############################################" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/success.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           else
                                echo "#############################################################################" >> /var/log/smx-log/fail.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                echo "[$(date)] User: $userName not modified, not added to group: wheel, check command syntax" >> /var/log/smx-log/fail.log
                                echo "[$(date)] Command run: $(which gpasswd) -a $userName wheel" >> /var/log/smx-log/fail.log
                                echo "" >> /var/log/smx-log/fail.log
                                echo "#############################################################################" >> /var/log/smx-log/fail.log
                                echo "" >> /var/log/smx-log/fail.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/fail.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           fi
                      else
                           cat /proc/version | grep "Debian" >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = Debian"
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "[TOP]                                  [ Entry Fields]"
                                read -p " Enter username --------------------- > " userName
                                clear
                                echo "       COMMAND STATUS        "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which gpasswd)                     bos.grpmgt.gpasswd      exec"
                                echo "Command run: $(which gpasswd) -a $userName sudo"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Adding user: $userName to group: sudo, making user admin"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                $(which gpasswd) -a $userName sudo
                                if [ $? -eq 0 ]; then
                                     echo "###################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] User: $userName modified, added user to group: sudo" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which passwd) -a $userName sudo" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "##############################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "############################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] User: $userName not modified, not added to group: sudo, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which gpasswd) -a $userName wheel" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "############################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                fi
                           else
                                cat /proc/version | grep "Ubuntu" >> /var/null
                                if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Ubuntu"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "[TOP]                                  [ Entry Fields]"
                                     read -p " Enter username --------------------- > " userName
                                     clear
                                     echo "       COMMAND STATUS        "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which gpasswd)                     bos.grpmgt.gpasswd      exec"
                                     echo "Command run: $(which gpasswd) -a $userName sudo"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Adding user: $userName to group: sudo, making user admin"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     $(which gpasswd) -a $userName sudo
                                     if [ $? -eq 0 ]; then
                                          echo "###################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] User: $userName modified, added user to group: sudo" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which passwd) -a $userName sudo" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "##############################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "############################################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] User: $userName not modified, not added to group: sudo, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which gpasswd) -a $userName wheel" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "############################################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     fi
                                else
                                     cat /proc/version | grep "SUSE"
                                     if [ $? -eq 0 ]; then
                                          clear
                                          echo "OS = OpenSuSE"
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo "[TOP]                                  [ Entry Fields]"
                                          read -p " Enter username --------------------- > " userName
                                          clear
                                          echo "       COMMAND STATUS        "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which gpasswd)                     bos.grpmgt.gpasswd      exec"
                                          echo "Command run: $(which gpasswd) -a $userName wheel"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Adding user: $userName to group: wheel, making user admin"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          $(which gpasswd) -a $userName wheel >> /dev/null
                                          if [ $? -eq 0 ]; then
                                               echo "####################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] User: $userName modified, added user to group: wheel" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which passwd) -a $userName wheel" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "###############################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          else
                                               echo "#############################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] User: $userName not modified, not added to group: wheel, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which gpasswd) -a $userName wheel" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "#############################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          fi
                                     fi
                                fi
                           fi
                      fi
                 else
                      $(which uname) | grep Darwin >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = OS X"
                           clear
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo "[TOP]                               [Entry Fields]"
                           read -p " Enter username ----------------- > " userName
                           clear
                           echo "         COMMAND STATUS                 "
                           echo
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo
                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                           echo
                           echo "Before command completion, additional instructions may appear below"
                           echo
                           echo "File                                 Fileset                 Type"
                           echo "-----------------------------------------------------------------"
                           echo "$(which dseditgroup)                 bos.grpmgt.dseditgroup  exec"
                           echo "Command run: $(which dseditgroup) -o edit -a $userName -t user admin"
                           update_spinner
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Adding user: $userName to group: admin"
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           sleep 1
                           $(which dseditgroup) -o edit -a $userName -t user admin
                           if [ $? -eq 0 ]; then
                                echo "####################################################################" >> /var/log/smx-log/success.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                echo "[$(date)] Successfuly added $userName to group: admin" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: $(which dseditgroup) -o edit -a $userName -t user admin" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                echo "####################################################################" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/success.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           else
                                echo "####################################################################" >> /var/log/smx-log/fail.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                echo "[$(date)] Not added $userName to group: admin, check command syntax" >> /var/log/smx-log/fail.log
                                echo "[$(date)] Command run: $(which dseditgroup) -o edit -a $userName -t user admin" >> /var/log/smx-log/fail.log
                                echo "" >> /var/log/smx-log/fail.log
                                echo "####################################################################" >> /var/log/smx-log/fail.log
                                echo "" >> /var/log/smx-log/fail.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/fail.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           fi
                      else
                           $(which uname) | grep BSD >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = BSD"
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "[TOP]                                     [Entry Fields]"
                                read -p " Enter username ----------------------- > " userName
                                clear
                                echo "         COMMAND STATUS                       "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which pw)                          bos.grpmgt.pw           exec"
                                echo "Command run: $(which pw) $userName -G sudo"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Adding user: $userName to group: sudo"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which pw) $userName -G sudo
                                if [ $? -eq 0 ]; then
                                     echo "#####################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly added user: $userName to group: sudo, making user administrator" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which pw) $userName -G sudo" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "#####################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "################################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not added user: $userName to group: sudo, check command syntax, user not administrator" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which pw) $userName -G sudo" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "################################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                fi          
                           fi
                      fi
                 fi
                 ;;
          lsgrp)
	          clear
		  echo "$(date)                                     $(whoami)@$(hostname)"
              	  echo "[TOP]                                  [Entry Fields]"
              	  read -p " Enter group name ------------------ > " grpName
                  clear
                  echo "       COMMAND STATUS          "
                  echo
                  echo "$(date)                                     $(whoami)@$(hostname)"
                  echo
                  echo "Command: RUNNING     stdout: yes    stderr: no    "
                  echo
                  echo "Before command completion, additional instructions may appear below"
                  echo
                  echo "File                                  Fileset                Type"
                  echo "-----------------------------------------------------------------"
                  echo "$(which cat)                          bos.sysmgt.cat         exec"
		  echo "[$(date)] Command run: $(which cat) /etc/group | $(which grep) $grpName | $(which tee) /var/log/smx-log/cat.log"
                  sleep 2
            	  clear
        	  $(which cat) /etc/group | $(which grep) $grpName | $(which tee) /var/log/smx-log/group.log
                  if [ $PIPESTATUS -eq 0 ]; then
		       echo "###########################################################################################################" >> /var/log/smx-log/success.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                       echo "[$(date)] Successfuly displayed groups on system" >> /var/log/smx-log/success.log
                       echo "[$(date)] Command run: $(which cat) /etc/group | $(which grep) $grpName | $(which tee) /var/log/smx-log/group.log" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       echo "###########################################################################################################" >> /var/log/smx-log/success.log
                       echo "" >> /var/log/smx-log/success.log
                       read -p "Press [enter] to continue..." ReadDamKey
                       clear
              	       echo
              	       cat /var/log/smx-log/success.log | tail -n 7
              	       echo
                       read -p "Press [enter] to continue..." ReadDamKey
                  else
		       echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                       echo "[$(date)] Not displayed groups on system, check command syntax" >> /var/log/smx-log/fail.log
		       echo "[$(date)] Command run: $(which cat) /etc/group | $(which grep) $grpName | $(which tee) /var/log/smx-log/cat.log" >> /var/log/smx-log/fail.log
                       echo "" >> /var/log/smx-log/fail.log
                       echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                       echo "" >> /var/log/smx-log/fail.log
                       read -p "Press [enter] to continue..." ReadDamKey
                       clear
                       echo
              	       cat /var/log/smx-log/fail.log | tail -n 7
              	       echo
                       read -p "Press [enter] to continue..." ReadDamKey
                  fi
                  ;;
          lsusrgrp)
                     clear
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo "[TOP]                          [Entry Fields]"
                     read -p " Enter username ------------ > " userName
                     clear
                     echo "         COMMAND STATUS        "
                     echo
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING     stdout: yes     stderr: no   "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "File                                  Fileset                Type"
                     echo "-----------------------------------------------------------------"
                     echo "$(which groups)                       bos.grpmgt.groups      exec"
             	     echo "Command run: $(which groups) $userName | $(which tee) /var/log/smx-log/groups.log"
             	     sleep 2
            	     clear
                     $(which groups) $userName | $(which tee) /var/log/smx-log/groups.log
                     if [ $PIPESTATUS -eq 0 ]; then
			  echo "#####################################################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly displayed group information for user: $userName" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which groups) $userName | $(which tee) /var/log/smx-log/groups.log" >> /var/log/smx-log/success.log
			  echo "" >> /var/log/smx-log/success.log
                          echo "#####################################################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                      	  echo
                      	  cat /var/log/smx-log/success.log | tail -n 7
                      	  echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     else
      			  echo "#####################################################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "Not displayed group information for user: $userName, check command syntax" >> /var/log/smx-log/fail.log
			  echo "[$(date)] Command run: $(which groups) $userName | $(which tee) /var/log/smx-log/groups.log" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "#####################################################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                      	  cat /var/log/smx-log/fail.log | tail -n 7
                      	  echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     fi
                     ;;
          rmusr)
                  clear
                  $(which uname) | grep Linux >> /dev/null
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "[TOP]                            [Entry Fields]"
                       read -p " Enter username -------------- > " userName
                       read -p " Enter group name ------------ > " grpName
                       clear
                       echo "         COMMAND STATUS            "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING      stdout: yes     stderr: no  "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                  Fileset                Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which gpasswd)                      bos.grpmgt.gpasswd     exec"
                       echo "Command run: $(which gpasswd) -d $userName $grpName"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Removing user: $userName from group: $grpName"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       $(which gpasswd) -d $userName $grpName
                       if [ $? -eq 0 ]; then
                            echo "########################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly removed user: $userName from group: $grpName" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which gpasswd) -d $userName $grpName" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "########################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            echo "######################################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not removed user: $userName from group: $grpName, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which gpasswd) -d $userName $grpName" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "######################################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                  else
                       $(which uname) | grep Darwin >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = OS X"
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "[TOP]                               [Entry Fields]"
                            read -p " Enter username ----------------- > " userName
                            read -p " Enter user group --------------- > " userGroup
                            clear
                            echo "         COMMAND STATUS                 "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which dseditgroup)                 bos.grpmgt.dseditgroup  exec"
                            echo "Command run: $(which dseditgroup) -o edit -d $userName -t user $userGroup"
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Deleting user: $userName from group: $userGroup"
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which dseditgroup) -o edit -d $userName -t user $userGroup
                            if [ $? -eq 0 ]; then
                                 echo "#########################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly deleted user: $userName from group: $userGroup" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which dseditgroup) -o edit -d $userName -t user $userGroup" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#########################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not deleted user: $userName from group: $userGroup" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which dseditgroup) -o edit -d $userName -t user $userGroup" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#########################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi
                       else
                            $(which uname) | grep BSD >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = BSD"
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                     [Entry Fields]"
                                 read -p " Enter username ----------------------- > " userName
                                 read -p " Enter group name --------------------- > " userGroup
                                 clear
                                 echo "         COMMAND STATUS                       "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no      "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                 Type"
                                 echo "-----------------------------------------------------------------"
                                 echo "$(which pw)                          bos.grpmgt.pw           exec"
                                 echo "Command run: $(which pw) groupmod $userGroup -d $userName"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Deleting user: $userName from group: $userGroup"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which pw) groupmod $userGroup -d $userName
                                 if [ $? -eq 0 ]; then
                                      echo "####################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly removed user: $userName from group: $userGroup" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which pw) groupmod $userGroup -d $userName" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "####################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      echo "##################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not removed user: $userName from group: $userGroup, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which pw) groupmod $userGroup -d $userName" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "##################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 fi     
                            fi
                       fi
                  fi
                  ;;
          grpdel)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "WARNING: this will affect all users in this group"
                        echo "[TOP]                             [Entry Fields]"
                        read -p " Enter group name ------------- > " grpName
                        clear
                        echo "        COMMAND STATUS              "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING     stdout: yes    stderr: no    "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                  Fileset                Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which groupdel)                     bos.grpmgt.groupdel    exec"
                        echo "Command run: $(which groupdel) $grpName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Removing group: $grpName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        $(which groupdel) $grpName
                        if [ $? -eq 0 ]; then
                             echo "###############################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly removed group: $grpName from system" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which groupdel) $grpName" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###############################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "#############################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not removed group: $grpName from system, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which groupdel) $grpName" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "#############################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep Darwin >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = OS X"
                             echo "$(date)                                    $(whoami)@$(hostname)"
                             echo "[TOP]                             [Entry Fields]"
                             read -p " Enter group name ------------- > " grpName
                             clear
                             echo "         COMMAND STATUS               "
                             echo
                             echo "$(date)                                    $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no    "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which dscl)                        bos.grpmgt.dscl         exec"
                             echo "Command run: $(which dscl) . -delete /Groups/$grpName"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Removing group: $grpName"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             $(which dscl) . -delete /Groups/$grpName
                             if [ $? -eq 0 ]; then
                                  echo "#####################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly removed group: $grpName from system" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which dscl) . -delete /Groups/$grpName" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#####################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#############################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not removed group: $grpName from system, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which dscl) . -delete /Groups/$grpName" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "#############################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                        else
                             $(which uname) | grep BSD >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "[TOP]                                     [Entry Fields]"
                                  read -p " Enter group name --------------------- > " grpName
                                  read -p " Enter group ID ----------------------- > " grpId
                                  clear
                                  echo "         COMMAND STATUS                       "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which pw)                          bos.grpmgt.pw           exec"
                                  echo "Command run: $(which pw) groupdel -n $grpName -g $grpId"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Removing group: $grpName"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  $(which pw) groupdel -n $grpName -g $grpId
                                  if [ $? -eq 0 ]; then
                                       echo "################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly removed group: $grpName" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which pw) groupdel -n $grpName -g $grpId" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "#################################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not removed group: $grpName, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which pw) groupdel -n $grpName -g $grpId" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#################################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi          
                             fi
                        fi
                   fi
                   ;;
          help)
                 echo "grpadd > Add a new group to system"
                 echo "sysgrpadd > Add a new system group to system"
                 echo "chgid > Change group ID"
                 echo "chgname > Change group name"
                 echo "grpusr > Add a user to a group"
                 echo "chadm > Change user to admin"
                 echo "lsgrp > List groups on the system"
                 echo "lsusrgrp > List groups users are in"
                 echo "rmusr > Remove user from group"
                 echo "grpdel > Remove group from system"
                 echo "help > This menu"
                 echo "exit > Return to usr_menu"
                 echo "exit-mas > Exit back to shell" 
                 read -p "Press [enter] to continue..." ReadDamKey;;        
          exit)
                 clear
		 echo "#######################################################" >> /var/log/smx-log/exit.log
              	 echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
              	 echo "[$(date)] Successfuly terminated $(basename $0)/usr_menu#grp_menu" >> /var/log/smx-log/exit.log
              	 echo "" >> /var/log/smx-log/exit.log
                 echo "#######################################################" >> /var/log/smx-log/exit.log
                 echo "" >> /var/log/smx-log/exit.log
              	 usr_menu
                 ;;
	  exit-mas)
    	             clear
              	     echo "########################################" >> /var/log/smx-log/exit.log
              	     echo "$(date)::$(whoami)@$(whoami)@$(hostname)" >> /var/log/smx-log/exit.log
            	     echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
            	     echo "" >> /var/log/smx-log/exit.log
            	     echo "########################################" >> /var/log/smx-log/exit.log
            	     echo "" >> /var/log/smx-log/exit.log
                     exit 0
                     ;;
          *)     clear
                 echo "      COMMAND STATUS      "
                 echo
                 echo "$(date)                                     $(whoami)@$(hostname)"
                 echo
                 echo "Command: FAIL     stdout: yes    stderr: no       "
                 echo
                 echo "Before command completion, additional instructions may appear below"
                 echo
                 echo "Command unknown, please consult the command list, executed with pid - 2053 (0x1)"
                 read -p "Press [enter] to continue..." ReadDamKey;;
      esac
  done
}

function passwd_menu() {
    while :
    do
        clear
        echo "$(date)                                     $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/passwd_menu # " choice_passwd
        echo

        case "$choice_passwd" in
            chpasswd)
                       clear
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "[TOP]                                [Entry Fields]"
                       read -p " Enter username ------------------ > " userName
                       clear
                       echo "         COMMAND STATUS                  "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                 Fileset                 Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which passwd)                      bos.passmgt.passwd      exec"
                       echo "Command run: $(which passwd) $userName"
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Setting password for user: $userName"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       $(which passwd) $userName
                       if [ $? -eq 0 ]; then
                      	    echo "###############################################" >> /var/log/smx-log/success.log
                      	    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly changed password of user: $userName" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which passwd) $userName" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "###############################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                      	    cat /var/log/smx-log/success.log | tail -n 7
                      	    echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
			    echo "#############################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not changed password of user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which passwd) $userName" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "#############################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                      	    cat /var/log/smx-log/fail.log | tail -n 7
                      	    echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                       ;;
            lock)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "[TOP]                             [Entry Fields]"
                        read -p " Enter username --------------- > " userName
                        clear
                        echo "         COMMAND STATUS               "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                 Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which passwd)                      bos.passmgt.passwd      exec"
                        echo "Command run: $(which passwd) -l $userName"
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Locking user account: $userName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        $(which passwd) -l $userName
                        if [ $? -eq 0 ]; then
                             echo "#########################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly locked account: $userName" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which passwd) -l $userName" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "#########################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             echo "###################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not locked account: $userName, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which passwd) -l $userName" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "###################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/fail.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   else
                        $(which uname) | grep Darwin >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = OS X"
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo "[TOP]                                     [Entry Fields]"
                             read -p " Enter username ----------------------- > " userName
                             clear
                             echo "         COMMAND STATUS                       "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which chsh)                        bos.passmgt.chsh        exec"
                             echo "Command run: $(which chsh) -s $(which nologin) $userName"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Locking user account: $userName"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which chsh) -s $(which nologin) $userName
                             if [ $? -eq 0 ]; then
                                  echo "##############################################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly locked user: $userName, setting shell to $(which nlogin)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which chsh) -s $(which nologin) $userName" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "##############################################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "##############################################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not locked user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which chsh) -s $(which nologin) $userName" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "##############################################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi          
                        else
                             $(which uname) | grep BSD >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = BSD"
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo "[TOP]                                     [Entry Fields]"
                                  read -p " Enter username ----------------------- > " userName
                                  clear
                                  echo "         COMMAND STATUS                       "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which pw)                          bos.passmgt.pw          exec"
                                  echo "Command run: $(which pw) lock $userName"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Locking user account: $userName"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which pw) lock $userName
                                  if [ $? -eq 0 ]; then
                                       echo "###########################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly locked user: $userName" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which pw) lock $userName" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###########################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "###########################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not locked user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which pw) lock $userName" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "###########################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi     
                             fi
                        fi
                   fi
                   ;;
            unlock)
                     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "$(date)                                     $(whoami)@$(hostname)" 
                          echo "[TOP]                                   [Entry Fields]"
                          read -p " Enter username --------------------- > " userName
                          clear
                          echo "         COMMAND STATUS                      "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which passwd)                      bos.passmgt.passwd      exec"
                          echo "Command run: $(which passwd) -u $userName"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Unlocking user account: $userName"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          $(which passwd) -u $userName
                          if [ $? -eq 0 ]; then
                               echo "#########################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly unlocked account: $userName" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which passwd) -u $userName" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "#########################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "#####################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not unlocked account: $userName, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which passwd) -u $userName" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "#####################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep Darwin >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = OS X"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "[TOP]                                      [Entry Fields]"
                               read -p " Enter username ------------------------ > " userName
                               printf " Enter user shell [$(which bash)] ------- > "
                               if [ "$userShell" = "" ]; then
                                     USER_SHELL=""
                                     read userShell
                                     USER_SHELL=$userShell
                               fi
                               if [ "$userShell" = "" ]; then
                                     USER_SHELL=""
                                     USER_SHELL=$(which bash)
                               fi            
                               clear
                               echo "         COMMAND STATUS                        "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which chsh)                        bos.passmgt.chsh        exec"
                               echo "Command run: $(which chsh) -s $USER_SHELL $userName"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Unlocking user account: $userName, setting shell to: $USER_SHELL"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chsh) -s $USER_SHELL $userName
                               if [ $? -eq 0 ]; then
                                    echo "#########################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly unlocked user: $userName, set shell to: $USER_SHELL" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which chsh) -s $USER_SHELL $userName" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "#########################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not unlocked user: $userName, not set shell to: $USER_SHELL, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which chsh) -s $USER_SHELL $userName" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "###########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi          
                          else
                               $(which uname) | grep BSD >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = BSD"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "[TOP]                                   [Entry Fields]"
                                    read -p " Enter username --------------------- > " userName
                                    clear
                                    echo "         COMMAND STATUS                     "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which pw)                          bos.passwd              exec"
                                    echo "Command run: $(which pw) unlock $userName"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Unlocking user account: $userName"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which pw) unlock $userName
                                    if [ $? -eq 0 ]; then
                                         echo "###############################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly unlocked user: $userName" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which pw) unlock $userName" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "###############################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "###############################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not unlocked user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which pw) unlock $userName" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "###############################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi     
                               fi
                          fi
                     fi
                     ;;
            delpasswd)
                        clear
                        $(which uname) | grep Linux >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Linux"
                        else
                             echo "Feature not avalible for BSD and OS X"
                             read -p "Press [enter] to continue..." ReadDamKey
                             passwd_menu
                        fi          
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo "[TOP]                                [Entry Fields]"
                        read -p " Enter username ------------------ > " userName
                        clear
                        echo "         COMMAND STATUS                  "
                        echo
                        echo "$(date)                                     $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                 Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which passwd)                      bos.passmgt.passwd      exec"
                        echo "Command run: $(which passwd) -d $userName"
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Deleting password for user: $userName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        $(which passwd) -d $userName
                        if [ $? -eq 0 ]; then
			     echo "###############################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly deleted password of user: $userName" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which passwd) -d $userName" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###############################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                      	     cat /var/log/smx-log/success.log | tail -n 7
                      	     echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
		             echo "#############################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not deleted password of user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which passwd) -d $userName" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "#############################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                      	     cat /var/log/smx-log/fail.log | tail -n 7
                      	     echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                        ;;
            minage)
                     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo "minimum password age example (in days): 5"
                          echo "[TOP]                                 [Entry Fields]"
                          read -p " Enter username ------------------- > " userName
                          read -p " Enter minimum password age ------- > " minAge
                          clear
                          echo "         COMMAND STATUS                   "
                          echo
                          echo "$(date)                                     $(whoami)@$(hostname)"
                          echo
                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                          echo
                          echo "Before command completion, additional instructions may appear below"
                          echo
                          echo "File                                 Fileset                 Type"
                          echo "-----------------------------------------------------------------"
                          echo "$(which passwd)                      bos.passwdmgt.passwd    exec"
                          echo "Command run: $(which passwd) -n $minAge $userName"
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          echo "Setting minimum password age for user: $userName"
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          update_spinner
                          sleep 1
                          $(which passwd) -n $minAge $userName
                          if [ $? -eq 0 ]; then
                               echo "########################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly set minimum password age for user: $userName" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which passwd) -n $minAge $userName" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "########################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "######################################################################" >> /var/log/smx-log/fail.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Not set minimum password age for user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                               echo "[$(date)] Command run: $(which passwd) -n $minAge $userName" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               echo "######################################################################" >> /var/log/smx-log/fail.log
                               echo "" >> /var/log/smx-log/fail.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/fail.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          fi
                     else
                          $(which uname) | grep BSD >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "[TOP]                                     [Entry Fields]"
                               read -p " Enter username ----------------------- > " userName
                               read -p " Enter expire date (in days) ---------- > " expDays
                               clear
                               echo "         COMMAND STATUS                       "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which pw)                          bos.passmgt.pw          exec"
                               echo "Command run: $(which pw) usermod -e $expDays -n $userName"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting expire date for user: $userName to: $expDays days"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which pw) usermod -e $expDays -n $userName
                               if [ $? -eq 0 ]; then
                                    echo "###################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly set expire date for user: $userName" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which pw) usermod -e $expDays -n $userName" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "###################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#######################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not set expire date for user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which pw) usermod -e $expDays -n $userName" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "#######################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi            
                          else
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey
                               passwd_menu
                          fi
                     fi
                     ;;
            maxage)
                     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                     else
                          echo "Feature not avalible for OS X or BSD"
                          read -p "Press [enter] to continue..." ReadDamKey
                          passwd_menu
                     fi          
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo "maximum password age example (in days): 365"
                     echo "[TOP]                                    [Entry Fields]"
                     read -p " Enter username ---------------------- > " userName
                     read -p " Enter maximum password age ---------- > " maxAge
                     clear
                     echo "         COMMAND STATUS                      "
                     echo
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "File                                 Fileset                 Type"
                     echo "-----------------------------------------------------------------"
                     echo "$(which passwd)                      bos.passwdmgt.passwd    exec"
                     echo "Command run: $(which passwd) -x $maxAge $userName"
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     echo "Setting maximum password age for user: $userName"
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     update_spinner
                     sleep 1
                     $(which passwd) -x $maxAge $userName
                     if [ $? -eq 0 ]; then
			  echo "########################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly set maximum password age for user: $userName" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which passwd) -x $maxAge $userName" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "########################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                      	  cat /var/log/smx-log/success.log | tail -n 7
                      	  echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     else
			  echo "#################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not set maximum password age for user: $userName" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which passwd) -x $maxAge $userName" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "#################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                      	  cat /var/log/smx-log/fail.log | tail -n 7
                      	  echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     fi
                     ;;
            passwarn)
                       clear
                       $(which uname) | grep Linux >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Linux"
                       else
                            echo "Feature not avalible for OS X or BSD"
                            read -p "Press [enter] to continue..." ReadDamKey
                            passwd_menu
                       fi
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "displayes a warning before the password expires"
                       echo "Password warning example (in days): 2"
                       echo "[TOP]                                   [Entry Fields]"
                       read -p " Enter username --------------------- > " userName
                       read -p " Enter password warning age --------- > " passWarn
                       clear
                       echo "         COMMAND STATUS                     "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                 Fileset                 Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which passwd)                      bos.passwdmgt.passwd    exec"
                       echo "Command run: $(which passwd) -w $passWarn $userName"
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Setting password warning age for user: $userName"
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       update_spinner
                       sleep 1
                       $(which passwd) -w $passWarn $userName
                       if [ $? -eq 0 ]; then
			    echo "###################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly set warn date on user: $userName" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which passwd) -w $passWarn $userName" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "###################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                      	    cat /var/log/smx-log/success.log | tail -n 7
                      	    echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
			    echo "##########################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not set warn date on user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which passwd) -w $passWarn $userName" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "##########################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                      	    cat /var/log/smx-log/fail.log | tail -n 7
                      	    echo
			    read -p "Press [enter] to continue..." ReadDamKey
                       fi
                       ;;
            passwdexp)
                        clear
                        $(which uname) | grep Linux >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Linux"
                        else
                             echo "Feature not avalible for OS X or BSD"
                             read -p "Press [enter] to continue..." ReadDamKey
                             passwd_menu
                        fi
                        echo "$(date)                                   $(whoami)@$(hostname)"
                        echo "Date of account can be considered inactive (if the password has not been changed) (in days)"
                        echo "example: 1"
                        echo "[TOP]                                [Entry Fields]"
                        read -p " Enter inactive days ------------- > " expDays
                        read -p " Enter username ------------------ > " userName
                        clear
                        echo "         COMMAND STATUS                  "
                        echo
                        echo "$(date)                                   $(whoami)@$(hostname)"
                        echo
                        echo "Command: RUNNING    stdout: yes    stderr: no    "
                        echo
                        echo "Before command completion, additional instructions may appear below"
                        echo
                        echo "File                                 Fileset                 Type"
                        echo "-----------------------------------------------------------------"
                        echo "$(which passwd)                      bos.passwdmgt.passwd    exec"
                        echo "Command run: $(which passwd) -i $expDays $userName"
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        echo "Setting days to consider password inactive for user: $userName"
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        update_spinner
                        sleep 1
                        $(which passwd) -i $expDays $userName
                        if [ $? -eq 0 ]; then
			     echo "##################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly set inactive date on user: $userName" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which passwd) -i $expDays $userName" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                      	     cat /var/log/smx-log/success.log | tail -n 7
                      	     echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
			     echo "##############################################################" >> /var/log/smx-log/fail.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Not set inactive date on user: $userName, check command syntax" >> /var/log/smx-log/fail.log
                             echo "[$(date)] Command run: $(which passwd) -i $expDays $userName" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             echo "##############################################################" >> /var/log/smx-log/fail.log
                             echo "" >> /var/log/smx-log/fail.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                      	     cat /var/log/smx-log/fail.log | tail -n 7
                      	     echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                        ;;
            passwdinfo)
                         clear
                         $(which uname) | grep Linux >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Linux"
                         else
                              echo "Feature not avalible for OS X or BSD"
                              read -p "Press [enter] to continue..." ReadDamKey
                              passwd_menu
                         fi
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo "[TOP]                                  [Entry Fields]"
                         read -p " Enter username -------------------- > " userName
                         clear
                         echo "         COMMAND STATUS                    "
                         echo
                         echo "$(date)                                     $(whoami)@$(hostname)"
                         echo
                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                         echo
                         echo "Before command completion, additional instructions may appear below"
                         echo
                         echo "File                                 Fileset                 Type"
                         echo "-----------------------------------------------------------------"
                         echo "$(which passwd)                      bos.passwdmgt.passwd    exec"
                         echo "Command run: $(which passwd) -S $userName | $(which tee) /var/log/smx-log/passwd.log"
                         sleep 2
			 clear
                         $(which passwd) -S $userName | $(which tee) /var/log/smx-log/passwd.log
                         if [ $PIPESTATUS -eq 0 ]; then
			      echo "########################################################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly displayed password information for user: $userName" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which passwd) -S $userName | $(which tee) /var/log/smx-log/passwd.log" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "########################################################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                      	      cat /var/log/smx-log/success.log | tail -n 7
                      	      echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
			      echo "########################################################################################" >> /var/log/smx-log/fail.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Not displayed password information for user: $userName" >> /var/log/smx-log/fail.log
                              echo "[$(date)] Command run: $(which passwd) -S $userName | $(which tee) /var/log/smx-log/passwd.log" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              echo "########################################################################################" >> /var/log/smx-log/fail.log
                              echo "" >> /var/log/smx-log/fail.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                      	      cat /var/log/smx-log/fail.log | tail -n 7
                      	      echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                         ;;
            help)
                   echo "chpasswd > Change user password"
                   echo "lock > Lock an account"
                   echo "unlock > Unlock an account"
                   echo "delpasswd > Delete user password"
                   echo "minage > Set password minimum age"
                   echo "maxage > Set password maximum age"
                   echo "passwarn > Set password warning age"
                   echo "passwdexp > Set password date of inactive"
                   echo "passwdinfo > Get password information on a user"
                   echo "help > This menu"
                   echo "exit > Return to usr_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;           
            exit)
            	   clear
            	   echo "##########################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/usr_menu#passwd_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "##########################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   usr_menu
                   ;;
            exit-mas)
            	       clear
            	       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "          COMMAND STATUS         "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no       "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 4636 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function srv_menu() {
    while :
    do
        clear
        echo "$(date)                                     $(whoami)@$(hostname)"
      	echo
      	read -p "$(whoami)@$(hostname):smx/srv_menu # " choice_srv
      	echo
  	
        case "$choice_srv" in
	    apache)
                     clear
                     echo "################################################" >> /var/log/smx-log/success.log
              	     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
              	     echo "Entering apache_menu" >> /var/log/smx-log/success.log
              	     echo "[$(date)] Command run: $(basename $0)/srv_menu/apache_menu" >> /var/log/smx-log/success.log
              	     echo "" >> /var/log/smx-log/success.log
                     echo "################################################" >> /var/log/smx-log/success.log
                     echo "" >> /var/log/smx-log/success.log
              	     apache_menu
              	     ;;
	    nfs)
                  clear
		  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering dns_menu" >> /var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/nfs_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  nfs_menu
                  ;;
            nis)
                  clear
		  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering nis_menu" >> /var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/nis_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  nis_menu
                  ;;
            dhcp)
                   clear
                   echo "##############################################" >> /var/log/smx-log/success.log
                   echo "$(date)::$(whoami)$(hostname)" >> /var/log/smx-log/success.log
                   echo "Entering dhcp_menu" >> /var/log/smx-log/success.log
                   echo "[$(date)] Command run: $(basename $0)/srv_menu/dhcp_menu" >> /var/log/smx-log/success.log
                   echo "" >> /var/log/smx-log/success.log
                   echo "##############################################" >> /var/log/smx-log/success.log
                   echo "" >> /var/log/smx-log/success.log
              	   dhcp_menu
              	   ;;
	    sql)
                  clear
		  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering sql_menu" >>/var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/sql_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  sql_menu
                  ;;
            smb)
                  clear
		  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering smb_menu" >> /var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/smb_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  smb_menu
                  ;;
            ssh)
                  clear
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering ssh_menu" >> /var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/ssh_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  ssh_menu
                  ;;
            vnc)
                  clear
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering vnc_menu" >> /var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/vnc_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "#############################################" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  vnc_menu
                  ;;
	    snmp)
		   clear
            	   echo "##############################################" >> /var/log/smx-log/success.log
            	   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
            	   echo "Entering snmp_menu" >> /var/log/smx-log/success.log
            	   echo "[$(date)] Command run: $(basename $0)/srv_menu/snmp_menu" >> /var/log/smx-log/success.log
            	   echo "" >> /var/log/smx-log/success.log
            	   echo "##############################################" >> /var/log/smx-log/success.log
            	   echo "" >> /var/log/smx-log/success.log
            	   snmp_menu
            	   ;;
            dns)
                  clear
                  echo "###############################################" >> /var/log/smx-log/success.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                  echo "Entering dns_menu" >> /var/log/smx-log/success.log
                  echo "[$(date)] Command run: $(basename $0)/srv_menu/dns_menu" >> /var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  echo "###############################################" >>/var/log/smx-log/success.log
                  echo "" >> /var/log/smx-log/success.log
                  dns_menu
                  ;;
            ms-ad)
                    clear
                    echo "#############################################" >> /var/log/smx-log/success.log
                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                    echo "Entering ms-ad_menu" >> /var/log/smx-log/success.log
                    echo "[$(date)] Command run: $(basename $0)/srv_menu/ms-ad_menu" >> /var/log/smx-log/success.log
                    echo "" >> /var/log/smx-log/success.log
                    echo "#############################################" >> /var/log/smx-log/success.log
                    echo "" >> /var/log/smx-log/success.log
                    ms-ad_menu
                    ;;         
            help)
                   echo "apache > Apache server management"
                   echo "nfs > NFS server management"
                   echo "nis > NIS server management"
                   echo "dhcp > DHCP server management"
                   echo "sql > SQL server management (MySQL)"
                   echo "smb > Samba server management"
                   echo "ssh > SSH server management"
                   echo "vnc > VNC server management"
                   echo "snmp > SNMP server management"
                   echo "dns > DNS server management"
                   echo "ms-ad > Microsoft Active Directory server management"
                   echo "help > This menu"
                   echo "exit > Exit back to main menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;      
            exit)
                   clear
		   echo "##############################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "##############################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   main_menu
                   ;;
            exit-mas)
                       clear
		       echo "#################################" >> /var/log/smx-log/exit.log
              	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
              	       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
              	       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
              	       exit 0
              	       ;;
            *)         clear
                       echo "          COMMAND STATUS         "
              	       echo
              	       echo "$(date)                                     $(whoami)@$(hostname)"
              	       echo
              	       echo "Command: FAIL    stdout: yes    stderr: no       "
              	       echo
              	       echo "Before command completion, additional instructions may appear below"
              	       echo
              	       echo "Unkonwn command, please consult the command list, executed with pid - 6235 (0x1)"
              	       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function apache_menu(){
    while :
    do
        clear
	      echo "$(date)                                     $(whoami)@$(hostname)"
        echo "+------------------------+"
        echo "|   APACHE MANAGEMENT    |"
        echo "+------------------------+"
        echo
        echo
        read -p "$(whoami)@$(hostname):smx/apache_menu # " choice_apache
        echo

        case "$choice_apache" in
	    install)
		      clear
                      $(which uname) | grep Linux >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Linux"
                           cat /proc/version | grep "Red Hat" >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = Red Hat"
                                echo "$(date)                                                                  $(whoami)@$(hostname)"
                                echo "[TOP]                                                                                                          [Entry Fields]"
                                printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                if [ "$netIntf" = "" ]; then
                                      NETINTF=""
                                      read netIntf
                                      NETINTF=$netIntf
                                fi
                                if [ "$netIntf" = "" ]; then
                                      NETINTF=""
                                      NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                fi            
                                printf " Enter admin email address [root@localhost] ----------------------------------------------------------------- > "
                                if [ "$adminEmail" = "" ]; then
                                      ADMIN_EMAIL=""
                                      read adminEmail
                                      ADMIN_EMAIL=$adminEmail
                                fi
                                if [ "$adminEmail" = "" ]; then
                                      ADMIN_EMAIL=""
                                      ADMIN_EMAIL=root@localhost
                                fi        
                                printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] -------------- > "
                                if [ "$ipAddr" = "" ]; then
                                      IP_ADDR=""
                                      read ipAddr
                                      IP_ADDR=$ipAddr
                                fi
                                if [ "$ipAddr" = "" ]; then
                                      IP_ADDR=""
                                      IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                fi        
                                read -p " Use perl -------------------------------------------------------------------------------------------- (Y/N) > " ansPerl
                                read -p " Use PHP --------------------------------------------------------------------------------------------- (Y/N) > " ansPhp
                                read -p " Use SSL --------------------------------------------------------------------------------------------- (Y/N) > " ansSsl
                                clear
                                echo "       COMMAND STATUS        "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                echo "$(which rm)                          bos.sysmgt.rm           exec"
                                echo "$(which sed)                         bos.sysmgt.sed          exec"
                                echo "$(which service)                     bos.sysmgt.service      exec"
                                echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                echo "Command run: $(which yum) -y install httpd | $(which tee) /var/log/smx-log/yum.log"
                                echo "Command run: $(which rm) -rf /etc/httpd/conf.d/welcome.conf"
                                echo "Command run: $(which rm) -rf /var/www/error/noindex.html"
                                echo "Command run: $(which service) httpd start"
                                echo "Command run: $(which chkconfig) httpd on"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Installing apache web server"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which yum) -y install httpd | $(which tee) /var/log/smx-log/yum.log
                                if [ $PIPESTATUS -eq 0 ]; then
                                     echo "######################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly installed apache on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which yum) -y install httpd | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "######################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "######################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not installed apache on system: $(hostname), check command syntax" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which yum) -y install httpd | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "######################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
                                fi
                                $(which rm) -rf /etc/httpd/conf.d/welcome.conf
                                $(which rm) -rf /var/www/error/noindex.html
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Changing ServerTokens to use Prod"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting KeepAlive to On"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i 's/KeepAlive Off/KeepAlive On/g' /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting ServerAdmin to: $ADMIN_EMAIL"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i "s/ServerAdmin root@localhost/ServerAdmin $ADMIN_EMAIL/g" /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting ServerName to: $IP_ADDR:80"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i "s/#ServerName www.example.com:80/ServerName $IP_ADDR:80/g" /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting AllowOverride to All"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i 's/AllowOverride None/AllowOverride All/g' /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Defining DirectoryIndex"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i 's/DirectoryIndex index.html index.html.var/DirectoryIndex index.html index.htm/g' /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting ServerSignature to Off"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i 's/ServerSignature On/ServerSignature Off/g' /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Removing AddDefaultCharset"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which sed) -i 's/AddDefaultCharset UTF-8/#AddDefaultCharset UTF-8/g' /etc/httpd/conf/httpd.conf
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Starting apache service"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which service) httpd start
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting apache to run at startup"
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which chkconfig) httpd on
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Creating html test page"
                                sleep 1
                                update_spinner
                                sleep 1
                                echo "<html>" >> /var/www/html/index.html
                                echo "<body>" >> /var/www/html/index.html
                                echo "<div style='width: 100%; font-size: 40px; font-weight: bold; text-align: center;'>" >> /var/www/html/index.html
                                echo "Test Page for apache on: $(hostname)" >> /var/www/html/index.html
                                echo "</div>" >> /var/www/html/index.html
                                echo "</body>" >> /var/www/html/index.html
                                echo "</html>" >> /var/www/html/index.html
                                clear
                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                echo "[$(date)] Successfuly installed apache www server on: $(hostname)" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/success.log | tail -n 7
                                echo
                                echo
                                echo "Apache has been [$(date)] Successfuly installed: goto: http://$(hostname)"
                                read -p "Press [enter] to continue..." ReadDamKey
                                if [ "$ansPerl" = "Y" ]; then
                                      clear
                                      echo "       COMMAND STATUS         "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no      "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                      echo "Command run: $(which yum) -y install perl perl-CGI | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which service) httpd restart"
                                      echo "Command run: $(which chmod) 705 /var/www/html/index.cgi"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing packages: perl and perl-CGI"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install perl perl-CGI | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
                                           echo "##############################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly installed perl on system: $(hostname)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which yum) -y install perl perl-CGI | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "##############################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "##############################################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not installed perl on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which yum) -y install perl perl-CGI | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "##############################################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Adding ExecCGI to Options"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/Options Indexes FollowSymLinks/Options FollowSymLinks ExecCGI/g' /etc/httpd/conf/httpd.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Adding index.cgi to DirectoryIndex"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/DirectoryIndex index.html index.htm/DirectoryIndex index.html index.htm index.cgi/g' /etc/httpd/conf/httpd.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Enabling AddHandler for cgi-script"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/#AddHandler cgi-script .cgi/AddHandler cgi-script .cgi/g' /etc/httpd/conf/httpd.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting apache web server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) httpd restart
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating perl test page"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "#!/usr/bin/env perl" >> /var/www/html/index.cgi
                                      echo "" >> /var/www/html/index.cgi
                                      echo "print 'Content-type: text/html\n\n';" >> /var/www/html/index.cgi
                                      echo "print '<html>\n</html>\n';" >> /var/www/html/index.cgi
                                      echo "print '<div style=\'width: 100%; font-size: 40px; font-weight: bold; text-align: center;\'>';" >> /var/www/html/index.cgi
                                      echo "print 'CGI Test Page for server: $(hostname)';" >> /var/www/html/index.cgi
                                      echo "print '\n</div>\n';" >> /var/www/html/index.cgi
                                      echo "print '</body>\n</html>\n';" >> /var/www/html/index.html
                                      $(which chmod) 705 /var/www/html/index.cgi
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly installed perl on system: $(hostname)" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      echo
                                      echo "Perl has Successfuly installed, goto: http://$(hostname)/index.cgi"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                else
                                      echo "Perl will not be installed on this system..."
                                      read -p "Press [enter] to continue..." ReadDamKey
                                fi
                                if [ "$ansPhp" = "Y" ]; then
                                      clear
                                      echo "        COMMAND STATUS         "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "Command run: $(which yum) -y install php php-mbstring php-pear | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which service) httpd restart"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing packages: php php-mbstring php-pear"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install php php-mbstring php-pear | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
                                           echo "##########################################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly installed php on system: $(hostname)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which yum) -y install php php-mbstring php-pear | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "##########################################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "##########################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not installed php on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which yum) -y install php php-mbstring php-pear | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "##########################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           exit 1
                                      fi
                                      if [ "$ansPerl" = "Y" ]; then
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Setting DirectoryIndex to use .php and .cgi pages"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which sed) -i 's/DirectoryIndex index.html index.htm index.cgi/DirectoryIndex index.html index.htm index.cgi index.php/g' /etc/httpd/conf/httpd.conf
                                      else
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Setting DirectoryIndex to use .php pages"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which sed) -i 's/DirectoryIndex index.html index.htm/DirectoryIndex index.html index.htm index.php/g' /etc/httpd/conf/httpd.conf
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting apache web server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) httpd restart
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating php test page"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1 
                                      echo "<html>" >> /var/www/html/index.php
                                      echo "<body>" >> /var/www/html/index.php
                                      echo "<div style='width: 100%; font-size: 40px: font-weight: bold: text-align: center;'>" >> /var/www/html/index.php
                                      echo "<?php" >> /var/www/html/index.php
                                      echo "print Date('Y/m/d');" >> /var/www/html/index.php
                                      echo "?>" >> /var/www/html/index.php
                                      echo "</div>" >> /var/www/html/index.php
                                      echo "</body>" >> /var/www/html/index.php
                                      echo "</html>" >> /var/www/html/index.php
                                      echo "################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly installed php on system: $(hostname)" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      echo
                                      echo "PHP has been Successfuly installed on system, goto: http://$(hostname)/index.php"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                else
                                      echo "PHP not installed on system: $(hostname)..."
                                      read -p "Press [enter] to continue..." ReadDamKey
                                fi
                                if [ "$ansSsl" = "Y" ]; then
                                      clear
                                      echo "         COMMAND STATUS        "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which make)                        bos.sysmgt.make         exec"
                                      echo "$(which openssl)                     bos.sysmgt.openssl      exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "Command run: $(which make) server.key"
                                      echo "Command run: $(which openssl) rsa -in server.key -out server.key"
                                      echo "Command run: $(which make) server.csr"
                                      echo "Command run: $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999"
                                      echo "Command run: $(which chmod) 400 server.*"
                                      echo "Command run: $(which yum) -y install mod_ssl | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which service) httpd restart"
                                      sleep 2
                                      clear
                                      cd /etc/pki/tls/certs
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating server.key"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which make) server.key
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Removing password from: server.key"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which openssl) rsa -in server.key -out server.key
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating new certificate: server.csr"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which make) server.csr
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating self-signed certificate from file: server.csr to: server.crt"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Changing executuction modes on files: server.* to: 400"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chmod) 400 server.*
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing package: mod_ssl"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install mod_ssl | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
                                           echo "########################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly installed ssl on system: $(hostname)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which yum) -y install mod_ssl | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "########################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "########################################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not installed ssl on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which yum) -y install mod_ssl | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "##############################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Enabling DocumentRoot in: /etc/httpd/conf.d/ssl.conf"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/#DocumentRoot/DocumentRoot/g' /etc/httpd/conf.d/ssl.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting ServerName to: $IP_ADDR:443"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i "s/#ServerName www.example.com:443/ServerName $IP_ADDR:443/g" /etc/httpd/conf.d/ssl.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining certificate to: /etc/pki/tls/certs/server.crt"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's,etc/pki/tls/certs/localhost.crt,etc/pki/tls/certs/server.crt,g' /etc/httpd/conf.d/ssl.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining key to: /etc/pki/tls/certs/server.key"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's,etc/pki/tls/private/localhost.key,etc/pki/tls/certs/server.key,g' /etc/httpd/conf.d/ssl.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting apache server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) httpd restart
                                      echo "####################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly installed ssl on system: $(hostname)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which yum) -y install mod_ssl | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "####################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      echo
                                      echo "SSL has been Successfuly installed on system, goto: https://$(hostname)/index.html"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                else
                                      echo "SSL not installed on system..."
                                      read -p "Press [enter] to continue..." ReadDamKey
                                fi
                           else
                                clear
                                cat /proc/version | grep "Debian" >> /dev/null
                                if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "[TOP]                                                                                                        [Entry Fields]"
                                     printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] ---------------------- > "
                                     if [ "$netIntf" = "" ]; then
                                           NETINTF=""
                                           read netIntf
                                           NETINTF=$netIntf
                                     fi
                                     if [ "$netIntf" = "" ]; then
                                           NETINTF=""
                                           NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                     fi          
                                     printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] ------------ > "
                                     if [ "$ipAddr" = "" ]; then
                                           IP_ADDR=""
                                           read ipAddr
                                           IP_ADDR=$ipAddr
                                     fi
                                     if [ "$ipAddr" = "" ]; then
                                           IP_ADDR=""
                                           IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                     fi          
                                     printf " Enter admin email [root@localhost] ----------------------------------------------------------------------- > "
                                     if [ "$adminEmail" = "" ]; then
                                           ADMIN_EMAIL=""
                                           read adminEmail
                                           ADMIN_EMAIL=$adminEmail
                                     fi
                                     if [ "$adminEmail" = "" ]; then
                                           ADMIN_EMAIL=""
                                           ADMIN_EMAIL=root@localhost
                                     fi        
                                     read -p " Use Perl ------------------------------------------------------------------------------------------ (Y/N) > " ansPerl
                                     read -p " Use PHP ------------------------------------------------------------------------------------------- (Y/N) > " ansPhp
                                     read -p " Use SSL ------------------------------------------------------------------------------------------- (Y/N) > " ansSsl
                                     clear
                                     echo "        COMMAND STATUS         "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                     echo "$(which sed)                         bos.sysmgt.sed          exec"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which apt-get) -y install apache2 | $(which tee) /var/log/smx-log/apt-get.log"
                                     echo "Command run: $(which service) apache2 start"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing apache web server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which apt-get) -y install apache2 | $(which tee) /var/log/smx-log/apt-get.log
                                     if [ $PIPESTATUS -eq 0 ]; then
                                          echo "#######################################################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly installed apache2 on system: $(hostname)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(apt-get) install apache2 | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "#######################################################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "################################################################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Not installed apache2 on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which apt-get) -y install apache2 | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "################################################################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          exit 1
                                     fi
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Changing ServerTokens to Prod"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     $(which sed) -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/apache2/conf.d/security
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting ServerSignature to Off"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     $(which sed) -i 's/ServerSignature On/ServerSignature Off/g' /etc/apache2/conf.d/security
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting ServerAdmin to: $ADMIN_EMAIL"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     $(which sed) -i "s/ServerAdmin webmaster@localhost/ServerAdmin $ADMIN_EMAIL/g" /etc/apache2/sites-available/default
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Removing Indexes from Options"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which sed) -i 's/Options Indexes FollowSymLinks MultiViews/Options FollowSymLinks MultiViews/g' /etc/apache2/sites-available/default
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Enabling AllowOverride"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which sed) -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/sites-available/default
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting ServerName to: $IP_ADDR"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "ServerName $IP_ADDR" >> /etc/apache2/apache2.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Starting apache web server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) apache2 start
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Creating html test page"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which rm) /var/www/index.html
                                     echo "<html>" >> /var/www/index.html
                                     echo "<body>" >> /var/www/index.html
                                     echo "<div style='width: 100%; font-size: 40px; font-weight: bold; text-align: center;'>" >> /var/www/index.html
                                     echo "Test Page for apache on: $(hostname)" >> /var/www/index.html
                                     echo "</div>" >> /var/www/index.html
                                     echo "</body>" >> /var/www/index.html
                                     echo "</html>" >> /var/www/index.html
                                     echo "###################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly installed apache on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(apt-get) install apache2 | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "###################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     echo "Apache Successfuly installed on system, goto: http://$(hostname)/index.html"
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     if [ "$ansPerl" = "Y" ]; then
                                           clear
                                           echo "     COMMAND STATUS       "
                                           echo
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo
                                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                                           echo
                                           echo "Before command completion, additional instructions may appear below"
                                           echo
                                           echo "File                                 Fileset                 Type"
                                           echo "-----------------------------------------------------------------"
                                           echo "$(which sed)                         bos.sysmgt.sed          exec"
                                           echo "$(which ln)                          bos.sysmgt.ln           exec"
                                           echo "$(which service)                     bos.sysmgt.service      exec"
                                           echo "[$(date)] Command run: $(which ln) -s /usr/bin/perl /usr/local/bin/perl"
                                           echo "[$(date)] Command run: $(which service) apache2 restart"
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Adding .cgi and .pl to AddHandler"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which sed) -i 's/#AddHandler cgi-script/AddHandler .cgi .pl' /etc/apache2/mods-enabled/mime.conf
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Adding ExecCGI to Options"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which sed) -i 's/Options FollowSymLinks MultiViews/Options FollowSymLinks MultiViews ExecCGI/g' /etc/apache2/sites-available/default
                                           $(which ln) -s /usr/bin/perl /usr/local/bin/perl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting apache"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which service) apache2 restart
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Creating perl test page"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          echo "#!/usr/local/bin/perl" >> /var/www/html/index.cgi
                                          echo "" >> /var/www/html/index.cgi
                                          echo "print 'Content-type: text/html\n\n';" >> /var/www/index.cgi
                                          echo "print '<html>\n</html>\n';" >> /var/www/index.cgi
                                          echo "print '<div style=\'width: 100%; font-size: 40px; font-weight: bold; text-align: center;\'>';" >> /var/www/index.cgi
                                          echo "print 'CGI Test Page for server: $(hostname)';" >> /var/www/index.cgi
                                          echo "print '\n</div>\n';" >> /var/www/index.cgi
                                          echo "print '</body>\n</html>\n';" >> /var/www/index.html
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly installed perl on system: $(hostname)" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          echo "Successfuly installed perl on system, goto: http://$(hostname)/index.cgi"
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                          echo "Perl not installed on system..."
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                                    if [ "$ansPhp" = "Y" ]; then
                                          clear
                                          echo "      COMMAND STATUS        "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stder: no      "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                          echo "$(which sed)                         bos.sysmgt.sed          exec"
                                          echo "$(which service)                     bos.sysmgt.service      exec"
                                          echo "Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log"
                                          echo "Command run: $(which service) apache2 restart"
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Installing packages: libapache2-mod-php5 php5-common php-pear"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log
                                          if [ $PIPESTATUS -eq 0 ]; then
                                               echo "###############################################################################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed php on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "###############################################################################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          else
                                               echo "###############################################################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not installed php on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "###############################################################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
                                          fi
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Adding AddHandler php5-script .php to /etc/apache2/mods-enabled/mime.conf"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          echo "AddHandler php5-script .php" >> /etc/apache2/mods-enabled/mime.conf
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting apache2"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which service) apache2 restart
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Creating test php page"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          echo "<html>" >> /var/www/index.php
                                          echo "<body>" >> /var/www/index.php
                                          echo "<div style='width: 100%; font-size: 40px: font-weight: bold: text-align: center;'>" >> /var/www/index.php
                                          echo "<?php" >> /var/www/index.php
                                          echo "print Date('Y/m/d');" >> /var/www/index.php
                                          echo "?>" >> /var/www/index.php
                                          echo "</div>" >> /var/www/index.php
                                          echo "</body>" >> /var/www/index.php
                                          echo "</html>" >> /var/www/index.php
                                          echo "###################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly installed apache on system: $(hostname)" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "###################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          echo
                                          echo "PHP has been Successfuly installed on system, goto: http://$(hostname)/index.php"
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                          echo "PHP not installed on system..."
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                                    if [ "$ansSsl" = "Y" ]; then
                                          clear
                                          echo "       COMMAND STATUS          "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which openssl)                     bos.sysmgt.openssl      exec"
                                          echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                          echo "$(which sed)                         bos.sysmgt.sed          exec"
                                          echo "$(which a2ensite)                    bos.sysmgt.a2ensite     exec"
                                          echo "$(which a2enmod)                     bos.sysmgt.a2enmod      exec"
                                          echo "$(which service)                     bos.sysmgt.service      exec"
                                          echo "Command run: $(which openssl) genrsa -des3 -out server.key 1024"
                                          echo "Command run: $(which openssl) rsa -in server.key -out server.key"
                                          echo "Command run: $(which openssl) req -new -days 9999 -key server.key -out server.csr"
                                          echo "Command run: $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999"
                                          echo "Command run: $(which chmod) 400 server.*"
                                          echo "Command run: $(which a2ensite) default-ssl"
                                          echo "Command run: $(which a2enmod) ssl"
                                          echo "Command run: $(which service) apache2 restart"
                                          sleep 2
                                          clear
                                          cd /etc/ssl/certs
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Creating server.key"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which openssl) genrsa -des3 -out server.key 1024
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Removing password from server.key"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which openssl) rsa -in server.key -out server.key
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Creating server.csr"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which openssl) req -new -days 9999 -key server.key -out server.csr
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Creating server.crt"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999
                                          $(which chmod) 400 server.*
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Setting ServerAdmin to: $ADMIN_EMAIL"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which sed) -i "s/ServerAdmin webmaster@localhost/ServerAdmin $ADMIN_EMAIL/g" /etc/apache2/sites-available/default-ssl
                                          update_spinner
                                          sleep 1
                                          echo "Adding ExecCGI to Options"
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which sed) -i 's/Options Indexes FollowSymLinks MultiViews/Options FollowSymLinks ExecCGI/g' /etc/apache2/sites-available/default-ssl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Enabling AllowOverride"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which sed) -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/sites-available/default-ssl
                                          $(which sed) -i 's/SSLCertificateFile/#SSLCertificateFile' /etc/apache2/sites-available/default-ssl
                                          $(which sed) -i 's/SSLCertificateKeyFile/#SSLCertificateKeyFile' /etc/apache2/sites-available/default-ssl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Setting SSLCertificateFile to: /etc/ssl/certs/server.crt"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          echo "SSLCertificateFile /etc/ssl/certs/server.crt" >> /etc/apache2/sites-available/default-ssl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Setting SSLCertificateKeyFile to: /etc/ssl/certs/server.key"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          echo "SSLCertificateKeyFile /etc/ssl/certs/server.key" >> /etc/apache2/sites-available/default-ssl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Enabling default-ssl"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which a2ensite) default-ssl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Enabling ssl"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which a2enmod) ssl
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting apache2"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which service) apache2 restart
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "Successfuly installed SSL on system: $(hostname)" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          echo
                                          echo "Successfuly installed SSL on system. goto: https://$(hostname)/index.html"
                                    else
                                          echo "SSL not installed on system..."
                                          read -p "Press [enter] to continue..." ReadDamKey
                                    fi
			        else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo "[TOP]                                                                                                        [Entry Fields]"
                                         printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] ---------------------- > "
                                         if [ "$netIntf" = "" ]; then
                                               NETINTF=""
                                               read netIntf
                                               NETINTF=$netIntf
                                         fi
                                         if [ "$netIntf" = "" ]; then
                                               NETINTF=""
                                               NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                         fi
                                         printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] ------------ > "
                                         if [ "$ipAddr" = "" ]; then
                                               IP_ADDR=""
                                               read ipAddr
                                               IP_ADDR=$ipAddr
                                         fi
                                         if [ "$ipAddr" = "" ]; then
                                               IP_ADDR=""
                                               IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                         fi          
                                         printf " Enter admin email [root@localhost] ----------------------------------------------------------------------- > "
                                         if [ "$adminEmail" = "" ]; then
                                               ADMIN_EMAIL=""
                                               read adminEmail
                                               ADMIN_EMAIL=$adminEmail
                                         fi
                                         if [ "$adminEmail" = "" ]; then
                                               ADMIN_EMAIL=""
                                               ADMIN_EMAIL=root@localhost
                                         fi        
                                         read -p " Use Perl ------------------------------------------------------------------------------------------ (Y/N) > " ansPerl
                                         read -p " Use PHP ------------------------------------------------------------------------------------------- (Y/N) > " ansPhp
                                         read -p " Use SSL ------------------------------------------------------------------------------------------- (Y/N) > " ansSsl
                                         clear
                                         echo "        COMMAND STATUS         "
                                         echo
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                 Type"
                                         echo "-----------------------------------------------------------------"
                                         echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                         echo "$(which sed)                         bos.sysmgt.sed          exec"
                                         echo "$(which service)                     bos.sysmgt.service      exec"
                                         echo "Command run: $(which apt-get) -y install apache2 | $(which tee) /var/log/smx-log/apt-get.log"
                                         echo "Command run: $(which service) apache2 start"
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         echo "Installing package: apache2"
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which apt-get) -y install apache2 | $(which tee) /var/log/smx-log/apt-get.log
                                         if [ $PIPESTATUS -eq 0 ]; then
                                              echo "#######################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly installed apache2 on system: $(hostname)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(apt-get) install apache2 | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "#######################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Not installed apache2 on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-get) -y install apache2 | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              exit 1
                                         fi
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting ServerTokens to: Prod"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which sed) -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/apache2/conf.d/security
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting ServerSignature to: Off"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which sed) -i 's/ServerSignature On/ServerSignature Off/g' /etc/apache2/conf.d/security
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting ServerAdmin to: $ADMIN_EMAIL"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which sed) -i "s/ServerAdmin webmaster@localhost/ServerAdmin $ADMIN_EMAIL/g" /etc/apache2/sites-available/default
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Removing Indexes from Options"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which sed) -i 's/Options Indexes FollowSymLinks MultiViews/Options FollowSymLinks MultiViews/g' /etc/apache2/sites-available/default
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting AllowOverride to: All"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which sed) -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/sites-available/default
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting ServerName to: $IP_ADDR"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         echo "ServerName $IP_ADDR" >> /etc/apache2/apache2.conf
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Starting apache2"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which service) apache2 start
                                         $(which rm) /var/www/index.html
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Creating test html page"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         echo "<html>" >> /var/www/index.html
                                         echo "<body>" >> /var/www/index.html
                                         echo "<div style='width: 100%; font-size: 40px; font-weight: bold; text-align: center;'>" >> /var/www/index.html
                                         echo "Test Page for apache on: $(hostname)" >> /var/www/index.html
                                         echo "</div>" >> /var/www/index.html
                                         echo "</body>" >> /var/www/index.html
                                         echo "</html>" >> /var/www/index.html
                                         echo "###################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly installed apache on system: $(hostname)" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "###################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         echo "Apache Successfuly installed on system, goto: http://$(hostname)/index.html"
                                         read -p "Press [enter] to continue..." ReadDamKey    
                                         if [ "$ansPerl" = "Y" ]; then
                                               clear
                                               echo "     COMMAND STATUS       "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which sed)                         bos.sysmgt.sed          exec"
                                               echo "$(which ln)                          bos.sysmgt.ln           exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which ln) -s /usr/bin/perl /usr/local/bin/perl"
                                               echo "Command run: $(which service) apache2 restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Changing AddHandler to .cgi .pl"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which sed) -i 's/#AddHandler cgi-script/AddHandler .cgi .pl' /etc/apache2/mods-enabled/mime.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Adding ExecCGI to Options"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which sed) -i 's/Options FollowSymLinks MultiViews/Options FollowSymLinks MultiViews ExecCGI/g' /etc/apache2/sites-available/default
                                               $(which ln) -s /usr/bin/perl /usr/local/bin/perl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting apache2"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) apache2 restart
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Creating perl test page"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "#!/usr/local/bin/perl" >> /var/www/html/index.cgi
                                               echo "" >> /var/www/html/index.cgi
                                               echo "print 'Content-type: text/html\n\n';" >> /var/www/index.cgi
                                               echo "print '<html>\n</html>\n';" >> /var/www/index.cgi
                                               echo "print '<div style=\'width: 100%; font-size: 40px; font-weight: bold; text-align: center;\'>';" >> /var/www/index.cgi
                                               echo "print 'CGI Test Page for server: $(hostname)';" >> /var/www/index.cgi
                                               echo "print '\n</div>\n';" >> /var/www/index.cgi
                                               echo "print '</body>\n</html>\n';" >> /var/www/index.html
					       echo "############################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed perl on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
					       echo "###########################################################" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               echo "Successfuly installed perl on system, goto: http://$(hostname)/index.cgi"
                                               read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                               echo "Perl not installed on system..."
                                               read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                         if [ "$ansPhp" = "Y" ]; then
                                               clear
                                               echo "      COMMAND STATUS        "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stder: no      "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                               echo "$(which sed)                         bos.sysmgt.sed          exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log"
                                               echo "Command run: $(which service) apache2 restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Installing package: php5 php5-cgi libapache2-mod-php5 php5-common php-pear"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log
                                               if [ $PIPESTATUS -eq 0 ]; then
                                                    echo "###############################################################################################################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly installed php on system: $(hostname)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "###############################################################################################################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               else
                                                    echo "###############################################################################################################################################" >> /var/log/smx-log/fail.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Not installed php on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    echo "###############################################################################################################################################" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/fail.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    exit 1
                                               fi
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Adding AddHandler php5-script .php to: /etc/apache2/mods-enabled/mime.conf"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "AddHandler php5-script .php" >> /etc/apache2/mods-enabled/mime.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting apache2"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) apache2 restart
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Creating php test page"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "<html>" >> /var/www/index.php
                                               echo "<body>" >> /var/www/index.php
                                               echo "<div style='width: 100%; font-size: 40px: font-weight: bold: text-align: center;'>" >> /var/www/index.php
                                               echo "<?php" >> /var/www/index.php
                                               echo "print Date('Y/m/d');" >> /var/www/index.php
                                               echo "?>" >> /var/www/index.php
                                               echo "</div>" >> /var/www/index.php
                                               echo "</body>" >> /var/www/index.php
                                               echo "</html>" >> /var/www/index.php
                                               echo "###################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed apache on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install php5 php5-cgi libapache2-mod-php5 php5-common php-pear | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "###################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               echo
                                               echo "PHP has been Successfuly installed on system, goto: http://$(hostname)/index.php"
                                               read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                               echo "PHP not installed on system..."
                                               read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                         if [ "$ansSsl" = "Y" ]; then
                                               clear
                                               echo "       COMMAND STATUS          "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which openssl)                     bos.sysmgt.openssl      exec"
                                               echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                               echo "$(which sed)                         bos.sysmgt.sed          exec"
                                               echo "$(which a2ensite)                    bos.sysmgt.a2ensite     exec"
                                               echo "$(which a2enmod)                     bos.sysmgt.a2enmod      exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which openssl) genrsa -des3 -out server.key 1024"
                                               echo "Command run: $(which openssl) rsa -in server.key -out server.key"
                                               echo "Command run: $(which openssl) req -new -days 9999 -key server.key -out server.csr"
                                               echo "Command run: $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999"
                                               echo "Command run: $(which chmod) 400 server.*"
                                               echo "Command run: $(which a2ensite) default-ssl"
                                               echo "Command run: $(which a2enmod) ssl"
                                               echo "Command run: $(which service) apache2 restart"
                                               sleep 2
                                               clear
                                               cd /etc/ssl/certs
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Creating server.key"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which openssl) genrsa -des3 -out server.key 1024
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Removing password from server.key"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which openssl) rsa -in server.key -out server.key
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Creating server.csr"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which openssl) req -new -days 9999 -key server.key -out server.csr
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Creating certificate request"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999
                                               $(which chmod) 400 server.*
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting ServerAdmin to: $ADMIN_EMAIL"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which sed) -i "s/ServerAdmin webmaster@localhost/ServerAdmin $ADMIN_EMAIL/g" /etc/apache2/sites-available/default-ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Adding ExecCGI and removing Indexes and MultiViews from Options"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which sed) -i 's/Options Indexes FollowSymLinks MultiViews/Options FollowSymLinks ExecCGI/g' /etc/apache2/sites-available/default-ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting AllowOverride to All"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which sed) -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/sites-available/default-ssl
                                               $(which sed) -i 's/SSLCertificateFile/#SSLCertificateFile' /etc/apache2/sites-available/default-ssl
                                               $(which sed) -i 's/SSLCertificateKeyFile/#SSLCertificateKeyFile' /etc/apache2/sites-available/default-ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting SSLCertificateFile to: /etc/ssl/certs/server.crt"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "SSLCertificateFile /etc/ssl/certs/server.crt" >> /etc/apache2/sites-available/default-ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting SSLCertificateKeyFile to: /etc/ssl/certs/server.key"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "SSLCertificateKeyFile /etc/ssl/certs/server.key" >> /etc/apache2/sites-available/default-ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Enabling default-ssl"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which a2ensite) default-ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Enabling ssl"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which a2enmod) ssl
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting apache2"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) apache2 restart
                                               echo "################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed SSL on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               echo
                                               echo "Successfuly installed SSL on system. goto: https://$(hostname)/index.html"
                                         else 
                                               echo "SSL not installed on system..."
                                               read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo "[TOP]                                                                                                     [Entry Fields]"
                                              printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] ------------------- > "
                                              if [ "$netIntf" = "" ]; then
                                                    NETINTF=""
                                                    read netIntf
                                                    NETINTF=$netIntf
                                              fi
                                              if [ "$netIntf" = "" ]; then
                                                    NETINTF=""
                                                    NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                              fi            
                                              printf " Enter admin email [root@localhost] -------------------------------------------------------------------- > "
                                              if [ "$adminEmail" = "" ]; then
                                                    ADMIN_EMAIL=""
                                                    read adminEmail
                                                    ADMIN_EMAIL=$adminEmail
                                              fi
                                              if [ "$adminEmail" = "" ]; then
                                                    ADMIN_EMAIL=""
                                                    ADMIN_EMAIL=root@localhost
                                              fi          
                                              printf " Enter server ip address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] --------- > "
                                              if [ "$ipAddr" = "" ]; then
                                                    IP_ADDR=""
                                                    read ipAddr
                                                    IP_ADDR=$ipAddr
                                              fi
                                              if [ "$ipAddr" = "" ]; then
                                                    IP_ADDR=""
                                                    IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                              fi         
                                              read -p " Use Perl --------------------------------------------------------------------------------------- (Y/N) > " ansPerl
                                              read -p " Use PHP ---------------------------------------------------------------------------------------- (Y/N) > " ansPhp
                                              read -p " Use SSL ---------------------------------------------------------------------------------------- (Y/N) > " ansSsl
                                              clear
                                              echo "        COMMAND STATUS                  "
                                              echo
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                              echo "$(which sed)                         bos.sysmgt.sed          exec"
                                              echo "$(which service)                     bos.sysmgt.service      exec"
                                              echo "Command run: $(which zypper) in -y apache2 | $(which tee) /var/log/smx-log/zypper.log"
                                              echo "Command run: $(which service) apache2 start"
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Installing package: apache2"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which zypper) in -y apache2 | $(which tee) /var/log/smx-log/zypper.log
                                              if [ $PIPESTATUS -eq 0 ]; then
                                                   clear
                                                   echo "#########################################################################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly installed apache on system: $(hostname)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) in -y apache2 | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "#########################################################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   clear
                                                   echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Not installed apache on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) in -y apache2 | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "#########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue.." ReadDamKey
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   exit 1
                                              fi
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting ServerSignature to: off"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/ServerSignature on/ServerSignature off/g' /etc/apache2/sysconfig.d/global.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting ServerTokens to: Prod"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/apache2/sysconfig.d/global.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting Options to: FollowSymLinks"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/Options None/Options FollowSymLinks/g' /etc/apache2/default-server.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting AllowOverride to All"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/default-server.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting ServerName to: $IP_ADDR"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              echo "ServerName $IP_ADDR" >> /etc/apache2/default-server.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting ServerAdmin: $ADMIN_EMAIL"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              echo "ServerAdmin $ADMIN_EMAIL" >> /etc/apache2/default-server.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting DirectoryIndex to: index.html"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/DirectoryIndex index.html index.html.var/DirectoryIndex index.html/g' /etc/apache2/httpd.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting AllowOverride to: All"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/AllowOverride FileInfo AuthConfig Limit Indexes/AllowOverride All/g' /etc/apache2/mod_userdir.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting Options to: FollowSymLinks"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which sed) -i 's/Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec/Options FollowSymLinks/g' /etc/apache2/mod_userdir.conf
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Starting apache2"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which service) apache2 start
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Creating test html page"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              echo "<html>" >> /srv/www/htdocs/index.html
                                              echo "<body>" >> /srv/www/htdocs/index.html
                                              echo "<div style='width: 100%; font-size: 40px; font-weight: bold; text-align: center;'>" >> /srv/www/htdocs/index.html
                                              echo "Test Page for apache on: $(hostname)" >> /srv/www/htdocs/index.html
                                              echo "</div>" >> /srv/www/htdocs/index.html
                                              echo "</body>" >> /srv/www/htdocs/index.html
                                              echo "</html>" >> /srv/www/htdocs/index.html
                                              clear
                                              echo
                                              echo "Apache has been Successfuly install on system, goto: http://$(hostname)/index.html"
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              if [ "$ansPerl" = "Y" ]; then
                                                    clear
                                                    echo "       COMMAND STATUS        "
                                                    echo
                                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                                    echo
                                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                    echo
                                                    echo "Before command completion, additional instructions may appear below"
                                                    echo
                                                    echo "File                                 Fileset                 Type"
                                                    echo "-----------------------------------------------------------------"
                                                    echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                    echo "$(which sed)                         bos.sysmgt.sed          exec"
                                                    echo "$(which ln)                          bos.sysmgt.ln           exec"
                                                    echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                                    echo "$(which service)                     bos.sysmgt.service      exec"
                                                    echo "Command run: $(which zypper) in -y apache2-mod_perl | $(which tee) /var/log/smx-log/zypper.log"
                                                    echo "Command run: $(which ln) -s /usr/bin/perl /usr/local/bin/perl"
                                                    echo "Command run: $(which chmod) 705 /srv/www/htdocs/index.cgi"
                                                    echo "$(which service) apache2 restart"
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    echo "Installing package: apache2-mod_perl"
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which zypper) in -y apache2-mod_perl | $(which tee) /var/log/smx-log/zypper.log
                                                    if [ $PIPESTATUS -eq 0 ]; then
                                                         echo "##################################################################################################" >> /var/log/smx-log/success.log
                                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                         echo "[$(date)] Successfuly installed perl on system: $(hostname)" >> /var/log/smx-log/success.log
                                                         echo "[$(date)] Command run: $(which zypper) in -y apache2-mod_perl | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                         echo "" >> /var/log/smx-log/success.log
                                                         echo "##################################################################################################" >> /var/log/smx-log/success.log
                                                         echo "" >> /var/log/smx-log/success.log
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         clear
                                                         echo
                                                         cat /var/log/smx-log/success.log | tail -n 7
                                                         echo
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                    else
                                                         echo "##################################################################################################" >> /var/log/smx-log/fail.log
                                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                         echo "[$(date)] Not installed perl on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                         echo "[$(date)] Command run: $(which zypper) in -y apache2-mod_perl | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                         echo "" >> /var/log/smx-log/fail.log
                                                         echo "##################################################################################################" >> /var/log/smx-log/fail.log
                                                         echo "" >> /var/log/smx-log/fail.log
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         clear
                                                         echo
                                                         cat /var/log/smx-log/fail.log | tail -n 7
                                                         echo
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         exit 1
                                                    fi
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting Options to: ExecCGI"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which sed) -i 's/Options FollowSymLinks/Options FollowSymLinks ExecCGI/g' /etc/apache2/default-server.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting DirectoryIndex to: index.html and index.cgi"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which sed) -i 's/DirectoryIndex index.html/DirectoryIndex index.html index.cgi/g' /etc/apache2/httpd.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting AddHandler to: cgi-script .cgi .pl"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    echo "AddHandler cgi-script .cgi .pl" >> /etc/apache2/mod_mime-defaults.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting Options to: ExecCGI"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which sed) -i 's/Options FollowSymLinks/Options FollowSymLinks ExecCGI/g' /etc/apache2/mod_userdir.conf
                                                    $(which ln) -s /usr/bin/perl /usr/local/bin/perl
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Creating test perl page"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    echo "#!/usr/local/bin/perl" >> /srv/www/htdocs/index.cgi
                                                    echo "" >> /srv/www/htdocs/index.cgi
                                                    echo "print 'Content-type: text/html\n\n';" >> /srv/www/htdocs/index.cgi
                                                    echo "print '<html>\n</html>\n';" >> /srv/www/htdocs/index.cgi
                                                    echo "print '<div style=\'width: 100%; font-size: 40px; font-weight: bold; text-align: center;\'>';" >> /srv/www/htdocs/index.cgi
                                                    echo "print 'CGI Test Page for server: $(hostname)';" >> /srv/www/htdocs/index.cgi
                                                    echo "print '\n</div>\n';" >> /srv/www/htdocs/index.cgi
                                                    echo "print '</body>\n</html>\n';" >> /srv/www/htdocs/index.cgi
                                                    $(which chmod) 705 /srv/www/htdocs/index.cgi
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Restarting apache2"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which service) apache2 restart
                                                    clear
                                                    echo "##############################################################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly installed perl on system: $(hostname)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which zypper) in -y apache2-mod_perl | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "##############################################################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    echo "Perl has been Successfuly installed on system, goto: http://$(hostname)/index.cgi"
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                    echo "Perl not installed on system..."
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                              fi
                                              if [ "$ansPhp" = "Y" ]; then
                                                    clear
                                                    echo "       COMMAND STATUS        "
                                                    echo
                                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                                    echo
                                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                    echo
                                                    echo "Before command completion, additional instructions may appear below"
                                                    echo
                                                    echo "File                                 Fileset                 Type"
                                                    echo "-----------------------------------------------------------------"
                                                    echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                    echo "$(which sed)                         bos.sysmgt.sed          exec"
                                                    echo "$(which a2enmod)                     bos.sysmgt.a2enmod      exec"
                                                    echo "$(which service)                     bos.sysmgt.service      exec"
                                                    echo "Command run: $(which zypper) in -y apache2-mod_php5 php5 php5-mbstring php5-pear | $(which tee) /var/log/smx-log/zypper.log"
                                                    echo "Command run: $(which a2enmod) php5"
                                                    echo "Command run: $(which service) apache2 restart"
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Installing packages: apache2-mod_php5 php5 php5-mbstring php5-pear"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which zypper) in -y apache2-mod_php5 php5 php5-mbstring php5-pear | $(which tee) /var/log/smx-log/zypper.log
                                                    if [ $PIPESTATUS -eq 0 ]; then
                                                         echo "###############################################################################################################################" >> /var/log/smx-log/success.log
                                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                         echo "[$(date)] Successfuly installed php on system: $(hostname)" >> /var/log/smx-log/success.log
                                                         echo "[$(date)] Command run: $(which zypper) in -y apache2-mod_php5 php5 php5-mbstring php5-pear | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                         echo "" >> /var/log/smx-log/success.log
                                                         echo "###############################################################################################################################" >> /var/log/smx-log/success.log
                                                         echo "" >> /var/log/smx-log/success.log
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         clear
                                                         echo
                                                         cat /var/log/smx-log/success.log | tail -n 7
                                                         echo
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                    else
                                                         echo "###############################################################################################################################" >> /var/log/smx-log/fail.log
                                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                         echo "[$(date)] Not installed php on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                         echo "[$(date)] Command run: $(which zypper) in -y apache2-mod_php5 php5 php5-mbstring php5-pear | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                         echo "" >> /var/log/smx-log/fail.log
                                                         echo "###############################################################################################################################" >> /var/log/smx-log/fail.log
                                                         echo "" >> /var/log/smx-log/fail.log
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         clear
                                                         echo
                                                         cat /var/log/smx-log/fail.log | tail -n 7
                                                         echo
                                                         read -p "Press [enter] to continue..." ReadDamKey
                                                         exit 1
                                                    fi
                                                    if [ "$ansPerl" = "Y" ]; then
                                                          update_spinner
                                                          sleep 1
                                                          update_spinner
                                                          echo "Setting DirectoryIndex to: index.html index.cgi index.php"
                                                          sleep 1
                                                          update_spinner
                                                          sleep 1
                                                          $(which sed) -i 's/DirectoryIndex index.html index.cgi/DirectoryIndex index.html index.cgi index.php/g' /etc/apache2/httpd.conf
                                                    else
                                                          update_spinner
                                                          sleep 1
                                                          update_spinner
                                                          echo "Setting DirectoryIndex to: index.html index.php"
                                                          sleep 1
                                                          update_spinner
                                                          sleep 1
                                                          $(which sed) -i 's/DirectoryIndex index.html/DirectoryIndex index.html index.php/g' /etc/apache2/httpd.conf
                                                    fi
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Enabling php5"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which a2enmod) php5
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Restarting apache2"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which service) apache2 restart
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Creating php test page"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    echo "<html>" >> /srv/www/htdocs/index.php
                                                    echo "<body>" >> /srv/www/htdocs/index.php
                                                    echo "<div style='width: 100%; font-size: 40px: font-weight: bold: text-align: center;'>" >> /srv/www/htdocs/index.php
                                                    echo "<?php" >> /srv/www/htdocs/index.php
                                                    echo "print Date('Y/m/d');" >> /srv/www/htdocs/index.php
                                                    echo "?>" >> /srv/www/htdocs/index.php
                                                    echo "</div>" >> /srv/www/htdocs/index.php
                                                    echo "</body>" >> /srv/www/htdocs/index.php
                                                    echo "</html>" >> /srv/www/htdocs/index.php
                                                    echo "######################################################################################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly installed php on system: $(hostname)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which zypper) in -y apache2-mod_php5 php5-mbstring php5-pear | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "######################################################################################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    echo
                                                    echo "Successfuly installed php on system, goto: http://$(hostname)/index.php"
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                    echo "PHP not installed on system..."
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                              fi
                                              if [ "$ansSsl" = "Y" ]; then
                                                    clear
                                                    echo "         COMMAND STATUS        "
                                                    echo
                                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                                    echo
                                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                    echo
                                                    echo "Before command completion, additional instructions may appear below"
                                                    echo
                                                    echo "File                                 Fileset                 Type"
                                                    echo "-----------------------------------------------------------------"
                                                    echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                                    echo "cd                                   bos.sysmgt.cd           exec"
                                                    echo "$(which openssl)                     bos.sysmgt.openssl      exec"
                                                    echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                                    echo "cp                                   bos.sysmgt.cp           exec"
                                                    echo "$(which sed)                         bos.sysmgt.sed          exec"
                                                    echo "$(which service)                     bos.sysmgt.service      exec"
                                                    echo "Command run: $(which mkdir) -p /etc/ssl/CA"
                                                    echo "Command run: cd /etc/ssl/CA"
                                                    echo "Command run: $(which openssl) genrsa -des3 -out server.key 1024"
                                                    echo "Command run: $(which openssl) rsa -in server.key -out server.key"
                                                    echo "Command run: $(which openssl) req -new -days 9999 -key server.key -out server.csr"
                                                    echo "Command run: $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999"
                                                    echo "Command run: $(which chmod) 400 server.*"
                                                    echo "Command run: $(which service) apache2 restart"
                                                    sleep 2
                                                    clear
                                                    $(which mkdir) -p /etc/ssl/CA
                                                    cd /etc/ssl/CA
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Creating server.key"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which openssl) genrsa -des3 -out server.key 1024
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Removing password from server.key"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which openssl) rsa -in server.key -out server.key
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Creating server.csr"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which openssl) req -new -days 9999 -key server.key -out server.csr
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Creating certificate request"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which openssl) x509 -in server.csr -out server.crt -req -signkey server.key -days 9999
                                                    $(which chmod) 400 server.*
                                                    $(which sed) -i 's/APACHE_SERVER_FLAGS/#APACHE_SERVER_FLAGS/g' /etc/sysconfig/apache2
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting apache to use SSL"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    echo 'APACHE_SERVER_FLAGS="SSL"' >> /etc/sysconfig/apache2
                                                    cp /etc/apache2/vhosts.d/vhost-ssl.template /etc/apache2/vhosts.d/vhost-ssl.conf
                                                    echo "Include /etc/apache2/conf.d/*.conf" >> /etc/apache2/default-server.conf
                                                    echo "Include /etc/apache2/vhosts.d/*.conf" >> /etc/apache2/default-server.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting ServerName to: $IP_ADDR:443"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which sed) -i "s/#ServerName www.example.com:443/ServerName $IP_ADDR:443/g" /etc/apache2/vhosts.d/vhost-ssl.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting SSLCertificateFile to: /etc/apache2/ssl.crt/server.crt"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which sed) -i 's,etc/apache2/ssl.crt/server.crt,etc/ssl/CA/server.crt,g' /etc/apache2/vhosts.d/vhost-ssl.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Setting SSLCertificateKeyFile to: /etc/apache2/ssl.key/server.key"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which sed) -i 's,etc/apache2/ssl.key/server.key,etc/ssl/CA/server.key,g' /etc/apache2/vhosts.d/vhost-ssl.conf
                                                    echo "NameVirtualHost *:443" >> /etc/apache2/httpd.conf
                                                    update_spinner
                                                    sleep 1
                                                    update_spinner
                                                    echo "Restarting apache2"
                                                    sleep 1
                                                    update_spinner
                                                    sleep 1
                                                    $(which service) apache2 restart
                                                    echo "#############################################################################################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly installed ssl on system: $(hostname)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which sed) -i 's,etc/apache2/ssl.crt/server.crt,etc/ssl/CA/server.crt,g' /etc/apache2/vhosts.d/vhost-ssl.conf" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which sed) -i 's,etc/apache2/ssl.key/server.key,etc/ssl/CA/server.key,g' /etc/apache2/vhosts.d/vhosts-ssl.conf" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "#############################################################################################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                    echo "SSL not installed on system..."
                                                    read -p "Press [enter] to continue..."
                                              fi  
                                         fi
                                    fi
                                fi
                           fi
                      else
                           $(which uname) | grep BSD >> /dev/nulll
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = BSD"
                		echo "$(date)                                     $(whoami)@$(hostname)"
                		echo "[TOP]                                     [Entry Fields]"
				printf " Enter network interface [en0] --------- > "
				if [ "$netIntf" = "" ]; then
				      NET_INTF=""
				      read netIntf
				      NET_INTF=$netIntf
				fi
				if [ "$netIntf" = "" ]; then
				      NET_INTF=""
				      NET_INTF=en0
				fi
                                printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] ------------ > "
                                if [ "$ipAddr" = "" ]; then
                                      IP_ADDR=""
                                      read ipAddr
                                      IP_ADDR=$ipAddr
                                fi
                                if [ "$ipAddr" = "" ]; then
                                      IP_ADDR=""
                                      IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                fi          
                                printf " Enter admin email [root@localhost] ----------------------------------------------------------------------- > "
                                if [ "$adminEmail" = "" ]; then
                                      ADMIN_EMAIL=""
                                      read adminEmail
                                      ADMIN_EMAIL=$adminEmail
                                fi
                                if [ "$adminEmail" = "" ]; then
                                      ADMIN_EMAIL=""
                                      ADMIN_EMAIL=root@localhost
                                fi
              			read -p "Use PHP -------------------------------------------------------------------------------------------- (Y/N) > " ansPhp
                  		read -p "Use SSL -------------------------------------------------------------------------------------------- (Y/N) > " ansSsl
                  		clear
                  		echo "      COMMAND STATUS                                    "
                  		echo
                  		echo "$(date)                                 $(whoami)@$(hostname)"
                  		echo
                  		echo "Command: RUNNING    stdout: yes    stderr: no "
                		echo
              			echo "Before command completion, additional instructions may appear below"
              			echo
              			echo "File                                 Fileset                 Type"
              			echo "-----------------------------------------------------------------"
                  		echo "$(which pkg)                         bos.pkgmgt.pkg          exec"
                                echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
                                echo "/usr/local/etc/rc.d/apache24         bos.sysmgt.apache24     exec"
                  		echo "Command run: $(which pkg) install apache24 | $(which tee) /var/log/smx-log/pkg.log"
				echo "Command run: $(which sysrc) apache24_enable=yes"
                                echo "Command run: /usr/local/etc/rc.d/apache24 start"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                echo "Installing package: apache24"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which pkg) install apache24 | $(which tee) /var/log/smx-log/pkg.log
                                if [ $? -eq 0 ]; then
                                     echo "############################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly installed apache24" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which pkg) install apache24 | $(which tee) /var/log/smx-log/pkg.log" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "############################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "############################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not installed apache24, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which pkg) install apache24 | $(which tee) /var/log/smx-log/pkg.log" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "############################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
                                fi
                                $(which sysrc) apache24_enable=yes
                                $(which sed) -i 's/#ServerName example.com:80/ServerName $IP_ADDR:80/g' /usr/local/etc/apache24/httpd.conf
                                $(which sed) -i 's/#ServerAdmin root@example.com/ServerAdmin $ADMIN_EMAIL/g' /usr/local/etc/apache24/httpd.conf
                                echo "<html>" >> /usr/local/www/apache24/data/index.html
                                echo "<body>" >> /usr/local/www/apache24/data/index.html
                                echo "<div style='width: 100%; font-size: 40px; font-weight: bold; text-align: center;'>" >> /usr/local/www/apache24/data/index.html
                                echo "Test Page for apache on: $(hostname)" >> /srv/www/htdocs/index.html
                                echo "</div>" >> /usr/local/www/apache24/data/index.html
                                echo "</body>" >> /usr/local/www/apache24/data/index.html
                                echo "</html>" >> /usr/local/www/apache24/data/index.html
                                echo
                                echo "Apache has been successfuly installed: goto: $IP_ADDR/index.html"
                                read -p "Press [enter] to continue..." ReadDamKey
                                if [ "$ansPhp" = "Y" ]; then
                                      clear
                                      echo "          COMMAND STATUS             "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which pkg)                         bos.pkgmgt.pkg          exec"
                                      echo "cp                                   bos.sysmgt.cp           exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "Command run: $(which pkg) install mod_php56 php56_bcmath | $(which tee) /var/log/smx-log/pkg.log"
                                      echo "Command run: cp /usr/local/etc/php.ini-production /usr/local/etc/php.ini"
                                      echo "Command run: $(which sed) -i 's/DirectoryIndex index.html/DirectoryIndex index.html index.php/g' /usr/local/etc/apache24/httpd.conf"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "Installing php 5.6"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which pkg) install mod_php56 php56_bcmath | $(which tee) /var/log/smx-log/pkg.log
                                      if [ $? -eq 0 ]; then
                                           echo "##########################################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly installed php 5.6 on system" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which pkg) install mod_php56 php56_bcmath | $(which tee) /var/log/smx-log/pkg.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "##########################################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "##########################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not installed php 5.6 on system, check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which pkg) install mod_php56 php56_bcmath | $(which tee) /var/log/smx-log/pkg.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "##########################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
                                      cp /usr/local/etc/php.ini-production /usr/local/etc/php.ini
                                      $(which sed) -i 's/DirectoryIndex index.html/DirectoryIndex index.html index.php/g' /usr/local/etc/php.ini
                                      echo '<FilesMatch "\.php$">' >> /usr/local/etc/apache24/httpd.conf
                                      echo "    SetHandler application/x-httpd-php" >> /usr/local/etc/apache24/httpd.conf
                                      echo "</FilesMatch>" >> /usr/local/etc/apache24/httpd.conf
                                      echo '<FilesMatch "\.php$">' >> /usr/local/etc/apache24/httpd.conf
                                      echo "    SetHandler application/x-httpd-php-source" >> /usr/local/etc/apache24/httpd.conf
                                      echo "</FilesMatch>" >> /usr/local/etc/apache24/httpd.conf
                                else
                                      echo "php not installed on system"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                fi
                                if [ "$ansSsl" = "Y" ]; then
                                      clear
                                      echo "            COMMAND STATUS               "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which openssl)                     bos.sysmgt.openssl      exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                      echo "/usr/local/etc/rc.d/apache24         bos.sysmgt.apache24     exec"
                                      echo "Command run: $(which sed) -i 's/ServerName www.example.com:443/ServerName $IP_ADDR:443/g' /usr/local/etc/apache24/extra/httpd-ssl.conf"
                                      echo "Command run: $(which sed) -i 's/ServerAdmin root@example.com/ServerAdmin $ADMIN_EMAIL/g' /usr/local/etc/apache24/extra/httpd-ssl.conf"
                                      echo "Command run: $(which sed) -i 's/#LoadModule ssl_module libexec/apache24/mod_ssl.so/LoadModule ssl_module libexec/apache24/mod_ssl.so/g' /usr/local/etc/apache24/httpd.conf"
                                      echo "Command run: $(which sed) -i 's/#LoadModule socache_shmcb_module libexec/apache24/mod_socache_shmcb.so/LoadModule socache_shmcb_module libexec/apache24/mod_socache_shmcb' /usr/local/etc/apache24/httpd.conf"
                                      echo "Command run: $(which openssl) genrsa -des3 -out /usr/local/etc/apache24/server.key 1024"
                                      echo "Command run: $(which openssl) req -new -key /usr/local/etc/apache24/server.key -out /usr/local/etc/apache24/server.csr"
                                      echo "Command run: $(which openssl) x509 -req -days 9999 -in /usr/local/etc/apache24/server.csr -signkey /usr/local/etc/apache24/server.key -out /usr/local/etc/apache24/server.crt"
                                      echo "Command run: $(which chmod) 0400 /usr/local/etc/apache24/server.key"
                                      echo "Command run: $(which chmod) 0400 /usr/local/etc/apache24/server.crt"
                                      echo "Command run: cp /usr/local/etc/apache24/server.key /usr/local/etc/apache24/server.key.org"
                                      echo "Command run: $(which openssl) -rsa -in /usr/local/etc/apache24/server.key.org -out /usr/local/etc/apache24/server.key"
                                      echo "Command run: /usr/local/etc/rc.d/apache24 restart"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "Creating SSL certificates"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/ServerName www.example.com:443/ServerName $IP_ADDR:443/g' /usr/local/etc/apache24/extra/httpd-ssl.conf
                                      $(which sed) -i 's/ServerAdmin root@example.com/ServerAdmin $ADMIN_EMAIL/g' /usr/local/etc/apache24/extra/httpd-ssl.conf
                                      $(which sed) -i 's/#LoadModule ssl_module libexec/apache24/mod_ssl.so/LoadModule ssl_module libexec/apache24/mod_ssl.so/g' /usr/local/etc/apache24/httpd.conf
                                      $(which sed) -i 's/#LoadModule socache_shmcb_module libexec/apache24/mod_socache_shmcb.so/LoadModule socache_shmcb_module libexec/apache24/mod_socache_shmcb' /usr/local/etc/apache24/httpd.conf
                                      $(which openssl) genrsa -des3 -out /usr/local/etc/apache24/server.key 1024
                                      $(which openssl) req -new -key /usr/local/etc/apache24/server.key -out /usr/local/etc/apache24/server.csr
                                      $(which openssl) x509 -req -days 9999 -in /usr/local/etc/apache24/server.csr -signkey /usr/local/etc/apache24/server.key -out /usr/local/etc/apache24/server.crt
                                      $(which chmod) 0400 /usr/local/etc/apache24/server.key
                                      $(which chmod) 0400 /usr/local/etc/apache24/server.crt
                                      cp /usr/local/etc/apache24/server.key /usr/local/etc/apache24/server.key.org
                                      $(which openssl) -rsa -in /usr/local/etc/apache24/server.key.org -out /usr/local/etc/apache24/server.key
                                      /usr/local/etc/rc.d/apache24 restart
                                      if [ $? -eq 0 ]; then
                                           echo
                                           echo "Successfuly created SSL certificate"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "Not created SSL certificate, check command syntax"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
                                else
                                      echo "SSL not installed"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                fi
                                $(which hash) -r
                                echo
                                echo "apache24 has been successfuly installed"
                                read -p "Press [enter] to continue..." ReadDamKey                      
                           else
                                echo "Feature not avalible for OS X"
                                read -p "Press [enter] to continue..." ReadDamKey
                                apache_menu
                           fi
                      fi
        	      ;;
	    reload)
		     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          cat /proc/version | grep "Red Hat" >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Red Hat"
                               echo "         COMMAND STATUS         "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which service)                     bos.sysmgt.service      exec"
                               echo "Command run: $(which service) httpd reload"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Reloading httpd.conf file"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) httpd reload
                               if [ $? -eq 0 ]; then
                                    echo "##########################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly reloaded apache" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which service) httpd reload" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##########################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "#####################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not reloaded apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which service) httpd reload" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "#####################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi
                          else
                               clear
                               cat /proc/version | grep "Debian" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = Debian"
                                    echo "         COMMAND STATUS         "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which service)                     bos.sysmgt.service      exec"
                                    echo "Command run: $(which service) apache2 reload"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Reloading apache2 httpd.conf file"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which service) apache2 reload
                                    if [ $? -eq 0 ]; then
                                         echo "##########################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly reloaded apache" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "##########################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "#####################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not reloaded apache, check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "#####################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    fi
                               else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "         COMMAND STATUS         "
                                         echo
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                 Type"
                                         echo "-----------------------------------------------------------------"
                                         echo "$(which service)                     bos.sysmgt.service      exec"
                                         echo "Command run: $(which service) apache2 reload"
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "reload apache2 httpd.conf file"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which service) apache2 reload
                                         if [ $? -eq 0 ]; then
                                             echo "##########################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly reloaded apache" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "##########################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                             echo "#####################################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not reloaded apache Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "#####################################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "         COMMAND STATUS         "
                                              echo
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which service)                     bos.sysmgt.service      exec"
                                              echo "Command run: $(which service) apache2 reload"
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Reloading apache2 httpd.conf file"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              /etc/init.d/apache2 reload
                                              if [ $? -eq 0 ]; then
                                                   echo "##########################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly reloaded apache" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "##########################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   echo "#####################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "Not reloaded apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "#####################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              fi
                                         fi
                                    fi
                               fi
                          fi
                     else
                          $(which uname) | grep BSD >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "         COMMAND STATUS                 "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "/usr/local/etc/rc.d/apache24         bos.sysmgt.apache24     exec"
                               echo "Command run: /usr/local/etc/rc.d/apache24 reload"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Reloading httpd.conf file"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               /usr/local/etc/rc.d/apache24 reload
                               if [ $? -eq 0 ]; then
                                    echo "##########################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly reloaded httpd.conf" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: /usr/local/etc/rc.d/apache24 reload" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##########################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "##########################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not reloaded httpd.conf, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: /usr/local/etc/rc.d/apache24 reload" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "##########################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi     
                          else 
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey
                               apache_menu
                          fi
                     fi
            	     ;;
	    restart)
                      clear
                      $(which uname) | grep Linux >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Linux"
                           cat /proc/version | grep "Red Hat" >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = Red Hat"
                                echo "         COMMAND STATUS         "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which service)                     bos.sysmgt.service      exec"
                                echo "Command run: $(which service) httpd restart"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting apache"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                $(which service) httpd restart
                                if [ $? -eq 0 ]; then
                                     echo "###########################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted apache" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) httpd restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "############################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "######################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not restarted apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which service) httpd restart" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "######################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                fi
                           else
                                clear
                                cat /proc/version | grep "Debian" >> /dev/null
                                if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "         COMMAND STATUS         "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) apache2 restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting apache2"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) apache2 restart
                                     if [ $? -eq 0 ]; then
                                          echo "##########################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly restarted apache" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: $(which service) apache2 restart" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "##########################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          echo "######################################################" >> /var/log/smx-log/fail.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Not restarted apache Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                          echo "[$(date)] Command run: $(which service) apache2 restart" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          echo "######################################################" >> /var/log/smx-log/fail.log
                                          echo "" >> /var/log/smx-log/fail.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/fail.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     fi
                                else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
                                          clear
                                          echo "OS = Ubuntu"
                                          echo "         COMMAND STATUS         "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which service)                     bos.sysmgt.service      exec"
                                          echo "Command run: $(which service) apache2 restart"
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting apache2"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which service) apache2 restart
                                          if [ $? -eq 0 ]; then
                                               echo "##########################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted apache" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) apache2 restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "##########################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          else
                                               echo "######################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not restarted apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which service) apache2 restart" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "######################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          fi
                                     else
                                          clear
                                          cat /proc/version | grep "SUSE" >> /dev/null
                                          if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "         COMMAND STATUS         "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) apache2 restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting apache2"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) apache2 restart
                                               if [ $? -eq 0 ]; then
                                                    echo "##########################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly restarted apache" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which service) apache2 restart" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "##########################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               else
                                                    echo "######################################################" >> /var/log/smx-log/fail.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Not restarted apache Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Command run: $(which service) apache2 restart" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    echo "######################################################" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/fail.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               fi
                                          fi
                                     fi
                                fi
                           fi
                      else
                           $(which uname) | grep BSD >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
				echo "OS = BSD"
                                echo "          COMMAND STATUS                  "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "/usr/local/etc/rc.d/apache24         bos.sysmgt.apache24     exec"
                                echo "Command run: /usr/local/etc/rc.d/apache24 restart"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting apache"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                /usr/local/etc/rc.d/apache24 restart
                                if [ $? -eq 0 ]; then
                                     echo "###########################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted apache" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: /usr/local/etc/rc.d/apache24 restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "###########################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     echo "###########################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not restarted apache, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: /usr/local/etc/rc.d/apache24 restart" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "###########################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                fi     
                           else
                                echo "Feature not avalible for OS X"
                                read -p "Press [enter] to continue..." ReadDamKey
                                apache_menu
                           fi
                      fi
            	      ;;
	    start)
                    clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         cat /proc/version | grep "Red Hat" >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "         COMMAND STATUS         "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) httpd start"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting apache"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) httpd start
                              if [ $? -eq 0 ]; then
                                   echo "##########################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly started apache" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which service) httpd start" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "##########################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "#####################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not started apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which service) httpd start" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "#####################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi
                         else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = Debian"
                                   echo "         COMMAND STATUS         "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which service)                     bos.sysmgt.service      exec"
                                   echo "Command run: $(which service) apache2 start"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Starting apache2"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which service) apache2 start
                                   if [ $? -eq 0 ]; then
                                        echo "##########################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly started apache" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which service) apache2 start" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "##########################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        echo "#####################################################" >> /var/log/smx-log/fail.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Not started apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                        echo "[$(date)] Command run: $(which service) apache2 reload" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        echo "#####################################################" >> /var/log/smx-log/fail.log
                                        echo "" >> /var/log/smx-log/fail.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/fail.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   fi
                              else
                                   clear
                                   cat /proc/version | grep "Ubuntu" >> /dev/null
                                   if [ $? -eq 0 ]; then
                                        clear
                                        echo "OS = Ubuntu"
                                        echo "         COMMAND STATUS         "
                                        echo
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        echo
                                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                                        echo
                                        echo "Before command completion, additional instructions may appear below"
                                        echo
                                        echo "File                                 Fileset                 Type"
                                        echo "-----------------------------------------------------------------"
                                        echo "$(which service)                     bos.sysmgt.service      exec"
                                        echo "Command run: $(which service) apache2 start"
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Starting apache2"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which service) apache2 start
                                        if [ $? -eq 0 ]; then
                                             echo "##########################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started apache" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) apache2 start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "##########################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                        else
                                             echo "#####################################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not started apache, check command syntax" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: $(which service) apache2 start" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "#####################################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                        fi
                                   else
                                        clear
                                        cat /proc/version | grep "SUSE" >> /dev/null
                                        if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "         COMMAND STATUS         "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) apache2 start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting apache2"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) apache2 start
                                             if [ $? -eq 0 ]; then
                                                  echo "##########################################" >> /var/log/smx-log/success.log
                                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                  echo "[$(date)] Successfuly started apache" >> /var/log/smx-log/success.log
                                                  echo "[$(date)] Command run: $(which service) apache2 start" >> /var/log/smx-log/success.log
                                                  echo "" >> /var/log/smx-log/success.log
                                                  echo "##########################################" >> /var/log/smx-log/success.log
                                                  echo "" >> /var/log/smx-log/success.log
                                                  read -p "Press [enter] to continue..." ReadDamKey
                                                  clear
                                                  echo
                                                  cat /var/log/smx-log/success.log | tail -n 7
                                                  echo
                                                  read -p "Press [enter] to continue..." ReadDamKey
                                            else
                                                  echo "#####################################################" >> /var/log/smx-log/fail.log
                                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                  echo "[$(date)] Not started apache, check command syntax" >> /var/log/smx-log/fail.log
                                                  echo "[$(date)] Command run: $(which service) apache2 start" >> /var/log/smx-log/fail.log
                                                  echo "" >> /var/log/smx-log/fail.log
                                                  echo "#####################################################" >> /var/log/smx-log/fail.log
                                                  echo "" >> /var/log/smx-log/fail.log
                                                  read -p "Press [enter] to continue..." ReadDamKey
                                                  clear
                                                  echo
                                                  cat /var/log/smx-log/fail.log | tail -n 7
                                                  echo
                                                  read -p "Press [enter] to continue..." ReadDamKey
                                            fi
                                        fi
                                   fi
                              fi
                         fi
                    else
                         $(which uname) | grep BSD >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = BSD"
                              echo "         COMMAND STATUS            "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "/usr/local/etc/rc.d/apache24         bos.sysmgt.apache24     exec"
                              echo "Command run: /usr/local/etc/rc.d/apache24 start"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting apache"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              /usr/local/etc/rc.d/apache24 start
                              if [ $? -eq 0 ]; then
                                   echo "#########################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly started apache" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: /usr/local/etc/rc.d/apache24 start" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "#########################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "#########################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not started apache, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: /usr/local/etc/rc.d/apache24 start" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "#########################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi     
                         else
                              echo "Feature not avalible for OS X"
                              read -p "Press [enter] to continue..." ReadDamKey
                         fi
                    fi
            	    ;;
	    stop)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        cat /proc/version | grep "Red Hat" >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Red Hat"
                             echo "         COMMAND STATUS         "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) httpd stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping apache"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) httpd stop
                             if [ $? -eq 0 ]; then
                                  echo "##########################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly stopped apache" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which service) httpd stop" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "##########################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#####################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not stopped apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: $(which service) httpd stop" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "#####################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi
                        else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = Debian"
                                  echo "         COMMAND STATUS         "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which service)                     bos.sysmgt.service      exec"
                                  echo "Command run: $(which service) apache2 stop"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Stopping apache2"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which service) apache2 stop
                                  if [ $? -eq 0 ]; then
                                       echo "##########################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped apache" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) apache2 stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "##########################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       echo "#####################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not stopped apache [$(date)] Successfuly, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which service) apache2 stop" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#####################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  fi
                             else
                                  clear
                                  cat /proc/version | grep "Ubuntu" >> /dev/null
                                  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "         COMMAND STATUS         "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: /etc/init.d/apache2 stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping apache2"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) apache2 stop
                                       if [ $? -eq 0 ]; then
                                            echo "##########################################" >> /var/log/smx-log/success.log
                                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                            echo "[$(date)] Successfuly stopped apache" >> /var/log/smx-log/success.log
                                            echo "[$(date)] Command run: $(which service) apache2 stop" >> /var/log/smx-log/success.log
                                            echo "" >> /var/log/smx-log/success.log
                                            echo "##########################################" >> /var/log/smx-log/success.log
                                            echo "" >> /var/log/smx-log/success.log
                                            read -p "Press [enter] to continue..." ReadDamKey
                                            clear
                                            echo
                                            cat /var/log/smx-log/success.log | tail -n 7
                                            echo
                                            read -p "Press [enter] to continue..." ReadDamKey
                                       else
                                            echo "#####################################################" >> /var/log/smx-log/fail.log
                                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                            echo "[$(date)] Not stopped apache, check command syntax" >> /var/log/smx-log/fail.log
                                            echo "[$(date)] Command run: $(which service) apache2 stop" >> /var/log/smx-log/fail.log
                                            echo "" >> /var/log/smx-log/fail.log
                                            echo "#####################################################" >> /var/log/smx-log/fail.log
                                            echo "" >> /var/log/smx-log/fail.log
                                            read -p "Press [enter] to continue..." ReadDamKey
                                            clear
                                            echo
                                            cat /var/log/smx-log/fail.log | tail -n 7
                                            echo
                                            read -p "Press [enter] to continue..." ReadDamKey
                                       fi
                                  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
                                            clear
                                            echo "OS = SuSE"
                                            echo "         COMMAND STATUS         "
                                            echo
                                            echo "$(date)                                     $(whoami)@$(hostname)"
                                            echo
                                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                                            echo
                                            echo "Before command completion, additional instructions may appear below"
                                            echo
                                            echo "File                                 Fileset                 Type"
                                            echo "-----------------------------------------------------------------"
                                            echo "$(which service)                     bos.sysmgt.service      exec"
                                            echo "Command run: $(which service) apache2 stop"
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Stopping apache2"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which service) apache2 stop
                                            if [ $? -eq 0 ]; then
                                                 echo "##########################################" >> /var/log/smx-log/success.log
                                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                 echo "[$(date)] Successfuly stopped apache" >> /var/log/smx-log/success.log
                                                 echo "[$(date)] Command run: $(which service) apache2 stop" >> /var/log/smx-log/success.log
                                                 echo "" >> /var/log/smx-log/success.log
                                                 echo "##########################################" >> /var/log/smx-log/success.log
                                                 echo "" >> /var/log/smx-log/success.log
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                                 clear
                                                 echo
                                                 cat /var/log/smx-log/success.log | tail -n 7
                                                 echo
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                            else
                                                 echo "#####################################################" >> /var/log/smx-log/fail.log
                                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                 echo "[$(date)] Not stopped apache, check command syntax" >> /var/log/smx-log/fail.log
                                                 echo "[$(date)] Command run: $(which service) apache2 stop" >> /var/log/smx-log/fail.log
                                                 echo "" >> /var/log/smx-log/fail.log
                                                 echo "#####################################################" >> /var/log/smx-log/fail.log
                                                 echo "" >> /var/log/smx-log/fail.log
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                                 clear
                                                 echo
                                                 cat /var/log/smx-log/fail.log | tail -n 7
                                                 echo
                                                 read -p "Press [enter] to continue..." ReadDamKey
                                            fi
                                       fi
                                  fi
                             fi
                        fi
                   else
                        $(which uname) | grep BSD >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = BSD"
                             echo "         COMMAND STATUS                  "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "/usr/local/etc/rc.d/apache24         bos.sysmgt.apache24     exec"
                             echo "Command run: /usr/local/etc/rc.d/apache24 stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping apache"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             sleep 1
                             /usr/local/etc/rc.d/apache24 stop
                             if [ $? -eq 0 ]; then
                                  echo "##############################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "Successfuly stopped apache" >> /var/log/smx-log/success.log
                                  echo "Command run: /usr/local/etc/rc.d/apache24 stop" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "##############################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "##############################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "Not stopped apache, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "Command run: /usr/local/etc/rc.d/apache24 stop" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "##############################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi      
                        else
                             echo "Feature not avalible for OS X"
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   fi
                   ;;
            help)
                   echo "install > Install apache www server on system"
                   echo "reload > Force reload of httpd.conf"
                   echo "restart > Restart apache"
                   echo "start > Start apache"
                   echo "stop > Stop apache"
                   echo "help > This menu"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;      
            exit)
                   clear
		   echo "#################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/apache_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "#################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
            exit-mas)
                       clear
		       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "          COMMAND STATUS         "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no       "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 6235 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function nfs_menu(){
    while :
    do
       clear
       echo "$(date)                                     $(whoami)@$(hostname)"
       echo
       read -p "$(whoami)@$(hostname):smx/nfs_menu # " choice_nfs
       echo

       case "$choice_nfs" in
           install)
                     clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          cat /proc/version | grep "Red Hat" >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Red Hat"
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo "Share name example: /nfs/share"
                               echo "Allow access to example: 192.168.1.0/24"
                               echo "[TOP]                               [Entry Fields]"
                               read -p " Enter name of share ------------ > " shareLoc
                               read -p " Enter hosts to access nfs ------ > " hostAccess
                               clear
                               echo "          COMMAND STATUS       "
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which yum)                         bos.pkgmgt.yum          exec"
                               echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                               echo "$(which chown)                       bos.sysmgt.chown        exec"
                               echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                               echo "$(which service)                     bos.sysmgt.service      exec"
                               echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                               echo "Command run: $(which yum) -y install nfs-utils | $(which tee) /var/log/smx-log/yum.log"
                               echo "Command run: $(which mkdir) -p $shareLoc/"
                               echo "Command run: $(which chown) -R nobody:nobody $shareLoc/"
                               echo "Command run: $(which chmod) -R a+rwx $shareLoc/"
                               echo "Command run: $(which service) rpcbind start"
                               echo "Command run: $(which service) nfslock start"
                               echo "Command run: $(which service) nfs start"
                               echo "Command run: $(which chkconfig) rpcbind on"
                               echo "Command run: $(which chkconfig) nfslock on"
                               echo "Command run: $(which chkconfig) nfs on"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Installing package: nfs-utils"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which yum) -y install nfs-utils | $(which tee) /var/log/smx-log/yum.log
                               if [ $PIPESTATUS -eq 0 ]; then
                                    echo "##########################################################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly installed nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which yum) -y install nfs-utils | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##########################################################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not installed nfs on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: $(which yum) -y install nfs-utils | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    exit 1
                               fi
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Creating nfs share directory: $shareLoc/"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which mkdir) -p $shareLoc/
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Changing ownership of nfs share location: $shareLoc/ to nobody:nobody"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chown) -R nobody:nobody $shareLoc/
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Changing executuction permissions on nfs share location: $shareLoc/ to: a+rwx"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chmod) -R a+rwx $shareLoc/
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Defining new share location: $shareLoc as: $shareLoc $hostAccess(rw,sync,no_root_squash,no_all_squash) in /etc/exports"
                               sleep 1
                               update_spinner
                               sleep 1
                               echo "$shareLoc $hostAccess(rw,sync,no_root_squash,no_all_squash)" >> /etc/exports
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Starting rpcbind"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) rpcbind start
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Starting nfslock"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) nfslock start
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Starting nfs"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) nfs start
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting rpcbind to start at startup"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chkconfig) rpcbind on
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting nfslock to start on startup"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chkconfig) nfslock on
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Setting nfs to start on startup"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which chkconfig) nfs on
                               clear
                               echo "NFS [$(date)] Successfuly configured on system: $(hostname)"
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               clear
                               cat /proc/version | grep "Debian" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    clear
                                    echo "OS = Debian"
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo "Share name example: /nfs/share"
                                    echo "Allow access to example: 192.168.1.0/24"
                                    echo "[TOP]                             [Entry Fields]"
                                    read -p "Enter name of share ----------- > " shareLoc
                                    read -p "Enter hosts to access nfs ----- > " hostAccess
                                    clear
                                    echo "          COMMAND STATUS         "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                          Type"
                                    echo "--------------------------------------------------------------------------"
                                    echo "$(which apt-get)                     bos.pkgmgt.apt-get               exec"
                                    echo "$(which mkdir)                       bos.sysmgt.mkdir                 exec"
                                    echo "$(which chown)                       bos.sysmgt.chown                 exec"
                                    echo "$(which chmod)                       bos.sysmgt.chmod                 exec"
                                    echo "$(which service)                     bos.sysmgt.service      exec"
                                    echo "Command run: $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log"
                                    echo "Command run: $(which mkdir) -p $shareLoc/"
                                    echo "Command run: $(which chown) -R nobody:nobody $shareLoc/"
                                    echo "Command run: $(which chmod) -R a+rwx $shareLoc/"
                                    echo "Command run: $(which service) portmap start"
                                    echo "Command run: $(which service) nfs-kernel-server restart"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Installing packages nfs-kernel-server portmap"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log
                                    if [ $PIPESTATUS -eq 0 ]; then
                                         echo "##################################################################################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly installed nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "##################################################################################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         echo "##################################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Not installed nfs on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                         echo "[$(date)] Command run: $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         echo "##################################################################################################################" >> /var/log/smx-log/fail.log
                                         echo "" >> /var/log/smx-log/fail.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/fail.log | tail -n 7
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         exit 1
                                    fi
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Creating nfs share location: $shareLoc/"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which mkdir) -p $shareLoc/
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Setting ownership of nfs share location: $shareLoc to: nobody:nobody"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which chown) -R nobody:nobody $shareLoc/
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Setting executuction permissions of nfs share location: $shareLoc/ to: a+rwx"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which chmod) -R a+rwx $shareLoc/
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Defining new nfs share: $shareLoc as: $shareLoc $hostAccess(rw,no_root_squash,no_subtree_check) in /etc/export"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    echo "$shareLoc $hostAccess(rw,sync,no_root_squash,no_subtree_check)" >> /etc/exports
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Starting portmap"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which service) portmap start
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Starting nfs-kernel-server"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which service) nfs-kernel-server restart
                                    clear
                                    echo "NFS Successfuly configured on system: $(hostname)"
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo "Share name example: /nfs/share"
                                         echo "Allow access to example: 192.168.1.0/24"
                                         echo "[TOP]                             [Entry Fields]"
                                         read -p "Enter name of share ----------- > " shareLoc
                                         read -p "Enter hosts to access nfs ----- > " hostAccess
                                         clear
                                         echo "          COMMAND STATUS         "
                                         echo
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                          Type"
                                         echo "--------------------------------------------------------------------------"
                                         echo "$(which apt-get)                     bos.pkgmgt.apt-get               exec"
                                         echo "$(which mkdir)                       bos.sysmgt.mkdir                 exec"
                                         echo "$(which chown)                       bos.sysmgt.chown                 exec"
                                         echo "$(which chmod)                       bos.sysmgt.chmod                 exec"
                                         echo "$(which service)                     bos.sysmgt.service      exec"
                                         echo "Command run: $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log"
                                         echo "Command run: $(which  mkdir) -p $shareLoc/"
                                         echo "Command run: $(which chown) -R nobody:nobod y $shareLoc/"
                                         echo "Command run: $(which chmod) -R a+rwx $shareLoc/"
                                         echo "Command run: $(which service) portmap start"
                                         echo "Command run: $(which service) nfs-kernel-server restart"
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Installing packages: nfs-kernel-server and portmap"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log
                                         if [ $PIPESTATUS -eq 0 ]; then
                                              echo "##################################################################################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly installed nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "##################################################################################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         else
                                              echo "##################################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Not installed nfs on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                              echo "[$(date)] Command run: $(which apt-get) -y install nfs-kernel-server portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              echo "##################################################################################################################" >> /var/log/smx-log/fail.log
                                              echo "" >> /var/log/smx-log/fail.log
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/fail.log | tail -n 7
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                              exit 1
                                         fi
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Creating new nfs share location: $shareLoc/"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which mkdir) -p $shareLoc/
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting ownership of nfs share location to: nobody:nobody"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which chown) -R nobody:nobody $shareLoc/
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Setting executuction permissions on nfs share location: $shareLoc/ to: a+rwx"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which chmod) -R a+rwx $shareLoc/
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Defining new nfs share: $shareLoc as: $shareLoc $hostAccess(rw,no_root_squash,no_subtree_check) in /etc/exports"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         echo "$shareLoc $hostAccess(rw,sync,no_root_squash,no_subtree_check)" >> /etc/exports
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Starting portmap"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which service) portmap start
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Starting nfs-kernel-server"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which service) nfs-kernel-server restart
                                         clear
                                         echo "NFS Successfuly configured on system: $(hostname)"
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "$(date)                                   $(whoami)@$(hostname)"
                                              echo "Share name example: /nfs/share"
                                              echo "Allow access to example: 192.168.1.0/24"
                                              echo "[TOP]                              [Entry Fields]"
                                              read -p " Enter name of share ----------- > " shareLoc
                                              read -p " Enter host to access nfs ------ > " hostAccess
                                              clear
                                              echo "         COMMAND STATUS                "
                                              echo
                                              echo "$(date)                                   $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no   "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                              echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                              echo "$(which chown)                       bos.sysmgt.chown        exec"
                                              echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                              echo "$(which service)                     bos.sysmgt.service      exec"
                                              echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                              echo "ommand run: $(which zypper) in -y nfs-kernel-server | tee /var/log/smx-log/zypper.log"
                                              echo "Command run: $(which mkdir) -p $shareLoc/"
                                              echo "Command run: $(which chown) -R nobody:nobody $shareLoc/"
                                              echo "Command run: $(which chmod) -R a+rwx $shareLoc/"
                                              echo "Command run: $(which service) rpcbind start"
                                              echo "Command run: $(which service) nfsserver start"
                                              echo "Command run: $(which chkconfig) rpcbind on"
                                              echo "Command run: $(which chkconfig) nfsserver on"
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Installing package: nfs-kernel-server"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which zypper) in -y nfs-kernel-server | tee /var/log/smx-log/zypper.log
                                              if [ $PIPESTATUS -eq 0 ]; then
                                                   echo "###########################################################################################" >> /var/log/smx-log/success.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Successfuly installed nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                                   echo "[$(date)] Command run: $(which zypper) in -y nfs-kernel-server | tail /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   echo "###########################################################################################" >> /var/log/smx-log/success.log
                                                   echo "" >> /var/log/smx-log/success.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/success.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                              else
                                                   echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Not installed nfs on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                   echo "[$(date)] Command run: $(which zypper) in -y nfs-kernel-server | tee /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                                   echo "" >> /var/log/smx-log/fail.log
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   clear
                                                   echo
                                                   cat /var/log/smx-log/fail.log | tail -n 7
                                                   echo
                                                   read -p "Press [enter] to continue..." ReadDamKey
                                                   exit 1
                                              fi
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Creating new nfs share: $shareLoc/"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which mkdir) -p $shareLoc/
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting ownership of nfs share location: $shareLoc as: nobody:nobody"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which chown) -R nobody:nobody $shareLoc/
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting executuction permissions of nfs share: $shareLoc as: a+rwx"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which chmod) -R a+rwx $shareLoc/
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Starting rpcbind"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which service) rpcbind start
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Starting nfsserver"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which service) nfsserver start
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting rpcbind to start at startup"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which chkconfig) rpcbind on
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Setting nfsserver to start at startup"
                                              sleep 1
                                              update_spinner
                                              sleep 1
                                              $(which chkconfig) nfsserver on
                                              clear
                                              echo "NFS Successfuly configured on system: $(hostname)"
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                    fi
                               fi
                          fi
                     else
                          $(which uname) | grep BSD >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "$(date)                                   $(whoami)@$(hostname)"
                               echo "Share name example: /nfs/share"
                               echo "Allow access to example: 192.168.1.0/24"
                               echo "[TOP]                              [Entry Fields]"
                               read -p " Enter name of share ----------- > " shareLoc
                               read -p " Enter host to access nfs ------ > " hostAccess
                               clear
                               echo "         COMMAND STATUS                "
                               echo
                               echo "$(date)                                   $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no   "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
                               echo "$(which rpcbind)                     bos.sysmgt.rpcbind      exec"
                               echo "$(which nfsd)                        bos.sysmgt.nfsd         exec"
                               echo "$(which mountd)                      bos.sysmgt.mountd       exec"
                               echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                               echo "$(which chown)                       bos.sysmgt.chown        exec"
                               echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                               echo "/etc/rc.d/mountd                     bos.sysmgt.mountd       exec"
                               echo "$(which showmount)                   bos.sysmgt.showmount    exec"
                               echo "Command run: $(which sysrc) nfs_server_enable=YES"
                               echo "Command run: $(which sysrc) rpcbind_enable=YES"
                               echo "Command run: $(which sysrc) mountd_flags=-r"
                               echo "Command run: $(which sysrc) rpc_lockd_enable=YES"
                               echo "Command run: $(which sysrc) rpc_statd_enable=YES"
                               echo "Command run: $(which rpcbind)"
                               echo "Command run: $(which nfsd) -u -t -n 4"
                               echo "Command run: $(which mountd) -r"
                               echo "Command run: $(which mkdir) -p $shareLoc/"
                               echo "Command run: $(which chown) -R root:root $shareLoc/"
                               echo "Command run: $(which chmod) -R a+rwx $shareLoc/"
                               echo "Command run: /etc/rc.d/mountd onereload"
                               echo "Command run: $(which showmount) -e"
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Enabling NFS"
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which sysrc) nfs_server_enable=YES
                               $(which sysrc) rpcbind_enable=YES
                               $(which sysrc) mountd_flags=-r
                               $(which sysrc) rpc_lockd_enable=YES
                               $(which sysrc) rpc_statd_enable=YES
                               $(which rpcbind)
                               $(which nfsd) -u -t -n 4
                               $(which mountd) -r
                               $(which mkdir) -p $shareLoc/
                               $(which chown) -R root:root $shareLoc/
                               $(which chmod) -R a+rwx $shareLoc/
                               echo "$shareLoc $hostAccess(rw,no_root_squash)" >> /etc/exports
                               /etc/rc.d/mountd onereload
                               $(which showmount) -e
                               clear
                               echo "NFS Successfuly configured on system: $(hostname)"
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey
                               nfs_menu
                          fi
                     fi
                     ;;
	   start)
                   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        cat /proc/version | grep "Red Hat" >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Red Hat"
                             echo "             COMMAND STATUS            "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) rpcbind start"
                             echo "Command run: $(which service) nfslock start"
                             echo "Command run: $(which service) nfs start"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Starting rpcbind"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) rpcbind start
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Starting nfslock"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) nfslock start
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Starting nfs"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) nfs start
                             echo "##############################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly started nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) nfs start" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##############################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = Debian"
                                  echo "             COMMAND STATUS            "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                          Type"
                                  echo "--------------------------------------------------------------------------"
                                  echo "$(which service)                     bos.sysmgt.service      exec"
                                  echo "Command run: $(which service) portmap start"
                                  echo "Command run: $(which service) nfs-kernel-server start"
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Starting portmap"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which service) portmap start
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Starting nfs-kernel-server"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which service) nfs-kernel-server start
                                  echo "#####################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly started nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which service) nfs-kernel-server start" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#####################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  clear
                                  cat /proc/version | grep "Ubuntu" >> /dev/null
                                  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "             COMMAND STATUS            "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                          Type"
                                       echo "--------------------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) portmap start"
                                       echo "Command run: $(which service) nfs-kernel-server start"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Starting portmap"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) portmap start
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Starting nfs-kernel-server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) nfs-kernel-server start
                                       echo "#####################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly started nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) nfs-kernel-server start" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#####################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
                                            clear
                                            echo "OS = SuSE"
                                            echo "             COMMAND STATUS            "
                                            echo
                                            echo "$(date)                                     $(whoami)@$(hostname)"
                                            echo
                                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                                            echo
                                            echo "Before command completion, additional instructions may appear below"
                                            echo
                                            echo "File                                 Fileset                 Type"
                                            echo "-----------------------------------------------------------------"
                                            echo "$(which service)                     bos.sysmgt.service      exec"
                                            echo "Command run: $(which service) rpcbind start"
                                            echo "Command run: $(which service) nfsserver start"
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Starting rpcbind"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which service) rpcbind start
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Starting nfsserver"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which service) nfsserver start
                                            echo "#####################################################" >> /var/log/smx-log/success.log
                                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                            echo "[$(date)] Successfuly started nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                            echo "[$(date)] Command run: $(which service) nfsserver start" >> /var/log/smx-log/success.log
                                            echo "" >> /var/log/smx-log/success.log
                                            echo "#####################################################" >> /var/log/smx-log/success.log
                                            echo "" >> /var/log/smx-log/success.log
                                            read -p "Press [enter] to continue..." ReadDamKey
                                            clear
                                            echo
                                            cat /var/log/smx-log/success.log | tail -n 7
                                            echo
                                            read -p "Press [enter] to continue..." ReadDamKey
                                       fi
                                  fi
                             fi
                        fi
                   else
                        $(which uname) | grep BSD >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = BSD"
                             echo "         COMMAND STATUS                "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "/etc/rc.d/rpcbind                    bos.sysmgt.rpcbind      exec"
                             echo "/etc/rc.d/nfsd                       bos.sysmgt.nfsd         exec"
                             echo "/etc/rc.d/mountd                     bos.sysmgt.mountd       exec"
                             echo "Command run: /etc/rc.d/rpcbind start"
                             echo "Command run: /etc/rc.d/nfsd start"
                             echo "Command run: /etc/rc.d/mountd start"
                             update_spinner
                             sleep 1
                             update_spinner                              
                             echo "Starting rpcbind"
                             sleep 1
                             update_spinner
                             sleep 1
                             /etc/rc.d/rpcbind start
                             update_spinner
                             sleep 1
                             update_spinner                              
                             echo "Starting mountd"
                             sleep 1
                             update_spinner
                             sleep 1
                             /etc/rc.d/mountd start
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Starting nfs"
                             sleep 1
                             update_spinner
                             sleep 1
                             /etc/rc.d/nfsd start
                             if [ $? -eq 0 ]; then
                                  echo "#############################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "Successfuly started nfs server" >> /var/log/smx-log/success.log
                                  echo "Command run: /etc/rc.d/nfsd start" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "#############################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "#############################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "Not started nfs server" >> /var/log/smx-log/fail.log
                                  echo "Command run: /etc/rc.d/nfsd start" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "#############################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi     
                        else
                             echo "Feature not avalible for OS X"
                             read -p "Press [enter] to continue..." ReadDamKey
                        fi
                   fi
                   ;;
	   stop)
                  clear
                  $(which uname) | grep Linux >> /dev/null
                  if [ $? -eq 0 ]; then
                       clear
                       echo "OS = Linux"
                       cat /proc/version | grep "Red Hat" >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = Red Hat"
                            echo "             COMMAND STATUS            "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                 Fileset                 Type"
                            echo "-----------------------------------------------------------------"
                            echo "$(which service)                     bos.sysmgt.service      exec"
                            echo "Command run: $(which service) rpcbind stop"
                            echo "Command run: $(which service) nfslock stop"
                            echo "Command run: $(which service) nfs stop"
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Stopping rpcbind"
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which service) rpcbind stop
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Stopping nfslock"
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which service) nfslock stop
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Stopping nfs"
                            sleep 1
                            update_spinner
                            sleep 1
                            $(which service) nfs stop
                            echo "##############################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly stopped nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which service) nfs stop" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "##############################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            clear
                            cat /proc/version | grep "Debian" >> /dev/null
                            if [ $? -eq 0 ]; then
                                 clear
                                 echo "OS = Debian"
                                 echo "             COMMAND STATUS            "
                                 echo
                                 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo
                                 echo "Command: RUNNING    stdout: yes    stderr: no     "
                                 echo
                                 echo "Before command completion, additional instructions may appear below"
                                 echo
                                 echo "File                                 Fileset                          Type"
                                 echo "--------------------------------------------------------------------------"
                                 echo "$(which service)                     bos.sysmgt.service      exec"
                                 echo "Command run: $(which service) portmap stop"
                                 echo "Command run: $(which service) nfs-kernel-server stop"
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Stopping portmap"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which service) portmap stop
                                 update_spinner
                                 sleep 1
                                 update_spinner
                                 echo "Stopping nfs-kernel-server"
                                 sleep 1
                                 update_spinner
                                 sleep 1
                                 $(which service) nfs-kernel-server stop
                                 echo "#####################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly stopped nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which service) nfs-kernel-server stop" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#####################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 clear
                                 cat /proc/version | grep "Ubuntu" >> /dev/null
                                 if [ $? -eq 0 ]; then
                                      clear
                                      echo "OS = Ubuntu"
                                      echo "             COMMAND STATUS            "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "Command run: $(which service) portmap stop"
                                      echo "Command run: $(which service) nfs-kernel-server stop"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Stopping portmap"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) portmap stop
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Stopping nfs-kernel-server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) nfs-kernel-server stop
                                      echo "#####################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly stopped nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which service) nfs-kernel-server stop" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "#####################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                 else
                                      clear
                                      cat /proc/version | grep "SUSE" >> /dev/null
                                      if [ $? -eq 0 ]; then
                                           clear
                                           echo "OS = SuSE"
                                           echo "             COMMAND STATUS            "
                                           echo
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo
                                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                                           echo
                                           echo "Before command completion, additional instructions may appear below"
                                           echo
                                           echo "File                                 Fileset                 Type"
                                           echo "-----------------------------------------------------------------"
                                           echo "$(which service)                     bos.sysmgt.service      exec"
                                           echo "Command run: $(which service) rpcbind stop"
                                           echo "Command run: $(which service) nfsserver stop"
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Stopping rpcbind"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which service) rpcbind stop
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Stopping nfsserver"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which service) nfsserver stop
                                           echo "#####################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly stopped nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which service) nfsserver stop" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "#####################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
                                 fi
                            fi
                       fi
                  else
                       $(which uname) | grep BSD >> /dev/null
                       if [ $? -eq 0 ]; then
                            clear
                            echo "OS = BSD"
                            echo "         COMMAND STATUS                "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may apppear below"
                            echo
                            echo "File                                 Fileset                  Type"
                            echo "------------------------------------------------------------------"
                            echo "/etc/rc.d/rpcbind                    bos.sysmgt.rpcbind       exec"
                            echo "/etc/rc.d/nfsd                       bos.sysmgt.nfsd          exec"
                            echo "/etc/rc.d/mountd                     bos.sysmgt.mountd        exec"
                            echo "Command run: /etc/rc.d/rpcbind stop"
                            echo "Command run: /etc/rc.d/nfsd stop"
                            echo "Command run: /etc/rc.d/mountd stop"
                            update_spinner
                            sleep 1
                            update_spinner                              
                            echo "Stopping rpcbind"
                            sleep 1
                            update_spinner
                            sleep 1
                            /etc/rc.d/rpcbind stop
                            update_spinner
                            sleep 1
                            update_spinner                              
                            echo "Stopping mountd"
                            sleep 1
                            update_spinner
                            sleep 1
                            /etc/rc.d/mountd stop
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Stopping nfs"
                            sleep 1
                            update_spinner
                            sleep 1
                            /etc/rc.d/nfsd stop
                            if [ $? -eq 0 ]; then
                                 echo "#######################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly stopped nfs" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: /etc/rc.d/nfsd stop" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#######################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            else
                                 echo "#######################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not stopped nfs, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: /etc/rc.d/nfsd stop" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#######################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                            fi          
                       else
                            echo "Feature not avalible for OS X"
                            read -p "Press [enter] to continue..." ReadDamKey
                            nfs_menu
                       fi
                  fi
                  ;;
           restart)
	             clear
                     $(which uname) | grep Linux >> /dev/null
                     if [ $? -eq 0 ]; then
                          clear
                          echo "OS = Linux"
                          cat /proc/version | grep "Red Hat" >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = Red Hat"
                               echo "         COMMAND STATUS          "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "$(which service)                     bos.sysmgt.service      exec"
                               echo "Command run: $(which service) rpcbind restart"
                               echo "Command run: $(which service) nfslock restart"
                               echo "Command run: $(which service) nfs restart"
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Restarting rpcbind"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) rpcbind restart
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Restarting nfslock"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) nfslock restart
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Restarting nfs"
                               sleep 1
                               update_spinner
                               sleep 1
                               $(which service) nfs restart
                               echo "################################################" >> /var/log/smx-log/success.log
                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Successfuly restarted nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                               echo "[$(date)] Command run: $(which service) nfs restart" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               echo "################################################" >> /var/log/smx-log/success.log
                               echo "" >> /var/log/smx-log/success.log
                               read -p "Press [enter] to continue..." ReadDamKey
                               clear
                               echo
                               cat /var/log/smx-log/success.log | tail -n 7
                               echo
                               read -p "Press [enter] to continue..." ReadDamKey
                          else
                               clear
                               cat /proc/version | grep "Debian" >> /dev/null
                               if [ $? -eq 0 ]; then
                                    echo "OS = Debian"
                                    clear
                                    echo "        COMMAND STATUS        "
                                    echo
                                    echo "$(date)                                     $(whoami)@$(hostname)"
                                    echo
                                    echo "Command: RUNNING    stdout: yes    stderr: no     "
                                    echo
                                    echo "Before command completion, additional instructions may appear below"
                                    echo
                                    echo "File                                 Fileset                 Type"
                                    echo "-----------------------------------------------------------------"
                                    echo "$(which service)                     bos.sysmgt.service      exec"
                                    echo "Command run: $(which service) portmap restart"
                                    echo "Command run: $(which service) nfs-kernel-server restart"
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Restarting portmap"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which service) portmap restart
                                    update_spinner
                                    sleep 1
                                    update_spinner
                                    echo "Restarting nfs-kernel-server"
                                    sleep 1
                                    update_spinner
                                    sleep 1
                                    $(which service) nfs-kernel-server restart
                                    echo "##################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly restarted nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: $(which service) nfs-kernel-server restart" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    clear
                                    cat /proc/version | grep "Ubuntu" >> /dev/null
                                    if [ $? -eq 0 ]; then
                                         clear
                                         echo "OS = Ubuntu"
                                         echo "        COMMAND STATUS        "
                                         echo
                                         echo "$(date)                                     $(whoami)@$(hostname)"
                                         echo
                                         echo "Command: RUNNING    stdout: yes    stderr: no     "
                                         echo
                                         echo "Before command completion, additional instructions may appear below"
                                         echo
                                         echo "File                                 Fileset                            Type"
                                         echo "----------------------------------------------------------------------------"
                                         echo "$(which service)                     bos.sysmgt.service      exec"
                                         echo "Command run: $(which service) portmap restart"
                                         echo "Command run: $(which service) nfs-kernel-server restart"
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Restarting portmap"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which service) portmap restart
                                         update_spinner
                                         sleep 1
                                         update_spinner
                                         echo "Restarting nfs-kernel-server"
                                         sleep 1
                                         update_spinner
                                         sleep 1
                                         $(which service) nfs-kernel-server restart
                                         echo "##################################################" >> /var/log/smx-log/success.log
                                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Successfuly restarted nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                         echo "[$(date)] Command run: $(which service) nfs-kernel-server restart" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         echo "##################################################" >> /var/log/smx-log/success.log
                                         echo "" >> /var/log/smx-log/success.log
                                         read -p "Press [enter] to continue..." ReadDamKey
                                         clear
                                         echo
                                         cat /var/log/smx-log/success.log
                                         echo
                                         read -p "Press [enter] to continue..." ReadDamKey
                                    else
                                         clear
                                         cat /proc/version | grep "SUSE" >> /dev/null
                                         if [ $? -eq 0 ]; then
                                              clear
                                              echo "OS = SuSE"
                                              echo "         COMMAND STATUS        "
                                              echo
                                              echo "$(date)                                     $(whoami)@$(hostname)"
                                              echo
                                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                                              echo
                                              echo "Before command completion, additional instructions may appear below"
                                              echo
                                              echo "File                                 Fileset                 Type"
                                              echo "-----------------------------------------------------------------"
                                              echo "$(which service)                     bos.sysmgt.service      exec"
                                              echo "Command run: $(which service) rpcbind restart"
                                              echo "Command run: $(which service) nfsserver restart"
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Restarting rpcbind"
                                              sleep 1
                                              update_spinner
                                              $(which service) rpcbind restart
                                              update_spinner
                                              sleep 1
                                              update_spinner
                                              echo "Restarting nfsserver"
                                              sleep 1
                                              update_spinner
                                              $(which service) nfsserver restart
                                              echo "################################################" >> /var/log/smx-log/success.log
                                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Successfuly restarted nfs on system: $(hostname)" >> /var/log/smx-log/success.log
                                              echo "[$(date)] Command run: $(which service) nfsserver restart" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              echo "################################################" >> /var/log/smx-log/success.log
                                              echo "" >> /var/log/smx-log/success.log
                                              read -p "Press [enter] to continue" ReadDamKey
                                              clear
                                              echo
                                              cat /var/log/smx-log/success.log
                                              echo
                                              read -p "Press [enter] to continue..." ReadDamKey
                                         fi
                                    fi
                               fi
                          fi
                     else
                          $(which uname) | grep BSD >> /dev/null
                          if [ $? -eq 0 ]; then
                               clear
                               echo "OS = BSD"
                               echo "         COMMAND STATUS                "
                               echo
                               echo "$(date)                                     $(whoami)@$(hostname)"
                               echo
                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                               echo
                               echo "Before command completion, additional instructions may appear below"
                               echo
                               echo "File                                 Fileset                 Type"
                               echo "-----------------------------------------------------------------"
                               echo "/etc/rc.d/rpcbind                    bos.sysmgt.rpcbind      exec"
                               echo "/etc/rc.d/nfsd                       bos.sysmgt.nfsd         exec"
                               echo "/etc/rc.d/mountd                     bos.sysmgt.mountd       exec"
                               echo "Command run: /etc/rc.d/rpcbind restart"
                               echo "Command run: /etc/rc.d/nfsd restart"
                               echo "Command run: /etc/rc.d/mountd restart"
                               update_spinner
                               sleep 1
                               update_spinner                              
                               echo "Restarting rpcbind"
                               sleep 1
                               update_spinner
                               sleep 1
                               /etc/rc.d/rpcbind restart
                               update_spinner
                               sleep 1
                               update_spinner                             
                               echo "Restarting mountd"
                               sleep 1
                               update_spinner
                               sleep 1
                               /etc/rc.d/mountd restart
                               update_spinner
                               sleep 1
                               update_spinner
                               echo "Restarting nfs"
                               sleep 1
                               update_spinner
                               sleep 1
                               /etc/rc.d/nfsd restart
                               if [ $? -eq 0 ]; then
                                    echo "##########################################################" >> /var/log/smx-log/success.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Successfuly restarted nfs" >> /var/log/smx-log/success.log
                                    echo "[$(date)] Command run: /etc/rc.d/nfsd restart" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    echo "##########################################################" >> /var/log/smx-log/success.log
                                    echo "" >> /var/log/smx-log/success.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/success.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               else
                                    echo "##########################################################" >> /var/log/smx-log/fail.log
                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Not restarted nfs, check command syntax" >> /var/log/smx-log/fail.log
                                    echo "[$(date)] Command run: /etc/rc.d/nfsd restart" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    echo "##########################################################" >> /var/log/smx-log/fail.log
                                    echo "" >> /var/log/smx-log/fail.log
                                    read -p "Press [enter] to continue..." ReadDamKey
                                    clear
                                    echo
                                    cat /var/log/smx-log/fail.log | tail -n 7
                                    echo
                                    read -p "Press [enter] to continue..." ReadDamKey
                               fi         
                          else
                               echo "Feature not avalible for OS X"
                               read -p "Press [enter] to continue..." ReadDamKey
                               nfs_menu
                          fi
                     fi
                     ;;
           add)
                 clear
                 $(which uname) | grep Linux >> /dev/null
                 if [ $? -eq 0 ]; then
                      clear
                      echo "OS = Linux"
                      cat /proc/version | grep "Red Hat" >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Red Hat"
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo "Share location example: /nfs"
                           echo "Host access example: 192.168.1.0/24"
                           echo "[TOP]                          [Entry Fields]"
                           read -p " Enter share location ------ > " shareLoc
                           read -p " Enter host access --------- > " hostAccess
                           clear
                           echo "         COMMAND STATUS            "
                           echo
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo
                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                           echo
                           echo "Before command completion, additional instructions may appear below"
                           echo
                           echo "File                                Fileset                 Type"
                           echo "----------------------------------------------------------------"
                           echo "$(which service)                    bos.sysmgt.service      exec"
                           echo "Command run: echo '$shareLoc $hostAccess(rw,sync,no_root_squash,no_all_squash)' >> /etc/exports"
                           echo "Command run: $(which service) rpcbind restart"
                           echo "Command run: $(which service) nfslock restart"
                           echo "Command run: $(which service) nfs restart"
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Defining new nfs share: $shareLoc as: $shareLoc $hostAccess(rw,sync,no_root_squash,no_all_squash) in /etc/exports"
                           sleep 1
                           update_spinner
                           echo "$shareLoc $hostAccess(rw,sync,no_root_squash,no_all_squash)" >> /etc/exports
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Restarting rpcbind"
                           sleep 1
                           update_spinner
                           $(which service) rpcbind restart
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Restarting nfslock"
                           sleep 1
                           update_spinner
                           $(which service) nfslock restart
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Restarting nfs"
                           sleep 1
                           update_spinner
                           $(which service) nfs restart
                           echo "###############################################################################################" >> /var/log/smx-log/success.log
                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                           echo "[$(date)] Successfuly created nfs share on system: $(hostname)" >> /var/log/smx-log/success.log
                           echo "[$(date)] Command run: echo '$shareLoc $hostAccess(rw,sync,no_root_squash,no_all_squash)' >> /etc/exports" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           echo "###############################################################################################" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/success.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
                      else
                           clear
                           cat /proc/version | grep "Debian" >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
                                echo "OS = Debian"
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "Share location example: /nfs"
                                echo "Host access example: 192.168.1.0/24"
                                echo "[TOP]                               [Entry Fields]"
                                read -p " Enter share location ----------- > " shareLoc
                                read -p " Enter host access -------------- > " shareAccess
                                clear
                                echo "         COMMAND STATUS                "
                                echo
                                echo "$(date)                                     $(whoami)@$(hostname)"
                                echo
                                echo "Command: RUNNING    stdout: yes    stderr: no     "
                                echo
                                echo "Before command completion, additional instructions may appear below"
                                echo
                                echo "File                                 Fileset                 Type"
                                echo "-----------------------------------------------------------------"
                                echo "$(which service)                     bos.sysmgt.service      exec"
                                echo "Command run: echo '$shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all)' >> /etc/exports"
                                echo "Command run: $(which service) portmap restart"
                                echo "Command run: $(which service) nfs-kernel-server restart"
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "$shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all)" >> /etc/exports
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting portmap"
                                sleep 1
                                update_spinner
                                $(which service) portmap restart
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting nfs-kernel-server"
                                sleep 1
                                update_spinner
                                $(which service) nfs-kernel-server restart
                                echo "#################################################################################################################" >> /var/log/smx-log/success.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                echo "[$(date)] Successfuly created new network share on system: $(hostname)" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: echo '$shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all)' >> /etc/exports" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                echo "#################################################################################################################" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/success.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           else
                                clear
                                cat /proc/version | grep "Ubuntu" >> /dev/null
                                if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Ubuntu"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "Share location example: /nfs"
                                     echo "Host access example: 192.168.1.0/24"
                                     echo "[TOP]                               [Entry Fields]"
                                     read -p " Enter share location ----------- > " shareLoc
                                     read -p " Enter host access -------------- > " shareAccess
                                     clear
                                     echo "         COMMAND STATUS                "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                          Type"
                                     echo "--------------------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: echo '$shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all)' >> /etc/exports"
                                     echo "Command run: $(which service) portmap restart"
                                     echo "Command run: $(which service) nfs-kernel-server restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Defining new nfs share: $shareLoc as: $shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all) in /etc/exports"
                                     sleep 1
                                     update_spinner
                                     echo "$shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all)" >> /etc/exports
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting portmap"
                                     sleep 1
                                     update_spinner
                                     $(which service) portmap restart
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting nfs-kernel-server"
                                     sleep 1
                                     update_spinner
                                     $(which service) nfs-kernel-server restart
                                     echo "#################################################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly created new network share on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: echo '$shareLoc $shareAccess(rw,sync,no_root_squash,no_subtree_check,no_squash_all)' >> /etc/exports" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "#################################################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                else
                                     clear
                                     cat /proc/version | grep "SUSE" >> /dev/null
                                     if [ $? -eq 0 ]; then
                                          clear
                                          echo "OS = SuSE"
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo "Share location example: /nfs"
                                          echo "Host access example: 192.168.1.0/24"
                                          echo "[TOP]                                  [Entry Fields]"
                                          read -p " Enter share location -------------- > " shareLoc
                                          read -p " Enter host access ----------------- > " hostAccess
                                          clear
                                          echo "        COMMAND STATUS                    "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which service)                     bos.sysmgt.service      exec"
                                          echo "Command run: echo '$shareLoc $hostAccess(rw,sync,no_root_squash,no_squash_all)' >> /etc/exports"
                                          echo "Command run: $(which service) rpcbind restart"
                                          echo "Command run: $(which service) nfsserver restart"
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Defining new nfs share: $shareLoc as: $shareLoc $hostAccess(rw,sync,no_root_squash,no_squash_all) in /etc/exports"
                                          sleep 1
                                          update_spinner
                                          echo "$shareLoc $hostAccess(rw,sync,no_root_squash,no_squash_all)" >> /etc/exports
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting rpcbind"
                                          sleep 1
                                          update_spinner
                                          $(which service) rpcbind restart
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting nfsserver"
                                          sleep 1
                                          update_spinner
                                          $(which service) nfsserver restart
                                          echo "###############################################################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfuly created new network share on system: $(hostname)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Command run: echo '$shareLoc $hostAccess(rw,sync,no_root_squash,no_squash_all)' >> /etc/exports" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "###############################################################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     fi
                                fi
                           fi
                      fi
                 else
                      $(which uname) | grep BSD >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = BSD"
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo "Share location example: /nfs"
                           echo "Host access example: 192.168.1.0/24"
                           echo "[TOP]                          [Entry Fields]"
                           read -p " Enter share location ------ > " shareLoc
                           read -p " Enter host access --------- > " hostAccess
                           clear
                           echo "         COMMAND STATUS            "
                           echo
                           echo "$(date)                                     $(whoami)@$(hostname)"
                           echo
                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                           echo
                           echo "Before command completion, additional instructions may appear below"
                           echo
                           echo "File                                Fileset                 Type"
                           echo "----------------------------------------------------------------"
                           echo "/etc/rc.d/mountd                    bos.sysmgt.mountd"
                           echo "Command run: /etc/rc.d/mountd onereload"
                           update_spinner
                           sleep 1
                           update_spinner
                           echo "Restarting nfs"
                           sleep 1
                           update_spinner
                           sleep 1
                           update_spinner
                           /etc/rc.d/mountd onereload
                           if [ $? -eq 0 ]; then
                                echo "#################################################" >> /var/log/smx-log/success.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                echo "[$(date)] Successfuly restarted NFS server" >> /var/log/smx-log/success.log
                                echo "[$(date)] Command run: /etc/rc.d/mountd onereload" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                echo "#################################################" >> /var/log/smx-log/success.log
                                echo "" >> /var/log/smx-log/success.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/success.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           else
                                echo "########################################################" >> /var/log/smx-log/fail.log
                                echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                echo "[$(date)] Not restarted NFS server, check command syntax" >> /var/log/smx-log/fail.log
                                echo "[$(date)] Command run: /etc/rc.d/mountd onereload" >> /var/log/smx-log/fail.log
                                echo "" >> /var/log/smx-log/fail.log
                                echo "########################################################" >> /var/log/smx-log/fail.log
                                echo "" >> /var/log/smx-log/fail.log
                                read -p "Press [enter] to continue..." ReadDamKey
                                clear
                                echo
                                cat /var/log/smx-log/fail.log | tail -n 7
                                echo
                                read -p "Press [enter] to continue..." ReadDamKey
                           fi          
                      else
                           echo "Feature not avalible for OS X"
                           read -p "Press [enter] to continue..." ReadDamKey
                           nfs_menu
                      fi
                 fi
                 ;;
	   remove)
	            clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
                         clear
                         echo "OS = Linux"
                         cat /proc/version | grep "Red Hat" >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              # This will not remove the share, it will just edit it out, so the share is still there, nfs just can't see it, but you know that :-)
                              echo "Share location example: /nfs"
                              echo "[TOP]                               [Entry Fields]"
                              read -p " Enter share location ----------- > " shareLoc
                              clear
                              echo "       COMMAND STATUS         "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which sed)                         bos.sysmgt.sed          exec"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports"
                              echo "Command run: $(which service) rpcbind restart"
                              echo "Command run: $(which service) nfslock restart"
                              echo "Command run: $(which service) nfs restart"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Removing nfs share: $shareLoc"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which sed) -i "s/$shareLoc/#$shareLoc/g" /etc/exports
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Restarting rpcbind"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) rpcbind restart
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Restarting nfslock"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) nfslock restart
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Restarting nfs"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) nfs restart
                              echo "#######################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly removed network share: $shareLoc" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g'" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "#######################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
                         else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = Debian"
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   # This will not remove the share, it will just edit it out, so the share is still there, nfs just can't see it, but you know that :-) #
                                   echo "Share location example: /nfs"
                                   echo "[TOP]                               [Entry Fields]"
                                   read -p " Enter share location ----------- > " shareLoc
                                   clear
                                   echo "       COMMAND STATUS         "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                             Type"
                                   echo "-----------------------------------------------------------------------------"
                                   echo "$(which sed)                         bos.sysmgt.sed                      exec"
                                   echo "$(which service)                     bos.sysmgt.service      exec"
                                   echo "Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports"
                                   echo "Command run: $(which service) portmap restart"
                                   echo "Command run: $(which service) nfs-kernel-server"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Removing nfs share location: $shareLoc"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which sed) -i "s/$shareLoc/#$shareLoc/g" /etc/exports
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Restarting portmap"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which service) portmap restart
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Restarting nfs-kernel-server"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which service) nfs-kernel-server restart
                                   echo "#######################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly removed network share: $shareLoc" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g'" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "#######################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   clear
                                   cat /proc/version | grep "Ubuntu" >> /dev/null
                                   if [ $? -eq 0 ]; then
                                        clear
                                        echo "OS = Ubuntu"
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        # This will not remove the share, it will just edit it out, so the share is still there, nfs just can't see it, but you know that :-) #
                                        echo "Share location example: /nfs"
                                        echo "[TOP]                               [Entry Fields]"
                                        read -p " Enter share location ----------- > " shareLoc
                                        clear
                                        echo "       COMMAND STATUS         "
                                        echo
                                        echo "$(date)                                     $(whoami)@$(hostname)"
                                        echo
                                        echo "Command: RUNNING    stdout: yes    stderr: no     "
                                        echo
                                        echo "Before command completion, additional instructions may appear below"
                                        echo
                                        echo "File                                 Fileset                             Type"
                                        echo "-----------------------------------------------------------------------------"
                                        echo "$(which sed)                         bos.sysmgt.sed                      exec"
                                        echo "$(which service)                     bos.sysmgt.service      exec"
                                        echo "Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports"
                                        echo "Command run: $(which service) portmap restart"
                                        echo "Command run: $(which service) nfs-kernel-server"
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Removing nfs share location: $shareLoc"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which sed) -i "s/$shareLoc/#$shareLoc/g" /etc/exports
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Restarting portmap"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which service) portmap restart
                                        update_spinner
                                        sleep 1
                                        update_spinner
                                        echo "Restarting nfs-kernel-server"
                                        sleep 1
                                        update_spinner
                                        sleep 1
                                        $(which service) nfs-kernel-server restart
                                        echo "#######################################################" >> /var/log/smx-log/success.log
                                        echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Successfuly removed network share: $shareLoc" >> /var/log/smx-log/success.log
                                        echo "[$(date)] Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g'" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        echo "#######################################################" >> /var/log/smx-log/success.log
                                        echo "" >> /var/log/smx-log/success.log
                                        read -p "Press [enter] to continue..." ReadDamKey
                                        clear
                                        echo
                                        cat /var/log/smx-log/success.log | tail -n 7
                                        echo
                                        read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        clear
                                        cat /proc/version | grep "SUSE" >> /dev/null
                                        if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             # This will not remove the share, it will just edit it out, so the share is still there, nfs just can't see it, but you know that :-) #
                                             echo "Share location example: /nfs"
                                             echo "[TOP]                               [Entry Fields]"
                                             read -p " Enter share location ----------- > " shareLoc
                                             clear
                                             echo "       COMMAND STATUS         "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which sed)                         bos.sysmgt.sed          exec"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports"
                                             echo "Command run: $(which service) rpcbind restart"
                                             echo "Command run: $(which service) nfsserver restart"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Removing nfs share: $shareLoc"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which sed) -i "s/$shareLoc/#$shareLoc/g" /etc/exports
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Restarting rpcbind"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) rpcbind restart
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Restarting nfsserver"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) nfsserver restart
                                             echo "#######################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly removed network share: $shareLoc" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g'" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "#######################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                        fi
                                   fi
                              fi
                         fi
                    else
                         $(which uname) | grep BSD >> /dev/null
                         if [ $? -eq 0 ]; then
                              clear
                              echo "OS = BSD"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "Share location example: /nfs"
                              echo "[TOP]                                      [Entry Fields]"
                              read -p " Enter share location ------------------ > " shareLoc
                              clear
                              echo "         COMMAND STATUS               "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which sed)                         bos.sysmgt.sed          exec"
                              echo "/etc/rc.d/mountd                     bos.sysmgt.mountd       exec"
                              echo "Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports"
                              echo "Command run: /etc/rc.d/mountd onereload"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Removing nfs share: $shareLoc"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which sed) -i "s/$shareLoc/#$shareLoc/g" /etc/exports
                              update_spinner
                              sleep 1
                              update_spinner
                              /etc/rc.d/mountd onereload
                              if [ $? -eq 0 ]; then
                                   echo "##############################################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly removed mount point: $shareLoc" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "##############################################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "##############################################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not remove mount point: $shareLoc" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: $(which sed) -i 's/$shareLoc/#$shareLoc/g' /etc/exports" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "##############################################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi          
                         else
                              echo "Feature not avalible for OS X"
                              read -p "Press [enter] to continue..." ReadDamKey
                              nfs_menu
                         fi
                    fi
                    ;;
           help)
                  echo "install > Install NFS server on system"
                  echo "start > Start NFS"
                  echo "stop > Stop NFS"
                  echo "restart > Restart NFS"
                  echo "add > Add network share to /etc/exports"
                  echo "remove > Remove network share from /etc/exports"
                  echo "help > This menu"
                  echo "exit > Exit back to srv_mgt"
                  echo "exit-mas > Exit back to shell"
                  read -p "Press [enter] to continue..." ReadDamKey
                  ;;         
	   exit)
    	          clear
        	  echo "#######################################################" >> /var/log/smx-log/exit.log
                  echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                  echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/nfs_menu" >> /var/log/smx-log/exit.log
            	  echo "" >> /var/log/smx-log/exit.log
                  echo "#######################################################" >> /var/log/smx-log/exit.log
                  echo "" >> /var/log/smx-log/exit.log
                  srv_menu
                  ;;
	   exit-mas)
    	              clear
        	      echo "#################################" >> /var/log/smx-log/exit.log
                      echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                      echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
                      echo "" >> /var/log/smx-log/exit.log
                      echo "#################################" >> /var/log/smx-log/exit.log
                      echo "" >> /var/log/smx-log/exit.log
                      exit 0
                      ;;
	   *)        clear
             	     echo "          COMMAND STATUS         "
            	     echo
            	     echo "$(date)                                     $(whoami)@$(hostname)"
            	     echo
            	     echo "Command: FAIL    stdout: yes    stderr: no       "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "Unkonwn command, please consult the command list, executed with pid - 3662 (0x1)"
                     read -p "Press [enter] to continue..." ReadDamKey;;
       esac
   done
}

function nis_menu() {
    while :
    do
	clear
    	echo "$(date)                                     $(whoami)@$(hostname)"
    	echo
    	read -p "$(whoami)@$(hostname):smx/nis_menu" choice_nis
    	echo
	
    	case "$choice_nis" in
    	    install)
		      clear
                      $(which uname) | grep Linux >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Linux"
                           cat /proc/version | grep "Red Hat" > /dev/null
                           if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "[TOP]                                                 [Entry Fields]"
				read -p " Enter system role ---------------- (server/client) > " ans
				if [ "$ans" = "server" ]; then
                                      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Domain name example: domain.local"
                                      echo "IP address example: 192.168.1.110"
                                      echo "IP class example: 192.168.1.0"
                                      echo "Netmask range example: 255.255.255.0"
                                      echo "Hostname example: nisServer"
                                      echo "FQDN example: nisServer.domain.local"
                                      echo "[TOP]                                                                                              [Entry Fields]"
                                      read -p " Enter domain name ----------------------------------------------------------------------------- > " dnsName
                                      read -p " Enter IP class -------------------------------------------------------------------------------- > " ipClass
                                      read -p " Enter netmask --------------------------------------------------------------------------------- > " netMask
                                      printf " Enter network interface [Default: eth0] -------------------------------------------------------- > "
                                      if [ "$netIntf" = "" ]; then
                                            NET_INTF=""
                                            read netIntf
                                            NET_INTF=$netIntf
                                      fi
                                      if [ "$netIntf" = "" ]; then
                                            NET_INTF=""
                                            NET_INTF=eth0
                                      fi            
                                      printf " Enter IP address [Default: $(ifconfig $NET_INTF | awk '/inet / { print $2 }' | sed 's/addr://')] > "
                                      if [ "$ipAddr" = "" ]; then
                                            IP_ADDR=""
                                            read ipAddr
                                            IP_ADDR=$ipAddr
                                      fi
                                      if [ "$ipAddr" = "" ]; then
                                            IP_ADDR=""
                                            IP_ADDR=$(ifconfig $NET_INTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                      fi      
                                      printf " Enter hostname [Default: $(hostname)] ---------------------------------------------------------- > "
                                      if [ "$hostName" = "" ]; then
                                            HOST_NAME=""
                                            read hostName
                                            HOST_NAME=$hostName
                                      fi
                                      if [ "$hostName" = "" ]; then
                                            HOST_NAME=""
                                            HOST_NAME=$(hostname)
                                      fi      
                                      read -p " Enter FQDN ------------------------------------------------------------------------------------ > " fqdnName
                                      clear
                                      echo "         COMMAND STATUS         "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.sed          exec"
                                      echo "$(which ypdomainname)                bos.sysmgt.ypdoamnname  exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                      echo "/usr/lib64/yp/ypinit                 bos.sysmgt.ypinit       exec"
                                      echo "Command run: $(which yum) -y install ypserv rpcbind | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which ypdomainname) $dnsName"
                                      echo "Command run: $(which service) rpcbind restart"
                                      echo "Command run: $(which service) ypserv restart"
                                      echo "Command run: $(which service) yppasswdd restart"
                                      echo "Command run: $(which chkconfig) rpcbind on"
                                      echo "Command run: $(which chkconfig) ypserv on"
                                      echo "Command run: $(which chkconfig) yppasswdd on"
                                      echo "Command run: /usr/lib64/yp/ypinit -m"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing packages: ypserv and rpcbind"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install ypserv rpcbind | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
                                           echo "###############################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly installed NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which yum) -y install ypserv rpcbind | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "###############################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not installed NIS on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which yum) -y install ypserv rpcbind | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting domain name: $dnsName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which ypdomainname) $dnsName
                                      echo "NISDOMAIN=$dnsName" >> /etc/sysconfig/network
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting MERGE_PASSWD to false"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/MERGE_PASSWD=true/MERGE_PASSWD=false/g' /var/yp/Makefile
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting MERGE_GROUP to false"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/MERGE_GROUP=true/MERGE_GROUP=false/g' /var/yp/Makefile
                                      $(which sed) -i 's/all:  passwd group hosts rpc services netid protocols mail/all:  passwd shadow group hosts rpc services netid protocols mail/g' /var/yp/Makefile
                                      $(which sed) -i 's,etc/mail/aliases,etc/aliases,g' /var/yp/Makefile
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining netmask address: $netMask and ip class: $ipClass in /var/yp/securenets"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "$netMask  $ipClass" >> /var/yp/securenets
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining: $IP_ADDR, $HOST_NAME $fqdnName in /etc/hosts"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "$IP_ADDR   $HOST_NAME $fqdnName" >> /etc/hosts
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting rpcbind"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) rpcbind restart
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting ypserv"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) ypserv restart
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting yppasswdd"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) yppasswdd restart
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting rpcbind to start on startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) rpcbind on
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting ypserv to start on startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) ypserv on
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting yppasswdd to start on startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) yppasswdd on
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Initializing YP server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      /usr/lib64/yp/ypinit -m
                                      clear
                                      echo "NIS successfuly configured on system: $(hostname)"
                                      read -p "Press [enter] to continue..." ReadDamKey
				else
                                      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Domain name example: domain.local"
                                      echo "NIS server name example: nis.domain.local"
                                      echo "[TOP]                                   [Entry Fields]"
                                      read -p " Enter domain name ------------------ > " dnsName
                                      read -p " Enter NIS server name -------------- > " nisSrvName
                                      read -p " Reboot after completion -------- (Y/N) " ansReboot
                                      clear
                                      echo "         COMMAND STATUS                "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "/usr/lib64/yp/ypinit                 bos.sysmgt.ypinit       exec"
                                      echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                      echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                      echo "Command run: $(which yum) -y install ypserv ypbind rpcbind | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: /usr/lib64/yp/ypinit -s $nisSrvName"
                                      echo "Command run: $(which chkconfig) rpcbind on"
                                      echo "Command run: $(which chkconfig) ypbind on"
                                      echo "Command run: $(which reboot) -f --verbose now"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing packages: ypserv, ypbind and rpcbind"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install ypserv ypbind rpcbind | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
                                           echo "######################################################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly set up NIS client on system: $(hostname)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which yum) -y install ypserv ypbind rpcbind | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "######################################################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "######################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/fail.log
                                           echo "Not set up NIS client on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                           echo "Command run: $(which yum) -y install ypserv ypbind rpcbind | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "######################################################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining domain name as: $dnsName in /etc/sysconfig/network"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "NISDOMAIN=$dnsName" >> /etc/sysconfig/network
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting USENIS to: yes"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/USENIS=no/USENIS=yes/g' >> /etc/sysconfig/authconfig
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining domain name: $dnsName and NIS server as: $nisSrvName in: /etc/yp.conf"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "domain $dnsName server $nisSrvName" >> /etc/yp.conf
                                      $(which sed) -i 's/passwd:     files/passwd:     files nis/g' /etc/nsswitch.conf
                                      $(which sed) -i 's/shadow:     files/shadow:     files nis/g' /etc/nsswitch.conf
                                      $(which sed) -i 's/group:      files/group:      files nis/g' /etc/nsswitch.conf
                                      $(which sed) -i 's/hosts:      files dns/hosts:      files dns nis/g' /etc/nsswitch.conf
                                      echo "session optional pam_mkhomedir.so skel=/etc/skel umask=077" >> /etc/pam.d/system-auth
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Initializing YP server, with YP server as: $nisSrvName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      /usr/lib64/yp/ypinit -s $nisSrvName
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting rpcbind to start on startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) rpcbind on
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting ypbind to start on startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) ypbind on
                                      clear
                                      echo "NIS successfuly configured on system: $(hostname)"
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      if [ "$ansReboot" = "Y" ]; then
                                            $(which reboot) -f --verbose now
                                      else
                                            echo "System will not reboot, Cannot be used as NIS client untill next reboot!!"
                                            read -p "Press [enter] to continue..." ReadDamKey
                                      fi      
				fi
                           else
                                clear
				cat /proc/version | grep "Debian" > /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "[TOP]                                   [Entry Fields]"
                                     read -p " Enter system role ------------------ > (server/client) > " ans
                                     if [ "$ans" = "server" ]; then
                                           clear
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo "ip class example: 192.168.1.0"
                                           echo "netmask example: 255.255.255.0"
                                           echo "Server ip address example: 192.168.1.110"
                                           echo "FQDN name example: nis.domain.local"
                                           echo "Server name example: nis"
                                           echo "[TOP]                                                                                               [Entry Fields]"
                                           read -p " Enter server ip class -------------------------------------------------------------------------- > " ipClass
                                           read -p " Enter netmask ---------------------------------------------------------------------------------- > " netMask
                                           printf " Enter network interface [Default: eth0] --------------------------------------------------------- > "
                                           if [ "$netIntf" = "" ]; then
                                                 NET_INTF=""
						 read netIntf
						 NET_INTF=$netIntf
                                           fi
                                           if [ "$netIntf" = "" ]; then
                                                 NET_INTF=""
						 NET_INTF=eth0
                                           fi           
                                           printf " Enter IP address [Default: $(ifconfig $NET_INTF | awk '/inet / { print $2 }' | sed 's/addr://')]) > "
                                           if [ "$ipAddr" = "" ]; then
                                                 IP_ADDR=""
						 read ipAddr
						 IP_ADDR=$ipAddr
                                           fi
                                           if [ "$ipAddr" = "" ]; then
                                                 IP_ADDR=""
						 IP_ADDR=$(ifconfig $NET_INTF | awk '/inet / { print $2 } ' | sed 's/addr://')
                                           fi      
                                           read -p " Enter server FQDN name ------------------------------------------------------------------------- > " fqdnName
                                           printf " Enter hostname [Default: $(hostname) ------------------------------------------------------------ > "
                                           if [ "$hostName" = "" ]; then
                                                 HOST_NAME=""
						 read hostName
						 HOST_NAME=$hostName
                                           fi
                                           if [ "$hostName" = "" ]; then
                                                 HOST_NAME=""
						 HOST_NAME=$(hostname)
                                           fi      
                                           clear
                                           echo "         COMMAND STATUS                    "
                                           echo
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo
                                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                                           echo
                                           echo "Before command completion, additional instructions may appear below"
                                           echo
                                           echo "File                                 Fileset                 Type"
                                           echo "-----------------------------------------------------------------"
                                           echo "$(which apt-get)                    bos.pkgmgt.apt-get       exec"
                                           echo "$(which sed)                        bos.sysmgt.sed           exec"
                                           echo "/usr/lib/yp/ypinit                  bos.sysmgt.ypinit        exec"
                                           echo "$(which service)                     bos.sysmgt.service      exec"
                                           echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log"
                                           echo "Command run: /usr/lib/yp/ypinit -m"
                                           echo "Command run: $(which service) nis start"
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Installing packages: nis and portmap"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log
                                           if [ $PIPESTATUS -eq 0 ]; then
                                                echo "####################################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "successfuly installed NIS on system: $(hostname)" >> /var/log/smx-log/success.log
						echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "####################################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
                                           else
                                                echo "####################################################################################################" >> /var/log/smx-log/fail.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						echo "[$(date)] Not installed NIS on system: $(hostname), check command synatax" >> /var/log/smx-log/fail.log
						echo "[$(date)] Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						echo "####################################################################################################" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/fail.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
						exit 1
                                           fi
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Setting NISSERVER to true"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which sed) -i 's/NISSERVER=false/NISSERVER=true/g' /etc/default/nis
                                           $(which sed) -i 's/0.0.0.0/#0.0.0.0/g' /etc/ypserv.securenets
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Setting netmask: $netMask and ip class: $ipClass in /etc/ypserv.securenets"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           echo "$netMask $ipClass" >> /etc/ypserv.securenets
                                           $(which sed) -i 's/ALL =   passwd group hosts rpc services netid protocols netgrp/ALL =   passwd shadow group hosts rpc services netid protocols netgrp/g' /var/yp/Makefile
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Setting IP address: $IP_ADDR, $fqdnName and $HOST_NAME in /etc/hosts"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           echo "$IP_ADDR $fqdnName $HOST_NAME" >> /etc/hosts
                                           /usr/lib/yp/ypinit -m
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Starting NIS"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which serivce) nis start
                                           clear
                                           echo "NIS successfuly configured on system: $(hostname)"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                           clear
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo "Domain name example: domain.local"
                                           echo "NIS server name example: nis.domain.local"
                                           echo "[TOP]                                      [Entry Fields]"
                                           read -p " Enter domain name --------------------- > " dnsName
                                           read -p " Enter NIS server name ----------------- > " nisSrvName
                                           read -p " Reboot after completion --------- (Y/N) > " ansReboot
                                           clear
                                           echo "         COMMAND STATUS                  "
                                           echo
                                           echo "$(date)                                     $(whoami)@$(hostname)"
                                           echo
                                           echo "Command: RUNNING    stdout: yes    stderr: no     "
                                           echo
                                           echo "Before command completion, additional instructions may appear below"
                                           echo
                                           echo "File                                 Fileset                 Type"
                                           echo "-----------------------------------------------------------------"
                                           echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                           echo "$(which sed)                         bos.sysmgt.sed          exec"
                                           echo "$(which update-rc.d)                 bos.sysmgt.update-rc.d  exec"
                                           echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                           echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log"
                                           echo "Command run: $(which update-rc.d) portmap defaults 10"
                                           echo "Command run: $(which reboot) -f --verbose now"
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Installing packages: nis and portmap"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log
                                           if [ $PIPESTATUS -eq 0 ]; then
                                                echo "#####################################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly installed NIS on system: $(hostname)" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/success.log" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "####################################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
                                           else
                                                echo "####################################################################################################" >> /var/log/smx-log/fail.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						echo "[$(date)] Not installed NIS on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
						echo "[$(date)] Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						echo "####################################################################################################" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/fail.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
						exit 1
                                           fi
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Defining domain name: $dnsName, and setting NIS server name to: $nisSrvName"
                                           sleep 1
                                           update_spinner
                                           sleep 1
                                           echo "domain $dnsName server $nisSrvName" >> /etc/yp.conf
                                           $(which sed) -i 's/passwd:/#passwd:/g' /etc/nsswitch.conf
                                           $(which sed) -i 's/group:/#group:/g' /etc/nsswitch.conf
                                           $(which sed) -i 's/shadow:/#shadow:/g' /etc/nsswitch.conf
                                           echo "passwd: compat nis" >> /etc/nsswitch.conf
                                           echo "group: compat nis" >> /etc/nsswitch.conf
                                           echo "shadow: compat nis" >> /etc/nsswitch.conf
                                           echo "session optional pam_mkhomedir.so skel=/etc/skel umask=077" >> /etc/pam.d/common-session
                                           update_spinner
                                           sleep 1
                                           update_spinner
                                           echo "Setting portmap default to 10"
                                           sleep 1
                                           update_spinner
                                           sleep 
                                           $(which update-rc.d) portmap defaults 10
                                           clear
                                           echo "NIS successfuly configured on system: $(hostname)"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           if [ "$ansReboot" = "Y" ]; then
                                                 $(which reboot) -f --verbose now
                                           else
                                                 echo "System will not reboot, Cannot be used as NIS client until next reboot!!"
						 read -p "Press [enter] to continue..." ReadDamKey
                                           fi      
                                     fi
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" > /dev/null
                                     if [ $? -eq 0 ]; then
                                          clear
                                          echo "OS = Ubuntu"
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo "[TOP]                                   [Entry Fields]"
                                          read -p " Enter system role ------------------ > (server/client) > " ans
                                          if [ "$ans" = "server" ]; then
                                                clear
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "ip class example: 192.168.1.0"
						echo "netmask example: 255.255.255.0"
						echo "Server ip address example: 192.168.1.110"
						echo "FQDN name example: nis.domain.local"
						echo "Server name example: nis"
						echo "[TOP]                                                                                               [Entry Fields]"
						read -p " Enter server ip class -------------------------------------------------------------------------- > " ipClass
						read -p " Enter netmask ---------------------------------------------------------------------------------- > " netMask
						printf " Enter network interface [Default: eth0] --------------------------------------------------------- > "
						if [ "$netIntf" = "" ]; then
                                                      NET_INTF=""
                                                      read netIntf
                                                      NET_INTF=$netIntf
						fi
						if [ "$netIntf" = "" ]; then
                                                      NET_INTF=""
                                                      NET_INTF=eth0
						fi           
						printf " Enter IP address [Default: $(ifconfig $NET_INTF | awk '/inet / { print $2 }' | sed 's/addr://')]) > "
						if [ "$ipAddr" = "" ]; then
                                                      IP_ADDR=""
                                                      read ipAddr
                                                      IP_ADDR=$ipAddr
						fi
						if [ "$ipAddr" = "" ]; then
                                                      IP_ADDR=""
                                                      IP_ADDR=$(ifconfig $NET_INTF | awk '/inet / { print $2 } ' | sed 's/addr://')
						fi      
						read -p " Enter server FQDN name ------------------------------------------------------------------------- > " fqdnName
						printf " Enter hostname [Default: $(hostname) ------------------------------------------------------------ > "
						if [ "$hostName" = "" ]; then
                                                      HOST_NAME=""
                                                      read hostName
                                                      HOST_NAME=$hostName
						fi
						if [ "$hostName" = "" ]; then
                                                      HOST_NAME=""
                                                      HOST_NAME=$(hostname)
						fi      
						clear
						echo "         COMMAND STATUS                    "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which apt-get)                    bos.pkgmgt.apt-get       exec"
						echo "$(which sed)                        bos.sysmgt.sed           exec"
						echo "/usr/lib/yp/ypinit                  bos.sysmgt.ypinit        exec"
					        echo "$(which service)                     bos.sysmgt.service      exec"
						echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log"
						echo "Command run: /usr/lib/yp/ypinit -m"
						echo "Command run: $(which service) nis start"
						update_spinner
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						echo "Installing packages nis and portmap"
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						sleep 1
						$(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log
						if [ $PIPESTATUS -eq 0 ]; then
                                                     echo "####################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                                                     echo "successfuly installed NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                                     echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "####################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						else
                                                     echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/fail.log
                                                     echo "Not installed NIS on system: $(hostname), check command synatax" >> /var/log/smx-log/fail.log
                                                     echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     exit 1
						fi
						update_spinner
						sleep 1
						update_spinner
						echo "Setting NISSERVER to true"
						sleep 1
						update_spinner
						sleep 1
						$(which sed) -i 's/NISSERVER=false/NISSERVER=true/g' /etc/default/nis
						$(which sed) -i 's/0.0.0.0/#0.0.0.0/g' /etc/ypserv.securenets
						update_spinner
						sleep 1
						update_spinner
						echo "Defining netmask: $netMask and IP class: $ipClass in /etc/ypserv.securenets"
						sleep 1
						update_spinner
						sleep 1
						echo "$netMask $ipClass" >> /etc/ypserv.securenets
						$(which sed) -i 's/ALL =   passwd group hosts rpc services netid protocols netgrp/ALL =   passwd shadow group hosts rpc services netid protocols netgrp/g' /var/yp/Makefile
						update_spinner
						sleep 1
						update_spinner
						echo "Defining: $IP_Address $fqdnName and $HOST_NAME in /etc/hosts"
						sleep 1
						update_spinner
						sleep 1
						echo "$IP_ADDR $fqdnName $HOST_NAME" >> /etc/hosts
						update_spinner
						sleep 1
						update_spinner
						echo "Initalizing NIS"
						sleep 1
						update_spinner
						sleep 1
						/usr/lib/yp/ypinit -m
					        $(which service) nis start
						clear
						echo "NIS successfuly configured on system: $(hostname)"
						read -p "Press [enter] to continue..." ReadDamKey
                                          else
                                                clear
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "Domain name example: domain.local"
						echo "NIS server name example: nis.domain.local"
						echo "[TOP]                                      [Entry Fields]"
						read -p " Enter domain name --------------------- > " dnsName
						read -p " Enter NIS server name ----------------- > " nisSrvName
						read -p " Reboot after completion --------- (Y/N) > " ansReboot
						clear
						echo "         COMMAND STATUS                  "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
						echo "$(which sed)                         bos.sysmgt.sed          exec"
						echo "$(which update-rc.d)                 bos.sysmgt.update-rc.d  exec"
						echo "$(which reboot)                      bos.sysmgt.reboot       exec"
						echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log"
						echo "Command run: $(which update-rc.d) portmap defaults 10"
						echo "Command run: $(which reboot) -f --verbose now"
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						echo "Installing packages: nis and portmap"
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						sleep 1
						$(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log
						if [ $PIPESTATUS -eq 0 ]; then
                                                     echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                                                     echo "successfuly installed NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                                     echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/success.log" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "####################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						else
                                                     echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/fail.log
                                                     echo "Not installed NIS on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "Command run: $(which apt-get) -y install nis portmap | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "####################################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     exit 1
						fi
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						echo "Setting domain name to: $dnsName, and NIS server name to: $nisSrvName"
						sleep 1
						update_spinner
						sleep 1
						echo "domain $dnsName server $nisSrvName" >> /etc/yp.conf
						$(which sed) -i 's/passwd:/#passwd:/g' /etc/nsswitch.conf
						$(which sed) -i 's/group:/#group:/g' /etc/nsswitch.conf
						$(which sed) -i 's/shadow:/#shadow:/g' /etc/nsswitch.conf
						echo "passwd: compat nis" >> /etc/nsswitch.conf
						echo "group: compat nis" >> /etc/nsswitch.conf
						echo "shadow: compat nis" >> /etc/nsswitch.conf
						echo "session optional pam_mkhomedir.so skel=/etc/skel umask=077" >> /etc/pam.d/common-session
						sleep 1
						update_spinner
						sleep 1
						update_spinner
						echo "Setting Portmap defaults to 10"
						sleep 1
						update_spinner
						sleep 1
						$(which update-rc.d) portmap defaults 10
						clear
						echo "NIS successfuly configured on system: $(hostname)"
						read -p "Press [enter] to continue..." ReadDamKey
						if [ "$ansReboot" = "Y" ]; then
                                                      $(which reboot) -f --verbose now
						else
                                                     echo "System will not reboot, Cannot be used as NIS client until next reboot!!"
                                                     read -p "Press [enter] to continue..." ReadDamKey
						fi      
                                          fi
                                     else
                                          clear
                                          cat /proc/version | grep "SUSE" > /dev/null
                                          if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "[TOP]                                 [Entry Fields]"
                                               read -p " Enter system role ---------------- (server/client) > " ans
                                               if [ "$ans" = "server" ]; then
                                                     clear
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo "Domain name example: domain.local"
                                                     echo "Netmask example: 255.255.255.0"
                                                     echo "IP class example: 192.168.1.0"
                                                     echo "[TOP]                                 [Entry Fields]"
                                                     read -p " Enter domain name ---------------- > " dnsName
                                                     read -p " Enter netmask -------------------- > " netMask
                                                     read -p " Enter IP address class ----------- > " ipClass
                                                     clear
                                                     echo "         COMMAND STATUS                   "
                                                     echo
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo
                                                     echo "Command: OK    stdout: yes    stderr: no          "
                                                     echo
                                                     echo "Before command completion, additional instructions may appear below"
                                                     echo
                                                     echo "File                                 Fileset                 Type"
                                                     echo "-----------------------------------------------------------------"
                                                     echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                     echo "$(which ypdomainname)                bos.sysmgt.ypdomainname exec"
                                                     echo "$(which sed)                         bos.sysmgt.sed          exec"
                                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                                     echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                                     echo "/usr/lib/yp/ypinit                   bos.sysmgt.ypinit       exec"
                                                     echo "Command run: $(which zypper) in -y ypserv | $(which tee) /var/log/smx-log/zypper.log"
                                                     echo "Command run: $(which ypdomainname) $dnsName"
                                                     echo "Command run: $(which service) rpcbind restart"
                                                     echo "Command run: $(which service) ypserv restart"
                                                     echo "Command run: $(which service) yppasswdd restart"
                                                     echo "Command run: $(which chkconfig) rpcbind on"
                                                     echo "Command run: $(which chkconfig) ypserv on"
                                                     echo "Command run: $(which chkconfig) yppasswdd on"
                                                     echo "Command run: /usr/lib/yp/ypinit -m"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "Installing package: ypserv"
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which zypper) in -y ypserv | $(which tee) /var/log/smx-log/zypper.log
                                                     if [ $PIPESTATUS -eq 0 ]; then
                                                          echo "########################################################################################" >> /var/log/smx-log/success.log
                                                          echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                                                          echo "successfuly installed NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                                          echo "Command run: $(which zypper) in -y ypserv | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                          echo "" >> /var/log/smx-log/success.log
                                                          echo "########################################################################################" >> /var/log/smx-log/success.log
                                                          echo "" >> /var/log/smx-log/success.log
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                          clear
                                                          echo
                                                          cat /var/log/smx-log/success.log | tail -n 7
                                                          echo
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                     else
                                                          echo "########################################################################################" >> /var/log/smx-log/fail.log
                                                          echo "$(whoami)@$(hostname)@$(hostname)" >> /var/log/smx-log/fail.log
                                                          echo "Not installed NIS on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                          echo "Command run: $(which zypper) in -y ypserv | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                          echo "" >> /var/log/smx-log/fail.log
                                                          echo "########################################################################################" >> /var/log/smx-log/fail.log
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                          clear
                                                          echo
                                                          cat /var/log/smx-log/fail.log | tail -n 7
                                                          echo
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                          exit 1
                                                     fi
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting YP domain name to: $dnsName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which ypdomainname) $dnsName
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting DNS name to: $dnsName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "$dnsName" >> /etc/defaultdomain
                                                     $(which sed) -i 's/MERGE_PASSWD=true/MERGE_PASSWD=false/g' /var/yp/Makefile
                                                     $(which sed) -i 's/MERGE_GROUP=true/MERGE_GROUP-false/g' /var/yp/Makefile
                                                     $(which sed) -i 's/ALL =   passwd group hosts rpc services netid protocols netgrp/ALL =   passwd shadow group hosts rpc services netid protocols netgrp/g' /var/yp/Makefile
                                                     $(which sed) -i 's/0.0.0.0/#0.0.0.0/g' /var/yp/securenets
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting netmask to: $netMask, and ip class to: $ipClass"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "$netMask  $ipClass" >> /var/yp/securenets
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Restarting rpcbind"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which service) rpcbind restart
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Restarting ypserv"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which service) ypserv restart
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Restarting yppasswdd"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which service) yppasswdd restart
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Initializing NIS"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     /usr/lib/yp/ypinit -m
                                                     clear
                                                     echo "NIS successfuly installed on system: $(hostname)"
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                               else
                                                     clear
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo "Domain name example: domain.local"
                                                     echo "NIS server name example: nis.domain.local"
                                                     echo "[TOP]                                  [Entry Fields]"
                                                     read -p " Enter domain name ----------------- > " dnsName
                                                     read -p " Enter NIS server name ------------- > " nisSrvName
                                                     read -p " Reboot after completion ----- (Y/N) > " ansReboot
                                                     clear
                                                     echo "         COMMAND STATUS                 "
                                                     echo
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo
                                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                     echo
                                                     echo "Before command completion, additional instructions may appear below"
                                                     echo
                                                     echo "File                                 Fileset                 Type"
                                                     echo "-----------------------------------------------------------------"
                                                     echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                     echo "$(which sed)                         bos.sysmgt.sed          exec"
                                                     echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                                     echo "$(which reboot)                      bos.sysmgt.reboot       exec"
                                                     echo "Command run: $(which zypper) in -y ypbind rpcbind | $(which tee) /var/log/smx-log/zypper.log"
                                                     echo "Command run: $(which chkconfig) rpcbind on"
                                                     echo "Command run: $(which chkconfig) ypbind on"
                                                     echo "Command run: $(which reboot) -f --verbose now"
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Installing package: ypbind and rpcbind"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which zypper) in -y ypbind rpcbind | $(which tee) /var/log/smx-log/zypper.log
                                                     if [ $PIPESTATUS -eq 0 ]; then
                                                          echo "################################################################################################" >> /var/log/smx-log/success.log
                                                          echo "$(date)::$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                                                          echo "successfuly NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                                          echo "Command run: $(which zypper) in -y ypbind rpcbind | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
                                                          echo "" >> /var/log/smx-log/success.log
                                                          echo "################################################################################################" >> /var/log/smx-log/success.log
                                                          echo "" >> /var/log/smx-log/success.log
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                          clear
                                                          echo
                                                          cat /var/log/smx-log/success.log | tail -n 7
                                                          echo
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                     else
                                                          echo "################################################################################################" >> /var/log/smx-log/fail.log
                                                          echo "$(date)::$(whoami)@$(hostname)"  >> /var/log/smx-log/fail.log
                                                          echo "Not installed NIS on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                          echo "Command run: $(which zypper) in -y ypbind rpcbind | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
                                                          echo "" >> /var/log/smx-log/fail.log
                                                          echo "################################################################################################" >> /var/log/smx-log/fail.log
                                                          echo "" >> /var/log/smx-log/fail.log
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                          clear
                                                          echo
                                                          cat /var/log/smx-log/fail.log | tail -n 7
                                                          echo
                                                          read -p "Press [enter] to continue..." ReadDamKey
                                                          exit 1
                                                     fi
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting DNS name to: $dnsName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "$dnsName" >> /etc/defaultdomain
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting DNS name to: $dnsName, and NIS server name to: $nisSrvName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "domain $dnsName server $nisSrvName" >> /etc/yp.conf
                                                     $(which sed) -i 's/passwd:/#passwd:/g' /etc/nsswitch.conf
                                                     $(which sed) -i 's/group:/#group:/g' /etc/nsswitch.conf
                                                     $(which sed) -i 's/shadow:/#shadow:/g' /etc/nsswitch.conf
                                                     echo "passwd: compat nis" >> /etc/nsswitch.conf
                                                     echo "group: compat nis" >> /etc/nsswitch.conf
                                                     echo "shadow: compat nis" >> /etc/nsswitch.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting rpcbind to start at startup"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which chkconfig) rpcbind on
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting ypbind to start at startup"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which chkconfig) ypbind on
                                                     clear
                                                     echo "NIS successfuly installed on system: $(hostname)"
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     if [ "$ansReboot" = "Y" ]; then
                                                           $(which reboot) -f --verbose now
                                                     else
                                                           echo "System will not reboot, Cannot be used as NIS client until next reboot"
                                                           read -p "Press [enter] to continue..." ReadDamKey
                                                     fi      
                                               fi
                                          fi
                                     fi 
				fi
                           fi
                      else
                           $(which uname) | grep BSD >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
				echo "OS = BSD"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "[TOP]                                     [Entry Fields]"
				read -p " Enter system role (server/client) ---- > " ans
				if [ "$ans" = "server" ]; then
                                      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "[TOP]                                    [Entry Fields]"
                                      read -p " Enter NIS domain name --------------- > " NISDomainName
                                      echo "         COMMAND STATUS                     "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
                                      echo "/etc/rc.d/ypserv                     bos.sysmgt.ypserv       exec"
                                      echo "cp                                   bos.sysmgt.cp           exec"
                                      echo "$(which touch)                       bos.sysmgt.touch        exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which make)                        bos.sysmgt.make         exec"
                                      echo "$(which ypinit)                      bos.sysmgt.ypinit       exec"
                                      echo "Command run: $(which sysrc) rpcbind_enable=YES"
                                      echo "Command run: $(which sysrc) NISDomainName=+$NISDomainName"
                                      echo "Command run: $(which sysrc) nis_server_enable=YES"
                                      echo "Command run: $(which sysrc) nis_ypasswdd_enable=YES"
                                      echo "Command run: $(which sysrc) nis_ypasswdd_flags='-v -u -d +$NISDomainName'"
                                      echo "Command run: /etc/rc.d/ypserv start"
                                      echo "Command run: cp /etc/master.passwd /var/yp"
                                      echo "Command run: cp /etc/group /var/yp"
                                      echo "Command run: $(which touch) /var/yp/netgroup"
                                      echo "Command run: $(which touch) /var/yp/hosts"
                                      echo "Command run: $(which touch) /var/yp/amd.map"
                                      echo "Command run: $(which sed) -i 's/NOPUSH/#NOPUSH/g' /var/yp/Makefile"
                                      echo "Command run: $(which make) -C /var/yp/"
                                      echo "Command run: $(which ypinit) -m +$NISDomainName"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Configuring server as NIS master"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sysrc) rpcbind_enable=YES
                                      $(which sysrc) NISDomainName=+$NISDomainName
                                      $(which sysrc) nis_server_enable=YES
                                      $(which sysrc) nis_ypasswdd_enable=YES
                                      $(which sysrc) nis_ypasswdd_flags="-v -u -d +$NISDomainName"
                                      /etc/rc.d/ypserv start
                                      if [ $? -eq 0 ]; then
                                           echo "#####################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly started NIS" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: /etc/rc.d/ypserv start" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "#####################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "#####################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not started NIS, check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: /etc/rc.d/ypserv start" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "#####################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
                                      cp /etc/master.passwd /var/yp
                                      cp /etc/group /var/yp
                                      $(which touch) /var/yp/netgroup
                                      $(which touch) /var/yp/hosts
                                      $(which touch) /var/yp/amd.map
                                      $(which sed) -i 's/NOPUSH/#NOPUSH/g' /var/yp/Makefile
                                      $(which make) -C /var/yp/
                                      if [ $? -eq 0 ]; then
                                           echo
                                           echo "NIS has successfuly been installed"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo
                                           echo "NIS has not successfuly been installed"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           exit 1
                                      fi
                                      $(which ypinit) -m +$NISDomainName
                                      if [ $? -eq 0 ]; then
                                           clear
                                           echo "NIS has been successfuly initalized"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           clear
                                           echo "NIS has not been successfuly initalized"
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
				else
                                      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "[TOP]                                              [Entry Fields]"
                                      read -p " Enter NIS domain name ------------------------- > " NISDomainName
                                      read -p " Enter NIS server name (seperate with comma) --- > " NISServerName
                                      clear
                                      echo "         COMMAND STATUS               "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which ypinit)                      bos.sysmgt.ypinit       exec"
                                      echo "Command run: $(which sysrc) nis_server_enable=YES"
                                      echo "Command run: $(which sysrc) nis_client_enable=YES"
                                      echo "Command run: $(which sed) -i 's/hosts: files dns/hosts: files dns nis/g' /etc/nsswitch.conf"
                                      echo "Command run: $(which ypinit) -s $(which hostname) +$NISDomainName"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Configuring server as NIS slave"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sysrc) nis_server_enable=YES
                                      $(which sysrc) nis_client_enable=YES
                                      $(which sed) -i 's/hosts: files dns/hosts: files dns nis/g' /etc/nsswitch.conf
                                      $(which ypinit) -s $(which hostname) +$NISDomainName
                                      if [ $? -eq 0 ]; then
                                           echo "###########################################################################" >> /var/log/smx-log/success.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Successfuly initalized NIS server" >> /var/log/smx-log/success.log
                                           echo "[$(date)] Command run: $(which ypinit) -s $(which hostname) +$NISDomainName" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           echo "###########################################################################" >> /var/log/smx-log/success.log
                                           echo "" >> /var/log/smx-log/success.log
                                           read -p "Press [enter] to continue..." ReadDamKey
                                           clear
                                           echo
                                           cat /var/log/smx-log/success.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      else
                                           echo "###########################################################################" >> /var/log/smx-log/fail.log
                                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Not initalized NIS server, check command syntax" >> /var/log/smx-log/fail.log
                                           echo "[$(date)] Command run: $(which ypinit) -s $(which hostname) +$NISDomainName" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           echo "###########################################################################" >> /var/log/smx-log/fail.log
                                           echo "" >> /var/log/smx-log/fail.log
                                           clear
                                           echo
                                           cat /var/log/smx-log/fail.log | tail -n 7
                                           echo
                                           read -p "Press [enter] to continue..." ReadDamKey
                                      fi
				fi          
                           else
                                echo "Feature not avalible for OS X"
				read -p "Press [enter] to continue..." ReadDamKey
                           fi
                      fi
                      ;;
    	    start)
    		    clear
                    $(which uname) | grep Linux >> /dev/null
                    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "        COMMAND STATUS          "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) rpcbind start"
                              echo "Command run: $(which service) ypserv start"
                              echo "Command run: $(which service) yppasswdd start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting rpcbind to start on startup"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) rpcbind start
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting ypserv to start on startup"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) ypserv start
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Setting yppasswdd to start on startup"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) yppasswdd start
                              echo "##############################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly started nis on system: $(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which service) ypserv start" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "##############################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
			 else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
                                   clear
                                   echo "OS = Debian"
                                   echo "        COMMAND STATUS          "
                                   echo
                                   echo "$(date)                                     $(whoami)@$(hostname)"
                                   echo
                                   echo "Command: RUNNING    stdout: yes    stderr: no     "
                                   echo
                                   echo "Before command completion, additional instructions may appear below"
                                   echo
                                   echo "File                                 Fileset                 Type"
                                   echo "-----------------------------------------------------------------"
                                   echo "$(which service)                     bos.sysmgt.service      exec"
                                   echo "Command run: $(which service) nis start"
                                   update_spinner
                                   sleep 1
                                   update_spinner
                                   echo "Starting NIS"
                                   sleep 1
                                   update_spinner
                                   sleep 1
                                   $(which service) nis start
                                   echo "################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly started NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: $(which service) nis start" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   clear
                                   cat /proc/version | grep "Ubuntu" >> /dev/null
                                   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "        COMMAND STATUS          "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
				        echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) nis start"
					sleep 1
					update_spinner
					sleep 1
					update_spinner
					echo "Starting NIS"
					sleep 1
					update_spinner
					sleep 1
					$(which service) nis start
					echo "################################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started NIS on system: $(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) nis start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "################################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
                                   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "        COMMAND STATUS          "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) rpcbind start"
                                             echo "Command run: $(which service) ypserv start"
                                             echo "Command run: $(which service) yppasswdd start"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting rpcbind"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) rpcbind start
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting ypserv"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) ypserv start
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting yppasswdd"
                                             sleep 1
                                             update_spinner
                                             $(which service) yppasswdd start
                                             echo "##############################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started nis on system: $(hostname)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) ypserv start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "##############################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					fi
                                   fi 
                              fi
			 fi
                    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
                              echo "OS = BSD"
                              echo "         COMMAND STATUS                 "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "/etc/rc.d/ypserv                     bos.sysmgt.ypserv       exec"
                              echo "Command run: /etc/rc.d/ypserv start"
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              echo "Installing package: ypserv"
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              update_spinner
                              sleep 1
                              /etc/rc.d/ypserv start
                              if [ $? -eq 0 ]; then
                                   echo "#############################################################" >> /var/log/smx-log/success.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Successfuly started NIS server" >> /var/log/smx-log/success.log
                                   echo "[$(date)] Command run: /etc/rc.d/ypserv start" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   echo "#############################################################" >> /var/log/smx-log/success.log
                                   echo "" >> /var/log/smx-log/success.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/success.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              else
                                   echo "#############################################################" >> /var/log/smx-log/fail.log
                                   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Not started NIS server, check command syntax" >> /var/log/smx-log/fail.log
                                   echo "[$(date)] Command run: /etc/rc.d/ypserv start" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   echo "#############################################################" >> /var/log/smx-log/fail.log
                                   echo "" >> /var/log/smx-log/fail.log
                                   read -p "Press [enter] to continue..." ReadDamKey
                                   clear
                                   echo
                                   cat /var/log/smx-log/fail.log | tail -n 7
                                   echo
                                   read -p "Press [enter] to continue..." ReadDamKey
                              fi     
			 else
                              echo "Feature not avalible for OS X"
                              read -p "Press [enter] to continue..." ReadDamKey
                              nis_menu
			 fi
                    fi
                    ;;
    	    stop)
              	   clear
                   $(which uname) | grep Linux >> /dev/null
                   if [ $? -eq 0 ]; then
                        clear
                        echo "OS = Linux"
                        cat /proc/version | grep "Red Hat" >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Red Hat"
                             echo "        COMMAND STATUS          "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) rpcbind stop"
                             echo "Command run: $(which service) ypserv stop"
                             echo "Command run: $(which service) yppasswdd stop"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping rpcbind"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) rpcbind stop
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping ypserv"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) ypserv stop
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping yppasswdd"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) yppasswdd stop
                             echo "##############################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly stopped nis on system: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) ypserv stop"
                             echo "" >> /var/log/smx-log/success.log
                             echo "##############################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
                        else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
                                  clear
                                  echo "OS = Debian"
                                  echo "        COMMAND STATUS          "
                                  echo
                                  echo "$(date)                                     $(whoami)@$(hostname)"
                                  echo
                                  echo "Command: RUNNING    stdout: yes    stderr: no     "
                                  echo
                                  echo "Before command completion, additional instructions may appear below"
                                  echo
                                  echo "File                                 Fileset                 Type"
                                  echo "-----------------------------------------------------------------"
                                  echo "$(which service)                     bos.sysmgt.service      exec"
                                  echo "Command run: $(which service) nis stop"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  update_spinner
                                  echo "Stopping NIS"
                                  sleep 1
                                  update_spinner
                                  sleep 1
                                  $(which service) nis stop
                                  echo "##############################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly stopped NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: $(which service) nis stop" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "##############################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  clear
                                  cat /proc/version | grep "Ubuntu" >> /dev/null
                                  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "        COMMAND STATUS          "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) nis stop"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping NIS"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) nis stop
                                       echo "##############################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped NIS on system: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) nis stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "##############################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
                                  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
                                            clear
                                            echo "OS = SuSE"
                                            echo "        COMMAND STATUS          "
                                            echo
                                            echo "$(date)                                     $(whoami)@$(hostname)"
                                            echo
                                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                                            echo
                                            echo "Before command completion, additional instructions may appear below"
                                            echo
                                            echo "File                                 Fileset                 Type"
                                            echo "-----------------------------------------------------------------"
                                            echo "$(which service)                     bos.sysmgt.service      exec"
                                            echo "Command run: $(which service) rpcbind stop"
                                            echo "Command run: $(which service) ypserv stop"
                                            echo "Command run: $(which service) yppasswdd stop"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Stopping rpcbind"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which service) rpcbind stop
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Stopping ypserv"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which service) ypserv stop
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            update_spinner
                                            echo "Stopping yppasswdd"
                                            sleep 1
                                            update_spinner
                                            sleep 1
                                            $(which service) yppasswdd stop
                                            echo "##############################################" >> /var/log/smx-log/success.log
                                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                            echo "[$(date)] Successfuly stopped nis on system: $(hostname)" >> /var/log/smx-log/success.log
                                            echo "[$(date)] Command run: $(which service) ypserv stop" >> /var/log/smx-log/success.log
                                            echo "" >> /var/log/smx-log/success.log
                                            echo "##############################################" >> /var/log/smx-log/success.log
                                            echo "" >> /var/log/smx-log/success.log
                                            read -p "Press [enter] to continue..." ReadDamKey
                                            clear
                                            echo
                                            cat /var/log/smx-log/success.log | tail -n 7
                                            echo
                                            read -p "Press [enter] to continue..." ReadDamKey
                                       fi
                                  fi 
                             fi
                        fi
                   else
                        $(which uname) | grep BSD >> /dev/null
                        if [ $? -eq 0 ]; then
                             clear
                             echo "OS = BSD"
                             echo "         COMMAND STATUS                   "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) ypserv stop"
                             sleep 1
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping NIS"
                             sleep 1
                             update_spinner
                             sleep 1
                             /etc/rc.d/ypserv stop
                             if [ $? -eq 0 ]; then
                                  echo "###############################################################" >> /var/log/smx-log/success.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Successfuly stopped NIS" >> /var/log/smx-log/success.log
                                  echo "[$(date)] Command run: /etc/rc.d/ypserv stop" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  echo "###############################################################" >> /var/log/smx-log/success.log
                                  echo "" >> /var/log/smx-log/success.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/success.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             else
                                  echo "###############################################################" >> /var/log/smx-log/fail.log
                                  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Not stopped NIS, check command syntax" >> /var/log/smx-log/fail.log
                                  echo "[$(date)] Command run: /etc/rc.d/ypserv stop" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  echo "###############################################################" >> /var/log/smx-log/fail.log
                                  echo "" >> /var/log/smx-log/fail.log
                                  read -p "Press [enter] to continue..." ReadDamKey
                                  clear
                                  echo
                                  cat /var/log/smx-log/fail.log | tail -n 7
                                  echo
                                  read -p "Press [enter] to continue..." ReadDamKey
                             fi          
                        fi
                   fi
                   ;;
    	    restart)
    		      clear
                      $(which uname) | grep Linux >> /dev/null
                      if [ $? -eq 0 ]; then
                           clear
                           echo "OS = Linux"
                           cat /proc/version | grep "Red Hat" >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "        COMMAND STATUS          "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) rpcbind restart"
				echo "Command run: $(which service) ypserv restart"
				echo "Command run: $(which service) yppasswdd restart"
				sleep 1
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting rpcbind"
				sleep 1
				update_spinner
				sleep 1
				$(which service) rpcbind restart
				sleep 1
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting ypserv"
				sleep 1
				update_spinner
				sleep 1
				$(which service) ypserv restart
				sleep 1
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting yppasswdd"
				sleep 1
				update_spinner
				sleep 1
				$(which service) yppasswdd restart
				echo "################################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "[$(date)] Successfuly restarted nis on system: $(hostname)" >> /var/log/smx-log/success.log
				echo "[$(date)] Command run: $(which service) ypserv restart"
				echo "" >> /var/log/smx-log/success.log
				echo "################################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
				read -p "Press [enter] to continue..." ReadDamKey
                           else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "        COMMAND STATUS          "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) nis restart"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting NIS"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) nis restart
                                     echo "################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfully restarted NIS" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: $(which service) nis restart"
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
                                          clear
                                          echo "OS = Ubuntu"
                                          echo "        COMMAND STATUS          "
                                          echo
                                          echo "$(date)                                     $(whoami)@$(hostname)"
                                          echo
                                          echo "Command: RUNNING    stdout: yes    stderr: no     "
                                          echo
                                          echo "Before command completion, additional instructions may appear below"
                                          echo
                                          echo "File                                 Fileset                 Type"
                                          echo "-----------------------------------------------------------------"
                                          echo "$(which service)                     bos.sysmgt.service      exec"
                                          echo "Command run: $(which service) nis restart"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          update_spinner
                                          echo "Restarting NIS"
                                          sleep 1
                                          update_spinner
                                          sleep 1
                                          $(which service) nis restart
                                          echo "################################################" >> /var/log/smx-log/success.log
                                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                          echo "[$(date)] Successfully restarted NIS" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) nis restart" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          echo "################################################" >> /var/log/smx-log/success.log
                                          echo "" >> /var/log/smx-log/success.log
                                          read -p "Press [enter] to continue..." ReadDamKey
                                          clear
                                          echo
                                          cat /var/log/smx-log/success.log | tail -n 7
                                          echo
                                          read -p "Press [enter] to continue..." ReadDamKey
                                     else
                                          clear
                                          cat /proc/version | grep "SUSE" >> /dev/null
                                          if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "        COMMAND STATUS          "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) rpcbind restart"
                                               echo "Command run: $(which service) ypserv restart"
                                               echo "Command run: $(which service) yppasswdd restart"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting rpcbind"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) rpcbind restart
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting ypserv"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) ypserv restart
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting yppasswdd"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) yppasswdd restart
                                               echo "##############################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted nis on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) ypserv restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "##############################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                          fi
                                     fi 
				fi
                           fi
                      else
                           $(which uname) | grep BSD >> /dev/null
                           if [ $? -eq 0 ]; then
                                clear
				echo "OS = BSD"
				echo "         COMMAND SYNTAX                 "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instrutions may appear below"
				echo
				echo "File                                 Fileset                Type"
				echo "----------------------------------------------------------------"
				echo "/etc/rc.d/ypserv                     bos.sysmgt.ypserv      exec"
				echo "Command run: /etc/rc.d/ypserv restart"
				sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting NIS"
                                sleep 1
                                update_spinner
                                sleep 1
				/etc/rc.d/ypserv restart
				if [ $? -eq 0 ]; then
				     echo "#########################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfuly restarted NIS" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /etc/rc.d/ypserv restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "#########################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				    echo "#########################################################" >> /var/log/smx-log/fail.log
				    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				    echo "[$(date)] Not restarted NIS, check command syntax" >> /var/log/smx-log/fail.log
				    echo "[$(date)] Command run: /etc/rc.d/ypserv restart" >> /var/log/smx-log/fail.log
				    echo "" >> /var/log/smx-log/fail.log
				    echo "#########################################################" >> /var/log/smx-log/fail.log
				    echo "" >> /var/log/smx-log/fail.log
				    clear
				    echo
				    cat /var/log/smx-log/fail.log | tail -n 7
				    echo
				    read -p "Press [enter] to continue..." ReadDamKey
				fi 
                           fi
                      fi
                      ;;
            help)
                   echo "install > Install NIS server on system (server/client)"
                   echo "start > Start NIS server"
                   echo "stop > Stop NIS server"
                   echo "restart > Restart NIS server"
                   echo "help > This menu"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell"   
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;       
    	    exit)
            	   clear
                   echo "######################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly termiated $(basename $0)/srv_menu/nis_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "######################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
    	    exit-mas)
                       clear
                       echo "#################################" >> /var/log/smx-log/exit.log
		       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
               	       exit 0
                       ;;
            *)        clear
                      echo "          COMMAND STATUS         "
                      echo
                      echo "$(date)                                     $(whoami)@$(hostname)"
                      echo
                      echo "Command: FAIL    stdout: yes    stderr: no       "
                      echo
                      echo "Before command completion, additional instructions may appear below"
                      echo
                      echo "Unkonwn command, please consult the command list, executed with pid - 5636 (0x1)"
                      read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done
}

function dhcp_menu() {
    while :
    do
	clear
      	echo "$(date)                                     $(whoami)@$(hostname)"
      	echo
      	read -p "(config-dhcp)#" choice_dhcp
      	echo

      	case "$choice_dhcp" in
      	    install)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
                      		echo "$(date)                                     $(whoami)@$(hostname)"
                      		echo "Domain name example: domain.local"
                      		echo "DNS ip address example: 192.168.1.12"
                      		echo "Default lease time (in minuites) example: 600"
                      		echo "Max lease time (in minuties)example: 7200"
                      		echo "Network ip class example: 192.168.1.0"
                      		echo "Netmask example: 255.255.255.0"
                      		echo "Start IP address: 192.168.1.100"
                      		echo "End IP address: 192.168.1.200"
                      		echo "Broadcast address example: 192.168.1.255"
                      		echo "Default (router) gateway: 192.168.1.1"
                      		echo "[TOP]                                               [Entry Fields]"
                      		read -p " Enter domain name ------------------------------ > " dnsName
                      		read -p " Enter DNS server ip address -------------------- > " dnsSrvAddr
                      		read -p " Enter default lease time (in min)--------------- > " defLease
                      		read -p " Enter max lease time (in min) ------------------ > " maxLease
                      		read -p " Enter IP class --------------------------------- > " ipClass
                      		read -p " Enter netnmask --------------------------------- > " netMask
                      		read -p " Enter start IP address ------------------------- > " startAddr
                      		read -p " Enter end ip address --------------------------- > " endAddr
                      		read -p " Enter broadcast address ------------------------ > " bcastAddr
                      		read -p " Enter default (router address) gateway --------- > " routerGway
                      		clear
                      		echo "         COMMAND STATUS              "
                      		echo
                      		echo "$(date)                                     $(whoami)@$(hostname)"
                      		echo
                      		echo "Command: RUNNING    stdout: yes    stderr: no     "
                      		echo
                      		echo "Before command completion, additional instructions may appear below"
                      		echo
                      		echo "File                                 Fileset                 Type"
                      		echo "-----------------------------------------------------------------"
                      		echo "$(which yum)                         bos.pkgmgt.dhcp         exec"
                      		echo "$(which service)                     bos.sysmgt.service      exec"
                      		echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                      		echo "Command run: $(which yum) -y install dhcp | $(which tee) /var/log/smx-log/yum.log"
                      		echo "Command run: $(which service) dhcpd start"
                      		echo "Command run: $(which chkconfig) dhcpd on"
                      		update_spinner
				sleep 1
				update_spinner
			        echo "Installing package: dhcp"
				sleep 1
				update_spinner
				sleep 1
                      		$(which yum) -y install dhcp | $(which tee) /var/log/smx-log/yum.log
                      		if [ $PIPESTATUS -eq 0 ]; then
                                     echo "#################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly installed DHCP on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which yum) -y install dhcp | $(which tee) /var/log/smx-log/yum" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "#################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not install DHCP on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which yum) -y install dhcp | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "#####################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				     exit 1
    			        fi
			        update_spinner
				sleep 1
				update_spinner
			        echo "Setting domain name to: $dnsName"
				sleep 1
				update_spinner
				sleep 1
				echo ""option domain-name=\"$dnsName"\";" >> /etc/dhcp/dhcpd.conf
			        update_spinner
				sleep 1
				update_spinner
			        echo "Defining domain name IP address as: $dnsSrvAddr"
				sleep 1
				update_spinner
				sleep 1
				echo "option domain-name-servers $dnsSrvAddr;" >> /etc/dhcp/dhcpd.conf
			        update_spinner
				sleep 1
				update_spinner
			        echo "Defining default lease time as: $defLease"
				sleep 1
				update_spinner
				sleep 1
				echo "default-lease-time $defLease;" >> /etc/dhcp/dhcpd.conf
			        update_spinner
				sleep 1
				update_spinner
			        echo "Defining maximum lease time as: $maxLease"
				sleep 1
				update_spinner
				sleep 1
				echo "max-lease-time $maxLease;" >> /etc/dhcp/dhcpd.conf
			        update_spinner
				sleep 1
				update_spinner
			        echo "Authorizing the server"
				sleep 1
				update_spinner
				sleep 1
				echo "authoritative;" >> /etc/dhcp/dhcpd.conf
			        update_spinner
				sleep 1
				update_spinner
			        echo "Defining subnet class as: $ipClass and netmask as: $netMask"
				sleep 1
				update_spinner
				sleep 1
				echo "subnet $ipClass netmask $netMask {" >> /etc/dhcp/dhcpd.conf
				update_spinner
				sleep 1
				update_spinner
			        echo "Setting start address to: $startAddr, and setting end address to: $endAddr"
				sleep 1
				update_spinner
				sleep 1
				echo "range dynamic-bootp $startAddr $endAddr;" >> /etc/dhcp/dhcpd.conf
				update_spinner
				sleep 1
				update_spinner
				echo "Setting broadcast address to: $bcastAddr"
				sleep 1
				update_spinner
				sleep 1
				echo "option broadcast-address $bcastAddr;" >> /etc/dhcp/dhcpd.conf
				update_spinner
				sleep 1
				update_spinner
				echo "Setting default gateway to: $routerGway"
				sleep 1
				update_spinner
				sleep 1
				echo "option routers $routerGway;" >> /etc/dhcp/dhcpd.conf
				echo "}" >> /etc/dhcp/dhcpd.conf
				update_spinner
				sleep 1
				update_spinner
				echo "Starting dhcp server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) dhcpd start
				update_spinner
				sleep 1
				update_spinner
				echo "Setting dhcp to start at startup"
				sleep 1
				update_spinner
				sleep 1
				$(which chkconfig) dhcpd on
				clear
				echo "System: $(hostname) [$(date)] Successfuly configured as DHCP server"
				echo "On your client, set this server as your DHCP server"
				read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "IP class example: 192.168.1.0"
                                     echo "Netmask example: 255.255.255.0"
                                     echo "Start IP example: 192.168.1.100"
                                     echo "End IP example: 192.168.1.200"
                                     echo "Broadcast address example: 192.168.1.255"
                                     echo "Default (router address) gateway: 192.168.1.1"
                                     echo "Default lease time (in mins) example: 600"
                                     echo "Max lease time (in mins) example: 7200"
                                     echo "Domain name example: domain.local"
                                     echo "DNS server ip address example: 192.168.1.12"
                                     echo "System interface example: eth0"
                                     echo "[TOP]                                            [Entry Fields]"
                                     read -p " Enter IP class ------------------------------ > " ipClass
                                     read -p " Enter netmask ------------------------------- > " netMask
                                     read -p " Enter start IP address ---------------------- > " startIP
                                     read -p " Enter end IP address ------------------------ > " endIP
                                     read -p " Enter broadcast addres ---------------------- > " bcastAddr
                                     read -p " Enter default (router address) gateway ------ > " defAddr
                                     read -p " Enter default lease time (in mins) ---------- > " defLease
                                     read -p " Enter max lease time (in mins) -------------- > " maxLease
                                     read -p " Enter domain name --------------------------- > " dnsName
                                     read -p " Enter DNS server ip address ----------------- > " dnsSrvAddr
                	             printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                     if [ "$netIntf" = "" ]; then
					   NETINTF=""
					   read netIntf
					   NETINTF=$netIntf
                                     fi
                                     if [ "$netIntf" = "" ]; then
					   NETINTF=""
					   NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                     fi 
                                     clear
                                     echo "         COMMAND STATUS          "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
				     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                         Type"
                                     echo "-------------------------------------------------------------------------"
                                     echo "$(which apt-get)                     bos.pkgmgt.apt-get              exec"
                                     echo "$(which sed)                         bos.sysmgt.sed                  exec"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which apt-get) -y install isc-dhcp-server | $(which tee) /var/log/smx-log/apt-get.log"
                                     echo "Command run: $(which service) isc-dhcp-server start"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing package: isc-dhcp-server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which apt-get) -y install isc-dhcp-server | $(which tee) /var/log/smx-log/apt-get.log
                                     if [ $PIPESTATUS -eq 0 ]; then
					  echo "########################################################################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly installed dhcp server on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which apt-get) -y install isc-dhcp-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "########################################################################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo "########################################################################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] not installed dhcp server on system: $(hostname)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Command run: $(which apt-get) -y install isc-dhcp-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  echo "########################################################################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
					  exit 1
                    		     fi
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting IP class to: $ipClass and netmask to: $netMask"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "subnet $ipClass netmask $netMask {" >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting start IP address to: $startIP and setting end IP address to: $endIP"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "range $startIP $endIP;" >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting broadcast address to: $bcastAddr"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "option broadcast-address $bcastAddr;" >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting default gateway to: $defAddr"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "option routers $defAddr;" >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting default lease time to: $defLease"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "default-lease-time $defLease;" >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting maximum lease time to: $maxLease"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "max-lease-time $maxLease;" >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting domain name to: $dnsName"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo ""option domain-name=\"$dnsName"\";"  >> /etc/dhcp/dhcpd.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting domain name server IP address to: $dnsSrvAddr"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo "option domain-name-servers $dnsSrvAddr;" >> /etc/dhcp/dhcpd.conf
                                     echo "}" >> /etc/dhcp/dhcpd.conf
                    		     $(which sed) -i 's/INTERFACE/#INTERFACE/g' /etc/default/isc-dhcp-server
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting network interface to: $NETINTF"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     echo ""INTERFACE=\"$NETINTF"\";" >> /etc/default/isc-dhcp-server
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Starting dhcp server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) isc-dhcp-server start
                                     echo
                                     echo "System now DHCP server"
                                     echo "Set as DHCP server on clients"
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo "Domain name example: dns.site.local"
					  echo "DNS IP address example: 192.168.1.1"
					  echo "Default lease time (in mins): 60"
					  echo "Maximum lease time (in mins): 30"
					  echo "IP class example: 192.168.1.0"
					  echo "Netmask example: 255.255.255.0"
					  echo "Default (Router address) gateway example: 192.168.1.1"
					  echo "Start IP address example: 192.168.1.100"
					  echo "End IP address example: 192.168.1.200"
					  echo "[TOP]                                     [Entry Fields]"
					  read -p " Enter domain name -------------------- > " dnsName
					  read -p " Enter DNS server IP address ---------- > " dnsSrvAddr
					  read -p " Enter default lease time (in mins) --- > " defLease
					  read -p " Enter maximum lease time (in mins) --- > " maxLease
					  read -p " Enter IP class ----------------------- > " ipClass
					  read -p " Enter netmask ------------------------ > " netMask
					  read -p " Enter default gateway ---------------- > " defGway
					  read -p " Enter start IP address --------------- > " startIP
					  read -p " Enter end IP address ----------------- > " endIP
					  clear
					  echo "         COMMAND STATUS             "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
					  echo "$(which sed)                         bos.sysmgt.sed          exec"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which apt-get) -y install dhcp3-server | $(which tee) /var/log/smx-log/apt-get.log"
					  echo "Command run: $(which service) dhcp3-server start"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Installing package: dhcp3-server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which apt-get) -y install dhcp3-server | $(which tee) /var/log/smx-log/apt-get.log
				          if [ $? -eq 0 ]; then
                                               echo "#################################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed dhcp server on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install dhcp3-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "#################################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
				          else
                                               echo "#####################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not installed dhcp3-server on system: $(hostname)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install dhcp3-server" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "#####################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting domain name to: $dnsName"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which sed) -i 's/option domain-name/#option domain-name/g' /etc/dhcp3/dhcpd.conf
					  echo ""option domain-name\"$dnsName"\";" >> /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting DNS server address to: $dnsSrvAddr"
					  sleep 1
					  update_spinner
					  sleep 1
					  echo "option domain-name-server $dnsSrvAddr;" >> /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting default lease time to: $defLease"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which sed) -i 's/600/$defLease/g' /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting maximum lease time to: $maxLease"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which sed) -i 's/7200/$maxLease/g' /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Authorizing this server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which sed) -i 's/#authoritative/authoritative/g' /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting IP class to: $ipClass and netmask to: $netMask"
					  sleep 1
					  update_spinner
					  sleep 1
					  echo "subnet $ipClass netmask $netMask {" >> /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting default gateway to: $defGway"
					  sleep 1
					  update_spinner
					  sleep 1
					  echo "option routers $defGway;" >> /etc/dhcp3/dhcpd.conf
					  echo "option subnet-mask $netMask;" >> /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Setting start IP address to: $startIP and end IP address to: $endIP"
					  sleep 1
					  update_spinner
					  sleep 1
					  echo "range dynamic-bootp $startIP $endIP;" >> /etc/dhcp3/dhcpd.conf
					  echo "}" >> /etc/dhcp3/dhcpd.conf
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Starting DHCP server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) dhcp3-server start
					  echo
                    		          echo "System now DHCP server"
					  echo "Set as DHCP server on clients"
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "Domain name example: domain.local"
                                               echo "DNS server name (ip address) example: 192.168.1.12"
                                               echo "Default (router address) gateway example: 192.168.1.1"
                                               echo "Defualt lease time (in mins) 14400"
                                               echo "Max lease time (in mins) 172800"
                                               echo "IP class example: 192.168.1.0"
                                               echo "Subnet address example: 255.255.255.0"
                                               echo "Start IP address example: 192.168.1.100"
                                               echo "End IP address example: 192.168.1.200"
                                               echo "System interface example: eth0"
                                               echo "[TOP]                                             [Entry Fields]"
                                               read -p " Enter domain name ---------------------------- > " dnsName
                                               read -p " Enter DNS server ip address ------------------ > " dnsSrvAddr
                                               read -p " Enter default (router address) gateway ------- > " defGway
                                               read -p " Enter default lease time (in mins) ----------- > " defLease
                                               read -p " Enter max lease time (in mins) --------------- > " maxLease
                                               read -p " Enter IP class ------------------------------- > " ipClass
                                               read -p " Enter netmask address ------------------------ > " netMask
                                               read -p " Enter start IP address ----------------------- > " startIP
                                               read -p " Enter end IP address ------------------------- > " endIP
                                               printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                               if [ "$netIntf" = "" ]; then
                                                     NETINTF=""
                                                     read netIntf
                                                     NETINTF=$netIntf
                                               fi
                                               if [ "$netIntf" = "" ]; then
                                                     NETINTF=""
						     NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
					       fi
                                               clear
                                               echo "         COMMAND STATUS         "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                Fileset                 Type"
                                               echo "----------------------------------------------------------------"
                                               echo "$(which zypper)                     bos.pkgmgt.zypper       exec"
                                               echo "$(which sed)                        bos.sysmgt.sed          exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which zypper) in -y dhcp-server yast2-dhcp-server | $(which tee) /var/log/smx-log/zypper.log"
                                               echo "Command run: $(which service) dhcpd start"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Installing packages: dhcp-server and yast2-dhcp-server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which zypper) in -y dhcp-server yast2-dhcp-server | $(which tee) /var/log/smx-log/zypper.log
                                               if [ $PIPESTATUS -eq 0 ]; then
						    echo "################################################################################################################" >> /var/log/smx-log/success.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Successfuly installed dhcp server on system: $(hostname)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Command run: $(which zypper) in -y dhcp-server yast2-dhcp-server | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    echo "################################################################################################################" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/success.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
					       else
						    echo "#####################################################################################################################"
						    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Not installed dhcp server on system: $(hostname)" >> /var/log/smx-log/fail.log
					            echo "[$(date)] Command run: $(which zypper) in -y dhcp-server yast2-dhcp-server | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    echo "#####################################################################################################################" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/fail.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
						    exit 1
                    			       fi
                                               echo "ddns-update-style none; ddns-updates off" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Authorizing this server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "authoritative" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting default lease to: $defLease"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       echo "default-lease-time $defLease;" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting maximum lease to: $maxLease"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "max-lease-time $maxLease;" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting domain name to: $dnsName"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo ""option domain-name \"$dnsName"\";" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting domain name server IP address to: $dnsSrvAddr"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "option domain-name-servers $dnsSrvAddr;" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting default gateway to: $defGway"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "option routers $defGway;" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting IP class to: $ipClass, and netmask to: $netMask"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       echo "subnet $ipClass netmask $netMask {" >> /etc/dhcpd.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting start IP address to: $startIP, and setting end IP address to: $endIP"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               echo "range $startIP $endIP;" >> /etc/dhcpd.conf
                                               echo "}" >> /etc/dhcpd.conf
                                               $(which sed) -i 's/DHCPD_INTERFACE/#DHCPD_INTEFACE/g' /etc/sysconfig/dhcpd
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting network interface to: $NETINTF"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       echo ""DHCPD_INTERFACE=\"$NETINTF"\";" >> /etc/sysconfig/dhcpd
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Starting dhcp server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) dhcpd start
                                               echo
                                               echo "DHCP Successfuly installed on system: $(hostname)"
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     fi 
			        fi
		           fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "[TOP]                                       [Entry Fields]"
				read -p " Enter domain name ---------------------------- > " dnsName
                                read -p " Enter DNS server ip address ------------------ > " dnsSrvAddr
                                read -p " Enter default (router address) gateway ------- > " defGway
                                read -p " Enter default lease time (in mins) ----------- > " defLease
                                read -p " Enter max lease time (in mins) --------------- > " maxLease
                                read -p " Enter IP class ------------------------------- > " ipClass
                                read -p " Enter netmask address ------------------------ > " netMask
                                read -p " Enter start IP address ----------------------- > " startIP
                                read -p " Enter end IP address ------------------------- > " endIP
				clear
				echo "         COMMAND STATUS                "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instrutions may appear below"
				echo
				echo "File                                 Fileset                Type"
				echo "----------------------------------------------------------------"
				echo "$(which make)                        bos.sysmgt.make        exec"
				echo "$(which sysrc)                       bos.sysmgt.sysrc       exec"
				echo "/usr/local/etc/rc.d/isc-dhcpd        bos.sysmgt.isc-dhcpd   exec"
				echo "Command run: $(which make) -C /usr/ports/net/isc-dhcp43-server install clean"
				echo "Command run: $(which sysrc) dhcpd_enable=YES"
				echo "/usr/local/etc/rc.d/isc-dhcpd start"
				update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                echo "Installing package: isc-dhcpd"
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
                                update_spinner
                                sleep 1
				$(which make) -C /usr/ports/net/isc-dhcp43-server install clean
				if [ $? -eq 0 ]; then
				     echo "######################################################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Sucessfully installed dhcp server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: $(which make) -C /usr/ports/net/isc-dhcp43-server install clean" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "######################################################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "######################################################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not installed dhcp server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: $(which make) -C /usr/ports/net/isc-dhcp43-server install clean" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "######################################################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				     exit 1
				fi
				$(which sysrc) dhcpd_enable=YES
				cp /usr/local/etc/dhcpd.conf /usr/local/etc/dhcpd.conf.bak
				echo 'option domain-name "$dnsName";' >> /usr/local/etc/dhcpd.conf
				echo "option domain-name-servers $dnsSrvAddr;" >> /usr/local/etc/dhcpd.conf
				echo "option subnet-mask $netMask;" >> /usr/local/etc/dhcpd.conf
				echo "" >> /usr/local/etc/dhcpd.conf
				echo "default-lease-time $defLease;" >> /usr/local/etc/dhcpd.conf
				echo "max-lease-time $maxLease;" >> /usr/local/etc/dhcpd.conf
				echo "ddns-update-style nome;" >> /usr/local/etc/dhcpd.conf
				echo "" >> /usr/local/etc/dhcpd.conf
				echo "subnet $ipClass netmask: $netMask {" >> /usr/local/etc/dhcpd.conf
				echo "range $startIP $endIP;" >> /usr/local/etc/dhcpd.conf
				echo "option routers $defGway;" >> /usr/local/etc/dhcpd.conf
				echo "}" >> /usr/local/etc/dhcpd.conf
				echo "" >> /usr/local/etc/dhcpd.conf
				/usr/local/etc/rc.d/isc-dhcpd start
				echo
				echo "System has been successfully configured as a dhcp server"
				read -p "Press [enter] to continue..." ReadDamKey
			   else 
			        echo "Feature not avalible for OS X"
				read -p "Press [enter] to continue..." ReadDamKey
				dhcp_menu
			   fi
		      fi
                      ;;
	    start)
          	    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
			      echo "OS = Red Hat"
                              echo "       COMMAND STATUS        "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "[$(date)] Command run: $(which service) dhcpd start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting dhcp server"
                              sleep 1
                              update_spinner
                              sleep 1
                              /etc/rc.d/init.d/dhcpd start
			      echo "################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly started dhcpd on system: $(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which service) dhcpd start" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
			 else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
			           echo "OS = Debian"
				   echo "       COMMAND STATUS        "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                        Type"
				   echo "------------------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) isc-dhcp-server start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting dhcp server"
				   sleep 1
				   update_spinner
				   sleep 1
				   $(which service) isc-dhcp-server start
			           echo "###############################################" >> /var/log/smx-log/success.log
				   echo "$(date)@$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) isc-dhcp-server start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "###############################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
			           read -p "Press [enter] to continue..." ReadDamKey
                              else
				   clear
				   cat /proc/version | grep "Ubuntu" >> /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "       COMMAND STATUS        "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                  Type"
					echo "------------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) dhcp3-server start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting dhcp server"
					sleep 1
					update_spinner
					sleep 1
					$(which service) dhcp3-server start
					echo "###############################################" >> /var/log/smx-log/success.log
					echo "$(date)@$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) dhcp3-server start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "###############################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "       COMMAND STATUS       "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) dhcpd start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting dhcp server"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) dhcpd start
                                             echo "###############################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) dhcpd start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "###############################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					fi
				   fi 
			      fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "OS = BSD"
			      echo "         COMMAND STATUS               "
			      echo
			      echo "$(date)                                     $(whoami)@$(hostname)"
			      echo
			      echo "Command: RUNNING    stdout: yes    stderr: no     "
			      echo
			      echo "Before command completion, additional instructions may appear below"
			      echo
			      echo "File                                 Fileset                 Type"
			      echo "-----------------------------------------------------------------"
			      echo "/usr/local/etc/rc.d/isc-dhcpd        bos.sysmgt.isc-dhcpd    exec"
			      echo "Command run: /usr/local/etc/rc.d/isc-dhcpd start"
			      update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting dhcp server"
                              sleep 1
                              update_spinner
                              sleep 1
			      /usr/local/etc/rc.d/isc-dhcpd start
			      if [ $? -eq 0 ]; then
				   echo "##########################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfully started dhcp server" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: /usr/local/etc/rc.d/isc-dhcpd start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "##########################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      else
				   echo "##########################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started dhcp server, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: /usr/local/etc/rc.d/isc-dhcpd start" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "##########################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      fi
			 else
                              echo "Feature not avaliable for OS X"
			      read -p "Press [enter] to continue..." ReadDamKey
			      dhcp_menu
			 fi
		    fi
                    ;;
	    stop)
		   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /proc/version | grep "Red Hat" >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
			     echo "OS = Red Hat"
                             echo "        COMMAND STATUS         "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                Fileset                 Type"
                             echo "----------------------------------------------------------------"
                             echo "$(which service)                    bos.sysmgt.service      exec"
                             echo "Command run: $(which service) dhcpd stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping dhcp server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) dhcpd stop
			     echo "##############################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly stopped dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) dhcpd stop" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##############################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
			     read -p "Press [enter] to continue..." ReadDamKey
			else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
			          echo "OS = Debian"
				  echo "        COMMAND STATUS         "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                Fileset                           Type"
				  echo "--------------------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) isc-dhcp-server stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping dhcp server"
				  sleep 1
				  update_spinner
				  sleep 1
				  /etc/init.d/isc-dhcp-server stop
			          echo "###############################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) isc-dhcp-server stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "###############################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
			          read -p "Press [enter] to continue..." ReadDamKey
                             else
				  clear
				  cat /proc/version | grep "Ubuntu" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "        COMMAND STATUS         "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                Fileset                  Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) isc-dhcp-server stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping dhcp server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) dhcp3-server stop
                                       echo "###############################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) dhcp3-server stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###############################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = SuSE"
					    echo "        COMMAND STATUS          "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) dhcpd stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping dhcp server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) dhcpd stop
					    echo "###############################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) dhcpd stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "###############################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       fi
				  fi 
			     fi
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "OS = BSD"
			     echo "         COMMAND STATUS                    "
			     echo
			     echo "$(date)                                     $(whoami)@$(hostname)"
			     echo
			     echo "Command: RUNNING    stdout: yes    stderr: no     "
			     echo
			     echo "Before command completion, additional instructions may appear below"
			     echo
			     echo "File                                 Fileset                 Type"
			     echo "-----------------------------------------------------------------"
			     echo "/usr/local/etc/rc.d/isc-dhcpd        bos.sysmgt.isc-dhcpd    exec"
			     echo "Command run: /usr/local/etc/rc.d/isc-dhcpd stop"
			     update_spinner
			     sleep 1
			     update_spinner
			     echo "Stopping dhcp server"
			     sleep 1
			     update_spinner
			     sleep 1
			     /usr/local/etc/rc.d/isc-dhcpd stop
			     if [ $? -eq 0 ]; then
				  echo "###########################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfully stopped dhcp server" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/isc-dhcpd stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "#########################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to conitnue..." ReadDamKey
			     else
				  echo "#########################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped dhcp server, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/isc-dhcpd stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "#########################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     fi
			else
                             echo "Feature not avaliable for OS X"
			     read -p "Press [enter] to continue..." ReadDamKey
			     dhcp_menu
			fi
		   fi
                   ;;
	    restart)
          	      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
			        echo "OS = Red Hat"
				echo "        COMMAND STATUS        "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) dhcpd restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting dhcp server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) dhcpd restart
			        echo "##################################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "[$(date)] Successfuly restarted dhcpd on system: $(hostname)" >> /var/log/smx-log/success.log
				echo "[$(date)] Command run: $(which service) dhcpd restart" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				echo "##################################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
			        read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "        COMMAND STATUS         "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                Fileset                  Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) isc-dhcp-server restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting dhcp server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) isc-dhcp-server restart
                                     echo "#################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) isc-dhcp-server stop" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "#################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "        COMMAND STATUS         "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                Fileset                  Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) dhcp3-server restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting dhcp server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) dhcp3-server restart
					  echo "#################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) dhcp3-server stop" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "#################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "        COMMAND STATUS          "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) dhcpd restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting dhcp server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) dhcpd restart
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted dhcp on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) dhcpd stop" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "#################################################"
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     fi 
			        fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
			        echo "OS = BSD"
			        echo "         COMMAND STATUS                    "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "/usr/local/etc/rc.d/isc-dhcpd        bos.sysmgt.isc-dhcpd    exec"
				echo "Command run: /usr/local/etc/rc.d/isc-dhcpd restart"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting dhcp server"
                                sleep 1
                                update_spinner
                                sleep
				/usr/local/etc/rc.d/isc-dhcpd restart
				if [ $? -eq 0 ]; then
				     echo "############################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully restarted dhcp server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/isc-dhcpd restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "############################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "############################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not restarted dhcp server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/isc-dhcpd restart" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "############################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				fi
			   else
                                echo "Feature not available for OS X"
				read -p "Press [enter] to continue..." ReadDamKey
				dhcp_menu	
			   fi
		      fi
                      ;;
	    ch_lease)
          	       clear
		       $(which uname) | grep Linux >> /dev/null
		       if [ $? -eq 0 ]; then
			    clear
			    echo "OS = Linux"
			    cat /proc/version | grep "Red Hat" >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
				 echo "OS = Red Hat"
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo "[TOP]                                 [Entry Fields]"
				 read -p " Edit default or max lease time --- (default/max) > " ans
				 if [ "$ans" = "default" ]; then
                                       clear
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo "default lease time (in mins) example: 259200"
                                       echo "[TOP]                                               [Entry Fields]"
                                       read -p " Enter current default lease time (in mins) ----- > " currdefLease
                                       read -p " Enter new default lease time (in mins) --------- > " newdefLease
                                       clear
                                       echo "        COMMAND STATUS          "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: OK    stdout: yes    stderr: no          "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which sed)                         bos.sysmgt.sed          exec"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcp/dhcp.conf"
                                       echo "Command run: $(which service) dhcpd restart"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Changing default lease time from: $currdefLease, to: $newdefLease"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which sed) -i "s/default-lease-time $currdefLease/default-lease-time $newdefLease/g" /etc/dhcp/dhcp.conf
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Restarting dhcp server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) dhcpd restart
				       echo "#######################################################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly changed default lease time from: $currdefLease to $newdefLease" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcp/dhcp.conf" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#######################################################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
			         else
                                       clear
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo "max lease time (in mins) example: 604800"
                                       echo "[TOP]                                            [Entry Fields]"
                                       read -p " Enter current max lease time (in mins) ------ > " currmaxLease
                                       read -p " Enter new max lease time (in mins) ---------- > " newmaxLease
                                       clear
                                       echo "         COMMAND STATUS            "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                Fileset                 Type"
                                       echo "----------------------------------------------------------------"
                                       echo "$(which sed)                        bos.sysmgt.sed          exec"
                                       echo "$(which service)                    bos.sysmgt.service      exec"
                                       echo "Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcp/dhcp.conf"
                                       echo "Command run: $(which service) dhcpd restart"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Changing maximum lease time from: $currmaxLease to: $newmaxLease"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which sed) -i "s/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g" /etc/dhcp/dhcp.conf
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Restarting dhcp server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) dhcp restart
				       echo "#################################################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly changed max lease time from $currmaxLease to $newmaxLease" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which sed) -i 's/max-release-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcp/dhcp.conf" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#################################################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
			         fi
			    else
				clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "[TOP]                                 [Entry Fields]"
                                     read -p " Edit default or max lease time --- (default/max) > " ans
                                     if [ "$ans" = "default" ]; then
					   clear
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo "default lease time (in mins) example: 259200"
					   echo "[TOP]                                    [Entry Fields]"
					   read -p " Enter current default lease time ---- > " currdefLease
					   read -p " Enter new default lease time -------- > " newdefLease
					   clear
					   echo "         COMMAND STATUS         "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stderr: no     "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                         Type"
					   echo "-------------------------------------------------------------------------"
					   echo "$(which sed)                         bos.sysmgt.sed                  exec"
					   echo "$(which service)                     bos.sysmgt.service      exec"
					   echo "Command run: (which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcp/dhcpd.conf"
					   echo "Command run: $(which service) isc-dhcp-server restart"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Changing default lease time from: $currdefLease to: $newdefLease"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which sed) -i "s/default-lease-time $currdefLease/default-lease-time $newdefLease/g" /etc/dhcp/dhcpd.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Restarting dhcp server"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which service) isc-dhcp-server restart
				           echo "########################################################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly changed default lease time from: $currdefLease to: $newdefLease" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcp/dhcpd.conf" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "########################################################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
				     else
					   clear
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo "max lease time (in mins) example: 236544"
					   echo "[TOP]                                          [Entry Fields]"
					   read -p " Enter current max lease time (in mins) ---- > " currmaxLease
					   read -p " Enter new max lease time (in mins) -------- > " newmaxLease
					   clear
					   echo "         COMMAND STATUS            "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stderr: no     "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                         Type"
					   echo "-------------------------------------------------------------------------"
					   echo "$(which sed)                         bos.sysmgt.sed                  exec"
					   echo "$(which service)                     bos.sysmgt.service      exec"
					   echo "Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcp/dhcpd.conf"
					   echo "Command run: $(which service) isc-dhcp-server restart"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Changing maximum lease time from: $currmaxLease to: newmaxLease"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which sed) -i "s/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g" /etc/dhcp/dhcpd.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Restarting dhcp server"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which service) isc-dhcp-server restart
					   echo "################################################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly changed max lease time from: $currmaxLease to: $newmaxLease" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcp/dhcpd.conf" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "################################################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
				     fi
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo "[TOP]                                 [Entry Fields]"
					  read -p " Edit default or max lease time --- (default/max) > " ans
					  if [ "$ans" = "default" ]; then
                                                clear
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "default lease time (in mins) example: 259200"
						echo "[TOP]                                    [Entry Fields]"
						read -p " Enter current default lease time ---- > " currdefLease
						read -p " Enter new default lease time -------- > " newdefLease
						clear
						echo "         COMMAND STATUS         "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which sed)                         bos.sysmgt.sed          exec"
						echo "$(which service)                     bos.sysmgt.service      exec"
						echo "Command run: (which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcp3/dhcpd.conf"
						echo "Command run: $(which service) dhcp3-server restart"
						update_spinner
						sleep 1
						update_spinner
						echo "Changing default lease time from: $currdefLease to: $newdefLease"
						sleep 1
						update_spinner
						sleep 1
                    			        $(which sed) -i "s/default-lease-time $currdefLease/default-lease-time $newdefLease/g" /etc/dhcp3/dhcpd.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Restarting dhcp server"
						sleep 1
						update_spinner
						sleep 1
						$(which service) dhcp3-server restart
						echo "########################################################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly changed default lease time from: $currdefLease to: $newdefLease" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcp3/dhcpd.conf" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "########################################################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
				          else
                                                clear
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "max lease time (in mins) example: 236544"
						echo "[TOP]                                          [Entry Fields]"
						read -p " Enter current max lease time (in mins) ---- > " currmaxLease
						read -p " Enter new max lease time (in mins) -------- > " newmaxLease
						clear
						echo "         COMMAND STATUS            "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which sed)                         bos.sysmgt.sed          exec"
					        echo "$(which service)                     bos.sysmgt.service      exec"
						echo "Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcp3/dhcpd.conf"
						echo "Command run: $(which service) dhcp3-server restart"
						update_spinner
						sleep 1
						update_spinner
						echo "Changing maximum lease time from: $currmaxLease to: $newmaxLease"
						sleep 1
						update_spinner
						sleep 1
                    			        $(which sed) -i "s/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g" /etc/dhcp3/dhcpd.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Restarting dhcp server"
						sleep 1
						update_spinner
						sleep 1
						$(which service) dhcp3-server restart
						echo "################################################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly changed max lease time from: $currmaxLease to: $newmaxLease" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcp3/dhcpd.conf" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "################################################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
				          fi
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "[TOP]                                      [Entry Fields]"
                                               read -p " Edit default or max lease times ------- (default/max) > " ans
                                               if [ "$ans" = "default" ]; then
                                                     clear
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo "current default lease time (in mins) example: 103200"
                                                     echo "new defult lease time (in mins example: 102400)"
                                                     echo "[TOP]                                               [Entry Fields]"
                                                     read -p " Enter current default lease time (in mins) ----- > " currdefLease
                                                     read -p " Enter new defult lease time (in mins) ---------- > " newdefLease
                                                     clear
                                                     echo "         COMMAND STATUS            "
                                                     echo
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo
                                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                     echo
                                                     echo "Before command completion, additional instructions may appear below"
                                                     echo
                                                     echo "File                                 Fileset                 Type"
                                                     echo "-----------------------------------------------------------------"
                                                     echo "$(which sed)                         bos.sysmgt.sed          exec"
                                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                                     echo "Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcpd.conf"
                                                     echo "Command run: $(which service) dhcp restart"
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Changing current lease time from: $currdefLease"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                        			     $(which sed) -i "s/default-lease-time $currdefLease/default-lease-time $newdefLease/g" /etc/dhcpd.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Restarting dhcp server"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which service) dhcp restart
                                                     echo "###################################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly changed default lease time from: $currdefLease to: $newdefLease" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /etc/dhcpd.conf" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "###################################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                            		       else
                            			     clear
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo "max lease time (in mins) example: 124399"
                                                     echo "[TOP]                                            [Entry Fields]"
                                                     read -p " Enter current max lease time (in mins) ------ > " currmaxLease
                                                     read -p " Enter new max lease time (in mins) ---------- > " newmaxLease
                                                     clear
                                                     echo "         COMMAND STATUS        "
                                                     echo
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo
                                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                     echo
                                                     echo "Before command completion, additional instructions may appear below"
                                                     echo
                                                     echo "File                                Fileset                 Type"
                                                     echo "----------------------------------------------------------------"
                                                     echo "$(which sed)                        bos.sysmgt.sed          exec"
                                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                                     echo "Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcpd.conf"
                                                     echo "Command run: $(which service) dhcp restart"
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Changing maximum lease time from: $currmaxLease to: $newmaxLease"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                        			     $(which sed) -i "s/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g" /etc/dhcpd.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Restarting dhcp server"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                    $(which service) dhcp restart
                                                     echo "###########################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly changed max lease time from: $currmaxLease to: $newmaxLease" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /etc/dhcpd.conf" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "###########################################################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
					       fi
					  fi
                                     fi 
			        fi
			    fi
		       else
			    $(which uname) | grep BSD >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
				 echo "OS = BSD"
				 echo "$(date)                                     $(whoami)@$(hostname)"
                                 echo "[TOP]                                      [Entry Fields]"
                                 read -p " Edit default or max lease times ------- (default/max) > " ans
                                 if [ "$ans" = "default" ]; then
				       clear
				       echo "$(date)                                     $(whoami)@$(hostname)"
				       echo "default lease time (in mins) example: 124399"
				       echo "[TOP]                                    [Entry Fields]"
				       read -p " Enter current default lease time ---- > " currdefLease
				       read -p " Enter new default lease time -------- > " newdefLease
				       clear
				       echo "         COMMAND STATUS                "
				       echo
				       echo "$(date)                                     $(whoami)@$(hostname)"
				       echo
				       echo "Command: RUNNING    stdout: yes    stderr: no     "
				       echo
				       echo "Before command completion, additional instructions may appear below"
				       echo
				       echo "File                                 Fileset                 Type"
				       echo "-----------------------------------------------------------------"
				       echo "$(which sed)                         bos.sysmgt.sed          exec"
				       echo "/usr/local/etc/rc.d/isc-dhcpd        bos.sysmgt.isc-dhcpd    exec"
				       echo "Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /usr/local/etc/dhcpd.conf"
				       echo "Command run: /usr/local/etc/rc.d/isc-dhcpd restart"
				       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Changing maximum lease time from: $currdefLease to: $newdefLease"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                        	       $(which sed) -i "s/default-lease-time $currdefLease/default-lease-time $newdefLease/g" /usr/local/etc/dhcpd.conf
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Restarting dhcp server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
				       /usr/local/etc/rc.d/isc-dhcpd reatart
				       if [ $? -eq 0 ]; then
					    echo "#######################################################################################################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfully changed default lease time to: $newdefLease" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /usr/local/etc/dhcpd.conf" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "#######################################################################################################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
				       else
					    echo "#######################################################################################################################################" >> /var/log/smx-log/fail.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Not changed default lease time to: $newdefLease, check command syntax" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Command run: $(which sed) -i 's/default-lease-time $currdefLease/default-lease-time $newdefLease/g' /usr/local/etc/dhcpd.conf" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/fail.log
					    echo "#######################################################################################################################################" >> /var/log/smx-log/fail.log
					    echo "" >> /var/log/smx-log/fail.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/fail.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
				       fi
				 else
				       clear
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo "max lease time (in mins) example: 124399"
                                       echo "[TOP]                                            [Entry Fields]"
                                       read -p " Enter current max lease time (in mins) ------ > " currmaxLease
                                       read -p " Enter new max lease time (in mins) ---------- > " newmaxLease
                                       clear
                                       echo "         COMMAND STATUS        "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                Fileset                 Type"
                                       echo "----------------------------------------------------------------"
				       echo "$(which sed)                        bos.sysmgt.sed          exec"
				       echo "/usr/local/etc/rc.d/isc-dhcpd       bos.sysmgt.isc-dhcpd    exec"
				       echo "Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /usr/local/etc/dhcpd.conf"
				       echo "Command run: /usr/local/etc/rc.d/isc-dhcpd restart"
				       update_spinner
				       sleep 1
                                       update_spinner
                                       echo "Changing maximum lease time from: $currdefLease to: $newdefLease"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                        	       $(which sed) -i "s/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g" /usr/local/etc/dhcpd.conf
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Restarting dhcp server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
				       /usr/local/etc/rc.d/isc-dhcpd reatart
				       if [ $? -eq 0 ]; then
					    echo "######################################################################################################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfully changed max lease time to: $newmaxLease" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /usr/local/etc/dhcpd.conf" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "######################################################################################################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
				       else
					    echo "######################################################################################################################################" >> /var/log/smx-log/fail.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Not changed max lease time to: $newmaxLease, check command syntax" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Command run: $(which sed) -i 's/max-lease-time $currmaxLease/max-lease-time $newmaxLease/g' /usr/local/etc/dhcpd.conf" >> /var/log/smx-log/fail.log
					    echo "" >> /var/log/smx-log/fail.log
					    echo "######################################################################################################################################" >> /var/log/smx-log/fail.log
					    echo "" >> /var/log/smx-log/fail.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/fail.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
				       fi
				 fi
			    else
				 echo "Feature not avaliable for OS X"
				 read -p "Press [enter] to continue..." ReadDamKey
				 dhcp_menu
			    fi
		       fi
                       ;;
	    ip_range)
		       clear
		       $(which uname) | grep Linux >> /dev/null
		       if [ $? -eq 0 ]; then
			    clear
			    echo "OS = Linux"
			    cat /proc/version | grep "Red Hat" >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
			         echo "OS = Red Hat"
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo "Start IP address example: 192.168.1.10"
				 echo "End IP address example: 192.168.1.25"
				 echo "[TOP]                                    [Entry Fields]"
				 read -p " Enter current start IP address ------ > " startIP
				 read -p " Enter current end IP address -------  > " endIP
				 read -p " Enter new start IP address ---------- > " newstartIP
				 read -p " Enter new end IP address ------------ > " newendIP
				 clear
				 echo "         COMMAND STATUS        "
				 echo
				 echo
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo
				 echo "Command: RUNNING    stdout: yes    stderr: no     "
				 echo
				 echo "Before command completion, additional instructions may appear below"
				 echo
				 echo "File                                 Fileset                 Type"
				 echo "-----------------------------------------------------------------"
				 echo "$(which sed)                         bos.sysmgt.sed          exec"
				 echo "/etc/init.d/isc-dhcp-server          bos.sysmgt.isc-dhcp-server     exec"
				 echo "Command run: $(which sed) -i 's/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g' /etc/dhcp/dhcp.conf"
				 echo "Command run: $(which service) dhcp restart"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Changing start IP address from: $startIP to: $newstartIP, and changing end IP address from: $endIP to: $newendIP"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which sed) -i "s/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g" /etc/dhcp/dhcp.conf
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Restarting dhcp server"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which service) dhcp restart
			         echo "####################################################################################################################################" >> /var/log/smx-log/success.log
				 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				 echo "[$(date)] Successfuly changed ip range from: $startIP - $endIP to: $newstartIP - $newendIP" >> /var/log/smx-log/success.log
				 echo "[$(date)] Command run: $(which sed) -i 's/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g' /etc/dhcp/dhcp.conf" >> /var/log/smx-log/success.log
				 echo "" >> /var/log/smx-log/success.log
				 echo "####################################################################################################################################" >> /var/log/smx-log/success.log
				 echo "" >> /var/log/smx-log/success.log
				 read -p "Press [enter] to continue..." ReadDamKey
				 clear
				 echo
				 cat /var/log/smx-log/success.log | tail -n 7
				 echo
			         read -p "Press [enter] to continue..." ReadDamKey
			    else
				 clear
				 cat /proc/version | grep "Debian" >> /dev/null
				 if [ $? -eq 0 ]; then
                                      clear
                                      echo "OS = Debian"
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Start IP address example: 192.168.1.10"
                                      echo "End IP address example: 192.168.1.25"
                                      echo "[TOP]                                 [Entry Fields]"
                                      read -p " Enter current start IP address --- > " startIP
                                      read -p " Enter current end IP address ----- > " endIP
                                      read -p " Enter new start IP address ------- > " newstartIP
                                      read -p " Enter new end IP address --------- > " newendIP
                                      clear
                                      echo "         COMMAND STATUS          "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                        Type"
                                      echo "------------------------------------------------------------------------"
                                      echo "$(which sed)                         bos.sysmgt.sed                 exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "Command run: $(which sed) -i 's/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g' /etc/dhcp/dhcp.conf"
                                      echo "Command run: $(which service) isc-dhcp-server restart"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Changing start IP address from: $startIP to: $newstartIP, and changing end IP address from: $endIP to: newendIP"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i "s/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g" /etc/dhcp/dhcp.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Restarting dhcp server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) isc-dhcp-server restart
                                      echo "###################################################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly changed IP range from: $startIP - $endIP to: $newstartIP - $newendIP" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which sed) -i 's/range dynamic-bootp $startIP $endIP/range dyamic-bootp $newstartIP $newendIP/g' /etc/dhcp/dhcp.conf" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "###################################################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
				 else
                                      clear
                                      cat /proc/version | grep "Ubuntu" >> /dev/null
                                      if [ $? -eq 0 ]; then
					   clear
					   echo "OS = Ubuntu"
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo "Start IP address example: 192.168.1.10"
					   echo "End IP address example: 192.168.1.25"
					   echo "[TOP]                                 [Entry Fields]"
					   read -p " Enter current start IP address --- > " startIP
					   read -p " Enter current end IP address ----- > " endIP
					   read -p " Enter new start IP address ------- > " newstartIP
					   read -p " Enter new end IP address --------- > " newendIP
					   clear
					   echo "         COMMAND STATUS          "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stderr: no     "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                 Type"
					   echo "-----------------------------------------------------------------"
					   echo "$(which sed)                         bos.sysmgt.sed          exec"
					   echo "$(which service)                     bos.sysmgt.service      exec"
					   echo "Command run: $(which sed) -i 's/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g' /etc/dhcp3/dhcp.conf"
					   echo "Command run: $(which service) dhcp3-server restart"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Changing start IP address from: $startIP to: $newstartIP, changing end IP address from: $endIP to: $newendIP"
					   sleep 1
					   update_spinner
					   sleep 1
                		           $(which sed) -i "s/range dynamic-bootp $startIP $endIP/range dynamic-bootp $newstartIP $newendIP/g" /etc/dhcp3/dhcp.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Restarting dhcp server"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which service) dhcp3-server restart
					   echo "###################################################################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly changed IP range from: $startIP - $endIP to: $newstartIP - $newendIP" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which sed) -i 's/range dynamic-bootp $startIP $endIP/range dyamic-bootp $newstartIP $newendIP/g' /etc/dhcp3/dhcp.conf" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "###################################################################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   clear
					   cat /proc/version | grep "SUSE" >> /dev/null
					   if [ $? -eq 0 ]; then
                                                clear
						echo "OS = SuSE"
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "Start IP address example: 192.168.1.10"
						echo "End IP address example: 192.168.1.25"
						echo "[TOP]                                    [Entry Fields]"
						read -p " Enter current start IP address ------ > " startIP
						read -p " Enter current end IP address -------- > " endIP
						read -p " Enter new start IP address ---------- > " newstartIP
						read -p " Enter new end IP address ------------ > " newendIP
						clear
						echo "         COMMAND STATUS         "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                Fileset                 Type"
						echo "----------------------------------------------------------------"
						echo "$(which sed)                        bos.sysmgt.sed          exec"
					        echo "$(which service)                     bos.sysmgt.service      exec"
						echo "Command run: $(which sed) -i 's/range $startIP $endIP/range $newstartIP $newendIP/g' /etc/dhcpd.conf"
						echo "Command run: $(which service) dhcp restart"
						update_spinner
						sleep 1
						update_spinner
						echo "Changing start IP address from: $startIP to: $newstartIP, changing end IP address from: $endIP to: newendIP"
						sleep 1
						update_spinner
						sleep 1
						$(which sed) -i "s/range $startIP $endIP/range $newstartIP $newendIP/g" /etc/dhcpd.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Restarting dhcp server"
						sleep 1
						update_spinner
						sleep 1
						$(which service) dhcp restart
						echo "####################################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly changed IP range from: $startIP - $endIP to: $newstartIP - $newendIP" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which sed) -i 's/range $startIP $endIP/range $newstartIP $newendIP/g' /etc/dhcpd.conf" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "####################################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
					   fi
                                      fi 
			         fi
			    fi
		       else
			    $(which uname) | grep BSD >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
				 echo "OS = BSD"
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo "Start IP address example: 192.168.1.10"
				 echo "End IP address example: 192.168.1.25"
				 echo "[TOP]                                    [Entry Fields]"
				 read -p " Enter current start IP address ------ > " startIP
				 read -p " Enter current end IP address -------- > " endIP
				 read -p " Enter new start IP address ---------- > " newstartIP
				 read -p " Enter new end IP address ------------ > " newendIP
				 clear
				 echo "         COMMAND STATUS         "
				 echo
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo
				 echo "Command: RUNNING    stdout: yes    stderr: no     "
				 echo
				 echo "Before command completion, additional instructions may appear below"
				 echo
				 echo "File                                Fileset                 Type"
				 echo "----------------------------------------------------------------"
				 echo "$(which sed)                        bos.sysmgt.sed          exec"
				 echo "/usr/local/etc/rc.d/isc-dhcpd       bos.sysmgt.isc-dhcpd    exec"
				 echo "Command run: $(which sed) -i 's/range $startIP $endIP/range $newstartIP $newendIP/g' /usr/local/etc/dhcpd.conf"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Changing start IP address from: $startIP to: $newstartIP, changing end IP address from: $endIP to: newendIP"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which sed) -i "s/range $startIP $endIP/range $newstartIP $newendIP/g" /usr/local/etc/dhcpd.conf
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Restarting dhcp server"
				 sleep 1
				 update_spinner
				 sleep 1
				 /usr/local/etc/rc.d/isc-dhcpd restart
				 if [ $? -eq 0 ]; then
				      echo "########################################################################################################################" >> /var/log/smx-log/success.log
				      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				      echo "[$(date)] Sucessfully changed start and IP address to: $newstartIP and $newendIP" >> /var/log/smx-log/success.log
				      echo "[$(date)] Command run: $(which sed) -i 's/range $startIP $endIP/range $newstartIP $newendIP/g' /usr/local/etc/dhcpd.conf" >> /var/log/smx-log/success.log
				      echo "" >> /var/log/smx-log/success.log
				      echo "########################################################################################################################" >> /var/log/smx-log/success.log
				      echo "" >> /var/log/smx-log/success.log
				      read -p "Press [enter] to continue..." ReadDamKey
				      clear
				      echo
				      cat /var/log/smx-log/success.log | tail -n 7
				      echo
				      read -p "Press [enter] to continue..." ReadDamKey
				 else
				      echo "########################################################################################################################" >> /var/log/smx-log/fail.log
				      echo "Log file started at: $(date)" /var/log/smx-log/fail.log
				      echo "[$(date)] Not changed start and end IP addresses, check command syntax" >> /var/log/smx-log/fail.log
				      echo "[$(date)] Command run: $(which sed) -i 's/range $startIP $endIP/range $newstartIP $newendIP/g' /usr/local/etc/dhcpd.conf" >> /var/log/smx-log/fail.log
				      echo "" >> /var/log/smx-log/fail.log
				      echo "########################################################################################################################" >> /var/log/smx-log/fail.log
				      echo "" >> /var/log/smx-log/fail.log
				      read -p "Press [enter] to continue..." ReadDamKey
				      clear
				      echo
				      cat /var/log/smx-log/fail.log | tail -n 7
				      echo
				      read -p "Press [enter] to continue..." ReadDamKey
				 fi
			    else
				 echo "Feature not avaliable for OS X"
				 read -p "Press [enter] to continue..." ReadDamKey
				 dhcp_menu
			    fi
		       fi
                       ;;
            help)
                   echo "install > Install DHCP server on system"
                   echo "start > Start DHCP"
                   echo "stop > Stop DHCP"
                   echo "restart > Restart DHCP"
                   echo "ch_lease > Change lease times on DHCP server"
                   echo "ip_range > Change IP range on DHCP server"
                   echo "help > This menu"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell" 
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;          
	    exit)
                   clear
                   echo "####################################################" >> /var/log/smx-log/exit.log
            	   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
            	   echo "[$(date)] Successfuly terminated smx.sh#srv_menu/dhcp_menu" >> /var/log/smx-log/exit.log
            	   echo "" >> /var/log/smx-log/exit.log
                   echo "####################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
            	   srv_menu
            	   ;;
	    exit-mas)
                       clear
                       echo "#################################" >> /var/log/smx-log/exit.log
            	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
            	       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
            	       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
            	       exit 0
            	       ;;
	    *)         clear
            	       echo "        COMMAND STATUS        "
            	       echo
            	       echo "$(date)                                     $(whoami)@$(hostname)"
            	       echo
            	       echo "Command: FAIL    stdout: yes    stderr: no        "
            	       echo
            	       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 4576 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done
}

function sql_menu () {
    while :
    do
	clear
      	echo "$(date)                                     $(whoami)@$(hostname)"
      	echo
      	read -p "$(whoami)@$(hostname):smx/sql_menu # " choice_sql
      	echo
	
      	case "$choice_sql" in
      	    install)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /etc/redhat-release | grep 7 >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
			        echo "OS = Red Hat v7"
				echo "        COMMAND STATUS          "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                Fileset                                  Type"
				echo "---------------------------------------------------------------------------------"
				echo "$(which yum)                        bos.pkgmgt.yum                           exec"
				echo "$(which service)                    bos.sysmgt.service                       exec"
				echo "$(which chkconfig)                  bos.sysmgt.chkconfig                     exec"
				echo "$(which mysql_secure_installation)  bos.sysmgt.mysql_secure_installation     exec"
				echo "$(which mysql)                      bos.sysmgt.mysql                         exec"
				echo "Command run: $(which yum) -y install mariadb-server | $(which tee) /var/log/smx-log/yum.log"
				echo "Command run: $(which service) mariadb start"
				echo "Command run: $(which chkconfig) mariadb on"
				echo "Command run: $(which mysql_secure_installation)"
				echo "Command run: $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'"
				echo "Command run: $(which mysql) -u root -p -e 'show databases;'"
				update_spinner
				sleep 1
				update_spinner
				echo "Installing package: mariadb-server"
				sleep 1
				update_spinner
				sleep 1
				$(which yum) -y install mariadb-server | $(which tee) /var/log/smx-log/yum.log
				if [ $PIPESTATUS -eq 0 ]; then
			             echo "########################################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly installed mysql on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which yum) -y install mariadb-server | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "########################################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                  		else
			             echo "#######################################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not installed mysql on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which yum) -y install mariadb-server | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "#######################################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
                  		fi
				echo "character-set-server=utf8" >> /etc/my.cnf
				update_spinner
				sleep 1
				update_spinner
				echo "Starting mysql server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) mariadb start
				update_spinner
				sleep 1
				update_spinner
				echo "Setting mysql to start at startup"
				sleep 1
				update_spinner
				sleep 1
				$(which chkconfig) mariadb on
				update_spinner
				sleep 1
				update_spinner
				echo "Securing mysql installation"
				sleep 1
				update_spinner
				sleep 1
				$(which mysql_secure_installation)
				echo "Enter SQL root password to list mysql.user..."
				$(which mysql) -u root -p -e 'select user,host,password from mysql.user;'
				echo "Enter SQL root password to show databases..."
				$(which mysql) -u root -p -e 'show databases;'
				echo
				echo "SQL Successfuly installed on system: $(hostname)"
			        read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /etc/redhat-release | grep 6
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Red Hat v6"
                                     echo "        COMMAND STATUS          "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                Fileset                                  Type"
                                     echo "---------------------------------------------------------------------------------"
                                     echo "$(which yum)                        bos.pkgmgt.yum                           exec"
                                     echo "$(which service)                    bos.sysmgt.service                       exec"
                                     echo "$(which chkconfig)                  bos.sysmgt.chkconfig                     exec"
                                     echo "$(which mysql_secure_installation)  bos.sysmgt.mysql_secure_installation     exec"
                                     echo "$(which mysql)                      bos.sysmgt.mysql                         exec"
                                     echo "Command run: $(which yum) -y install Mysql-server | $(which tee) /var/log/smx-log/yum.log"
                                     echo "Command run: $(which service) mysqld start"
                                     echo "Command run: $(which chkconfig) mysqld on"
                                     echo "Command run: $(which mysql_secure_installation)"
                                     echo "Command run: $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'"
                                     echo "Command run: $(which mysql) -u root -p -e 'show databases;'"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing package: mysql-server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which yum) -y install mysql-server | $(which tee) /var/log/smx-log/yum.log
                                     if [ $PIPESTATUS -eq 0 ]; then
					  echo "########################################################################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly installed mysql on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which yum) -y install mysql-server | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "########################################################################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo "#######################################################################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Not installed mysql on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Command run: $(which yum) -y install mysql-server | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  echo "#######################################################################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
					  exit 1
                                     fi
                                     echo "character-set-server=utf8" >> /etc/my.cnf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Starting mysql server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) mysqld start
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Setting mysql to start at startup"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which chkconfig) mysqld on
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Securing mysql installation"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which mysql_secure_installation)
                                     echo "Enter SQL root password to list mysql.user..."
                                     $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'
                                     echo "Enter SQL root password to show databases..."
                                     $(which mysql) -u root -p -e 'show databases;'
                                     echo
                                     echo "SQL Successfuly installed on system: $(hostname)"
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
				else     
                                     cat /proc/version | grep "Debian" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Debian"
					  echo "             COMMAND STATUS        "
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                                     Type"
					  echo "-------------------------------------------------------------------------------------"
					  echo "$(which apt-get)                     bos.pkgmgt.apt-get                          exec"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "$(which mysql_secure_installation)   bos.sysmgt.mysql_secure_installation        exec"
					  echo "$(which mysql)                       bos.sysmgt.mysql                            exec"
					  echo "Command run: $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log"
					  echo "Command run: $(which service) mysqld start"
					  echo "Command run: $(which mysql_secure_installation)"
					  echo "Command run: $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'"
					  echo "Command run: $(which mysql) -u root -p -e 'show databases;'"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Installing package: mysql-server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log
					  if [ $PIPESTATUS -eq 0 ]; then
                                               echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed mysql-server on: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "#####################################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
           				  else
                                               echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not installed mysql-server on: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "#####################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
                       		          fi
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Starting mysql server"
					  sleep 1
					  update_spinner
					  sleep 1
                     		          $(which service) mysqld start
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Securing mysql installation"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which mysql_secure_installation)
					  echo "Enter SQL root password to list mysql.user..."
					  $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'
					  echo "Enter SQL root password to show databases..."
					  $(which mysql) -u root -p -e 'show databases;'
					  echo
					  echo "SQL [$(date)] Successfuly installed on system: $(hostname)"
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "Ubuntu" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = Ubuntu"
                                               echo "             COMMAND STATUS        "
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                                     Type"
                                               echo "-------------------------------------------------------------------------------------"
                                               echo "$(which apt-get)                     bos.pkgmgt.apt-get                          exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "$(which mysql_secure_installation)   bos.sysmgt.mysql_secure_installation        exec"
                                               echo "$(which mysql)                       bos.sysmgt.mysql                            exec"
                                               echo "Command run: $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log"
                                               echo "Command run: $(which service) mysqld start"
                                               echo "Command run: $(which mysql_secure_installation)"
                                               echo "Command run: $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'"
                                               echo "Command run: $(which mysql) -u root -p -e 'show databases;'"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Installing package: mysql-server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log
                                               if [ $PIPESTATUS -eq 0 ]; then
						    echo "#####################################################################################################" >> /var/log/smx-log/success.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Successfuly installed mysql-server on: $(hostname)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Command run: $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    echo "#####################################################################################################" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/success.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
    			    	               else 
						    echo "#####################################################################################################" >> /var/log/smx-log/fail.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Not installed mysql-server on: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Command run: $(which apt-get) -y install mysql-server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    echo "#####################################################################################################" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/fail.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
						    exit 1
                    		               fi
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Starting mysql server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) mysqld start
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Securing mysql installation"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which mysql_secure_installation)
                                               echo "Enter SQL root password to list mysql.user..."
                                               $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'
                                               echo "Enter SQL root password to show databases..."
                                               $(which mysql) -u root -p -e 'show databases;'
                                               echo
                                               echo "SQL [$(date)] Successfuly installed on system: $(hostname)"
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               clear
                                               cat /proc/version | grep "SUSE" >> /dev/null
                                               if [ $? -eq 0 ]; then
						    clear
						    echo "OS = SuSE"
						    echo "         COMMAND STATUS           "
						    echo
						    echo "$(date)                                     $(whoami)@$(hostname)"
						    echo
						    echo "Command: RUNNING    stdout: yes    stderr: no     "
						    echo
						    echo "Before command completion, additional instructions may appear below"
						    echo
						    echo "File                                 Fileset                                     Type"
						    echo "-------------------------------------------------------------------------------------"
						    echo "$(which zypper)                      bos.pkgmgt.zypper                           exec"
						    echo "$(which service)                     bos.sysmgt.service      exec"
						    echo "$(which chkconfig)                   bos.sysmgt.chkconfig                        exec"
						    echo "$(which mysql_secure_installation)   bos.sysmgt.mysql_secure_installation        exec"
						    echo "$(which mysql)                       bos.sysmgt.mysql                            exec"
						    echo "Command run: $(which zypper) in -y mysql | $(which tee) /var/log/smx-log/zypper.log"
						    echo "Command run: $(which service) mysqld start"
						    echo "Command run: $(which chkconfig) mysql on"
						    echo "Command run: $(which mysql_secure_installation)"
						    echo "Command run: $(which mysql) -u root -p -e 'list user,host,password from mysql.user;'"
						    echo "Command run: $(which mysql) -u root -p -e 'show databases;'"
						    update_spinner
						    sleep 1
						    update_spinner
						    echo "Installing package: mysql"
						    sleep 1
						    update_spinner
						    sleep 1
						    $(which zypper) in -y mysql | $(which tee) /var/log/smx-log/zypper.log
						    if [ $PIPESTATUS -eq 0 ]; then
							 echo "#######################################################################################" >> /var/log/smx-log/success.log
							 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
							 echo "[$(date)] Successfuly installed mysql on: $(hostname)" >> /var/log/smx-log/success.log
							 echo "[$(date)] Command run: $(which zypper) in -y mysql | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
							 echo "" >> /var/log/smx-log/success.log
							 echo "#######################################################################################" >> /var/log/smx-log/success.log
							 echo "" >> /var/log/smx-log/success.log
							 read -p "Press [enter] to continue..." ReadDamKey
							 clear
							 echo
							 cat /var/log/smx-log/success.log | tail -n 7
							 echo
							 read -p "Press [enter] to continue..." ReadDamKey
						    else
							 echo "#######################################################################################" >> /var/log/smx-log/fail.log
							 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
							 echo "[$(date)] Not installed mysql on: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
							 echo "[$(date)] Command run: $(which zypper) in -y mysql | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
							 echo "" >> /var/log/smx-log/fail.log
							 echo "#######################################################################################" >> /var/log/smx-log/fail.log
							 echo "" >> /var/log/smx-log/fail.log
							 read -p "Press [enter] to continue..." ReadDamKey
							 clear
							 echo
							 cat /var/log/smx-log/fail.log | tail -n 7
							 echo
							 read -p "Press [enter] to continue..." ReadDamKey
							 exit 1
                           			    fi
						    update_spinner
						    sleep 1
						    update_spinner
						    echo "Starting mysql server"
						    sleep 1
						    update_spinner
						    sleep 1
                         			    $(which service) mysql start
						    update_spinner
						    sleep 1
						    update_spinner
						    echo "Setting mysql to start on startup"
						    sleep 1
						    update_spinner
						    sleep 1
                         			    $(which chkconfig) mysql on
						    update_spinner
						    sleep 1
						    update_spinner
						    echo "Securing mysql installation"
						    sleep 1
						    update_spinner
						    sleep 1
						    $(which mysql_secure_installation)
						    echo "Enter SQL root password to list mysql.user..."
						    $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'
						    echo "Enter SQL root password to show databases..."
						    $(which mysql) -u root -p -e 'show databases;'
						    echo
						    echo "SQL [$(date)] Successfuly installed on system: $(hostname)"
						    read -p "Press [enter] to continue..." ReadDamKey
                                               fi
					  fi 
    			             fi
				fi     
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS                      "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                                        Type"
				echo "----------------------------------------------------------------------------------------"
				echo "$(which pkg)                         bos.sysmgt.pkg                                 exec"
				echo "$(which sysrc)                       bos.sysmgt.sysrc                               exec"
				echo "/usr/local/etc/rc.d/mysql-server     bos.sysmgt.mysql-server                        exec"
				echo "$(which mysql_secure_installation)   bos.sysmgt.mysql_secure_installation           exec"
				echo "$(which mysql)                       bos.sysmgt.mysql                               exec"
				echo "Command run: $(which pkg) install databases/mysql56-server"
				echo "Command run: $(which sysrc) mysql_enable=YES"
				echo "Command run: /usr/local/etc/rc.d/mysql-server start"
				echo "Command run: $(which mysql_secure_installation)"
				echo "Command run: $(which mysql) -u root -p -e 'select user,host,password from mysql.user;'"
				echo "Command run: $(which mysql) -u root -p -e 'show databases;'"
				update_spinner
				sleep 1
				update_spinner
				echo "Installing mysql-server"
				sleep 1
				update_spinner
				sleep 1
				$(which pkg) install databases/mysql56-server
				if [ $? -eq 0 ]; then
				     echo "#########################################################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully installed mysql server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: $(which pkg) install databases/mysql56-server" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "#########################################################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to conitnue..." ReadDamKey
				else
				     echo "#########################################################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not installed mysql server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: $(which pkg) install databases/mysql56-server" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "#########################################################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to conitnue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				fi
				$(which sysrc) mysql_enable=YES
				/usr/local/etc/rc.d/mysql-server start
				$(which mysql_secure_installation)
				$(which mysql) -u root -p -e 'select user,host,password from mysql.user;'
				$(which mysql) -u root -p -e 'show databases;'
			   else
			        echo "Feature not avaliable for OS X"
				read -p "Press [enter] to continue..." ReadDamKey
			        sql_menu
			   fi
		      fi
                      ;;
	    start)
		    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /etc/redhat-release | grep 7 >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
			      echo "OS = Red Hat v7"
                              echo "         COMMAND STATUS          "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) mariadb start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting mysql server"
                              sleep 1
                              update_spinner
                              sleep 1
                              /etc/rc.d/init.d/mariadb start
			      echo "##########################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly started mariadb on: $(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which service) mariadb start" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "##########################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
			      read -p "Press [enter] to continue..." ReadDamKey
			 else
                              clear
                              cat /etc/redhat-release | grep 6 >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
				   echo "OS = Red Hat v6"
				   echo "         COMMAND STATUS          "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                 Type"
				   echo "-----------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) mysqld start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting mysql server"
				   sleep 1
				   update_spinner
				   sleep 1
				   /etc/rc.d/init.d/mysqld start
				   echo "##########################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started mysqld on: $(hostname)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) ,mysqld start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "##########################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              else
				   clear
				   cat /proc/version | grep "Debian" >> /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
    			                echo "OS = Debian"
					echo "         COMMAND STATUS          "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) mysql start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting mysql server"
					sleep 1
					update_spinner
					sleep 1
					$(which service) mysql start
    			                echo "##########################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started mysqld on: $(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) mysql start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "##########################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
    			                read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        clear
					cat /proc/version | grep "Ubuntu" >> /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = Ubuntu"
                                             echo "         COMMAND STATUS          "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) mysql start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting mysql server"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) mysql start
                                             echo "##########################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started mysqld on: $(hostname)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) mysql start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "##########################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					else
                                             clear
                                             cat /proc/version | grep "SUSE" >> /dev/null
                                             if [ $? -eq 0 ]; then
						  clear
						  echo "OS = SuSE"
						  echo "         COMMAND STATUS          "
						  echo
						  echo "$(date)                                     $(whoami)@$(hostname)"
						  echo
						  echo "Command: RUNNING    stdout: yes    stderr: no     "
						  echo
						  echo "Before command completion, additional instructions may appear below"
						  echo
						  echo "File                                 Fileset                 Type"
						  echo "-----------------------------------------------------------------"
						  echo "$(which service)                     bos.sysmgt.service      exec"
						  echo "Command run: $(which service) mysql start"
						  update_spinner
						  sleep 1
						  update_spinner
						  echo "Starting mysql server"
						  sleep 1
						  update_spinner
						  sleep 1
						  $(which service) mysql start
						  echo "##########################################" >> /var/log/smx-log/success.log
						  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						  echo "[$(date)] Successfuly started mysqld on: $(hostname)" >> /var/log/smx-log/success.log
						  echo "[$(date)] Command run: $(which service) mysql start" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  echo "##########################################" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  read -p "Press [enter] to continue..." ReadDamKey
						  clear
						  echo
						  cat /var/log/smx-log/success.log | tail -n 7
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
                                             fi
					fi 
    			           fi
                              fi     
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "OS = BSD"
			      echo "         COMMAND STATUS                      "
			      echo
			      echo "$(date)                                     $(whoami)@$(hostname)"
			      echo
			      echo "Command: RUNNING    stdout: yes    stderr: no     "
			      echo
			      echo "Before command completion, additonal instructions may appear below"
			      echo
			      echo "File                                Fileset                        Type"
			      echo "-----------------------------------------------------------------------"
			      echo "/usr/local/etc/rc.d/mysql-server    bos.sysmgt.mysql-server        exec"
			      echo "Command run: /usr/local/etc/rc.d/mysql-server start"
			       update_spinner
			       sleep 1
			       update_spinner
			       echo "Starting mysql server"
			       sleep 1
			       update_spinner
			       sleep 1
			       /usr/local/etc/rc.d/mysql-server start
			       if [ $? -eq 0 ]; then
				    echo "#############################################################" >> /var/log/smx-log/success.log
				    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				    echo "[$(date)] Successfully started mysql-server" >> /var/log/smx-log/success.log
				    echo "[$(date)] Command run: /usr/local/etc/rc.d/mysql-server start" >> /var/log/smx-log/success.log
				    echo "" >> /var/log/smx-log/success.log
				    echo "#############################################################" >> /var/log/smx-log/success.log
				    echo "" >> /var/log/smx-log/success.log
				    read -p "Press [enter] to continue..." ReadDamKey
				    clear
				    echo
				    cat /var/log/smx-log/success.log | tail -n 7
				    echo
				    read -p "Press [enter] to continue..." ReadDamKey
			       else
				    echo "#############################################################" >> /var/log/smx-log/fail.log
				    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				    echo "[$(date)] Not started mysql-server, check command syntax" >> /var/log/smx-log/fail.log
				    echo "[$(date)] Command run: /usr/local/etc/rc.d/mysql-server start" >> /var/log/smx-log/fail.log
				    echo "" >> /var/log/smx-log/fail.log
				    echo "#############################################################" >> /var/log/smx-log/fail.log
				    echo "" >> /var/log/smx-log/fail.log
				    read -p "Press [enter] to continue..." ReadDamKey
				    clear
				    echo
				    cat /var/log/smx-log/fail.log | tail -n 7
				    echo
				    read -p "Press [enter] to continue..." ReadDamKey
			       fi
			 else
			      echo "Feature not available for OS X"
			      read -p "Press [enter] to conitnue..." ReadDamKey
			      sql_menu
			 fi
		    fi
                    ;;
	    stop)
		   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /etc/redhat-release | grep 7 >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
			     echo "OS = Red Hat v7"
                             echo "         COMMAND STATUS          "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) mariadb stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping mysql server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) mariadb stop
			     echo "##########################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly stopped mariadb on: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) mariadb stop" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "##########################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
			     read -p "Press [enter] to continue..." ReadDamKey
			else
                             clear
                             cat /etc/redhat-release | grep 6 >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
				  echo "OS = Red Hat v6"
				  echo "         COMMAND STATUS          "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) mysqld stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping mysql server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) mysqld stop
				  echo "##########################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped mysqld on: $(hostname)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) mysqld stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "##########################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             else      
				  clear
				  cat /proc/version | grep "Debian" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
    			               echo "OS = Debian"
                                       echo "         COMMAND STATUS          "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) mysql stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping mysql server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) mysql stop
                                       echo "##########################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped mysqld on: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) mysql stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "##########################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
    			               read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       clear
                                       cat /proc/version | grep "Ubuntu" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = Ubuntu"
					    echo "         COMMAND STATUS          "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) mysql stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping mysql server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) mysql stop
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo "##########################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped mysqld on: $(hostname)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) mysql stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "##########################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       else
					    clear
					    cat /proc/version | grep "SUSE" >> /dev/null
					    if [ $? -eq 0 ]; then
						 clear
						 echo "OS = SuSE"
						 echo "         COMMAND STATUS          "
						 echo
						 echo "$(date)                                     $(whoami)@$(hostname)"
						 echo
						 echo "Command: RUNNING    stdout: yes    stderr: no     "
						 echo
						 echo "Before command completion, additional instructions may appear below"
						 echo
						 echo "File                                 Fileset                 Type"
						 echo "-----------------------------------------------------------------"
						 echo "$(which service)                     bos.sysmgt.service      exec"
						 echo "Command run: $(which service) mysql stop"
						 update_spinner
						 sleep 1
						 update_spinner
						 echo "Stopping mysql server"
						 sleep 1
						 update_spinner
						 sleep 1
						 $(which service) mysql stop
						 echo "##########################################" >> /var/log/smx-log/success.log
						 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						 echo "[$(date)] Successfuly stopped mysqld on: $(hostname)" >> /var/log/smx-log/success.log
						 echo "[$(date)] Command run: $(which service) mysql stop" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 echo "##########################################" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 read -p "Press [enter] to continue..." ReadDamKey
						 clear
						 echo
						 cat /var/log/smx-log/success.log | tail -n 7
						 echo
						 read -p "Press [enter] to continue..." ReadDamKey
					    fi
                                       fi 
    			          fi
                             fi     
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "OS = BSD"
			     echo "         COMMAND STATUS                "
			     echo
			     echo "$(date)                                     $(whoami)@$(hostname)"
			     echo
			     echo "Command: RUNNING    stdout: yes    stderr: no     "
			     echo
			     echo "Before command completion, additional instructions may appear below"
			     echo
			     echo "File                                 Fileset                 Type"
			     echo "-----------------------------------------------------------------"
			     echo "/usr/local/etc/rc.d/mysql-server    bos.sysmgt.mysql-server  exec"
			     echo "Command run: /usr/local/etc/rc.d/mysql-server stop"
			     update_spinner
			     sleep 1
			     update_spinner
			     echo "Stopping mysql server"
			     sleep 1
			     update_spinner
			     sleep 1
			     /usr/local/etc/rc.d/mysql-server stop
			     if [ $? -eq 0 ]; then
				  echo "##########################################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfully stopped mysql-server" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/mysql-server stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "##########################################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else
				  echo "##########################################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped mysql-server, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/mysql-server stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "##########################################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     fi
			else
			     echo "Feature not availiable for OS X"
			     read -p "Press [enter] to continue..." ReadDamKey
			     sql_menu
			fi
		   fi
                   ;;
	    restart)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /etc/redhat-release | grep 7 >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
			        echo "OS = Red Hat v7"
				echo "         COMMAND STATUS          "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) mariadb restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting mysql server"
				sleep 1
				update_spinner
				sleep 1 
				$(which service) mariadb restart
			        echo "############################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "[$(date)] Successfuly restarted mariadb on: $(hostname)" >> /var/log/smx-log/success.log
				echo "[$(date)] Command run: $(which service) mariadb restart" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				echo "############################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
			        read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /etc/redhat-release | grep 6 >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Red Hat v6"
                                     echo "         COMMAND STATUS          "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) mysqld restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting mysql server"
                                     sleep 1
                                     update_spinner
                                     sleep 1 
                                     $(which service) mysqld restart
                                     echo "############################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted mysqld on: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) mysqld restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "############################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else     
                                     clear
                                     cat /proc/version | grep "Debian" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Debian"
					  echo "         COMMAND STATUS          "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) mysql restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting mysql server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) mysql restart
					  echo "############################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted mysqld on: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) mysql restart" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "############################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "Ubuntu" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = Ubuntu"
                                               echo "         COMMAND STATUS          "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) mysql restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting mysql server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) mysql restart
                                               echo "############################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted mysqld on: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) mysql restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "############################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               clear
                                               cat /proc/version | grep "SUSE" >> /dev/null
                                               if [ $? -eq 0 ]; then
						    clear
						    echo "OS = SuSE"
						    echo "         COMMAND STATUS          "
						    echo
						    echo "$(date)                                     $(whoami)@$(hostname)"
						    echo
						    echo "Command: RUNNING    stdout: yes    stderr: no     "
						    echo
						    echo "Before command completion, additional instructions may appear below"
						    echo
						    echo "File                                 Fileset                 Type"
						    echo "-----------------------------------------------------------------"
						    echo "$(which service)                     bos.sysmgt.service      exec"
						    echo "Command run: $(which service) mysql restart"
						    update_spinner
						    sleep 1
						    update_spinner
						    echo "Restarting mysql server"
						    sleep 1
						    update_spinner
						    sleep 1
						    $(which service) mysql restart
						    echo "############################################" >> /var/log/smx-log/success.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Successfuly restarted mysqld on: $(hostname)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Command run: $(which service) mysql restart" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    echo "############################################" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/success.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
                                               fi
					  fi 
    			             fi
				fi     
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS                "
				echo
			        echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "/usr/local/etc/rc.d/mysql-server    bos.sysmgt.mysql-server  exec"
				echo "Command run: /usr/local/etc/rc.d/mysql-server restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Stopping mysql server"
				sleep 1
				update_spinner
				sleep 1
				/usr/local/etc/rc.d/mysql-server restart
				if [ $? -eq 0 ]; then
				     echo "###############################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully restarted mysql-server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/mysql-server restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "###############################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "###############################################################" >> /var/log/smx-log/fail.log
				     echo "log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not restarted mysql-server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/mysql-server restart" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "###############################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				fi
			   else
			        echo "Feature not availiable for OS X"
			        read -p "Press [enter] to conitnue..." ReadDamKey
				sql_menu
			   fi
		      fi
                      ;;
	    addusr)
		     clear
            	     echo "$(date)                                     $(whoami)@$(hostname)"
            	     echo "[TOP]                                    [Entry Fields]"
            	     read -p " Enter username ---------------------- > " userName
            	     read -p " Enter hostname ---------------------- > " hostName
            	     read -p " Enter password ---------------------- > " pwdWord
            	     clear
            	     echo "         COMMAND STATUS         "
            	     echo
            	     echo "$(date)                                     $(whoami)@$(hostname)"
            	     echo
            	     echo "Command: RUNNING    stdout: yes    stderr: no     "
            	     echo
            	     echo "Before command completion, additional instructions may appear below"
            	     echo
            	     echo "File                                 Fileset                 Type"
            	     echo "-----------------------------------------------------------------"
            	     echo "$(which mysql)                       bos.sysmgt.mysql        exec"
            	     echo "Command run: $(which mysql) -u root -p -e 'CREATE USER '$userName'@'$hostName' IDENTIFIED BY '$pwdWord';'"
            	     echo "Command run: $(which mysql) -u root -p -e 'GRANT ALL PRIVILEGES ON * . * TO '$userName'@'$hostName';'"
            	     echo "Command run: $(which mysql) -u root -p -e 'FLUSH PRIVILEGES;'"
            	     update_spinner
                     sleep 1
                     update_spinner
                     echo "Adding new user: $userName to mysql server"
                     sleep 1
                     update_spinner
                     sleep 1
            	     echo "Enter SQL root password to add user: $userName @: $hostName..."
            	     $(which mysql) -u root -p -e "CREATE USER '$userName'@'$hostName' IDENTIFIED BY '$pwdWord';"
            	     if [ $? -eq 0 ]; then
			  echo "#########################################################################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly created user: $userName @: $hostName on SQL server" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which mysql) -u root -p -e 'CREATE USER '$userName'@'$hostName' IDENTIFIED BY '$pwdWord';'" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "#########################################################################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
      		     else
			  echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not created user: $userName @: $hostName on SQL server" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which mysql) -u root -p -e 'CREATE USER '$userName'@'$hostName' IDENTIFIED BY '$pwdWord';'" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "#########################################################################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                          exit 1
		     fi
            	     echo "Enter SQL root password to grant all privileges to: $userName..."
            	     $(which mysql) -u root -p -e "GRANT ALL PRIVILEGES ON * . * TO '$userName'@'$hostName';"
            	     echo "Enter SQL root password to flush privileges..."
            	     $(which mysql) -u root -p -e 'FLUSH PRIVILEGES;'
            	     read -p "Press [enter] to continue..." ReadDamKey
            	     ;;
	    chpwd)
            	    clear
            	    echo "$(date)                                     $(whoami)@$(hostname)"
              	    echo "[TOP]                                  [Entry Fields]"
              	    read -p " Enter new password ---------------- > " pwdWord
              	    read -p " Enter username -------------------- > " userName
              	    read -p " Enter hostname -------------------- > " hostName
              	    clear
              	    echo "         COMMAND STATUS          "
              	    echo
              	    echo "$(date)                                     $(whoami)@$(hostname)"
              	    echo
              	    echo "Command: RUNNING    stdout: yes    stderr: no     "
              	    echo
              	    echo "Before command completion, additional instructions may appear below"
              	    echo
              	    echo "File                                 Fileset                 Type"
              	    echo "-----------------------------------------------------------------"
              	    echo "$(which mysql)                       bos.sysmgt.mysql        exec"
              	    echo "Command run: $(which mysql) -u root -p -e 'UPDATE mysql.user SET Password=PASSWORD('$pwdWord') WHERE User='$userName' AND Host='$hostName';'"
              	    update_spinner
                    sleep 1
                    update_spinner
                    echo "Changing password of user: $userName"
                    sleep 1
                    update_spinner
                    sleep 1
              	    echo "Enter SQL root password to change user: $userName password..."
              	    $(which mysql) -u root -p -e "UPDATE mysql.user SET Password=PASSWORD('$pwdWord') WHERE User='$userName' AND Host='$hostName';"
              	    if [ $? -eq 0 ]; then
			 echo "###########################################################################################################################################" >> /var/log/smx-log/success.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                         echo "[$(date)] Successfuly changed password for user: $userName @: $hostName" >> /var/log/smx-log/success.log
                         echo "[$(date)] Command run: $(which mysql) -u root -p -e 'UPDATE mysql.user SET Password=PASSWORD('$pwdWord) WHERE User='$userName' AND Host='$hostName';'" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         echo "###########################################################################################################################################" >> /var/log/smx-log/success.log
                         echo "" >> /var/log/smx-log/success.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/success.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
      		    else
			 echo "############################################################################################################################################" >> /var/log/smx-log/fail.log
                         echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Not changed password for user: $userName @: $hostName, check command syntax" >> /var/log/smx-log/fail.log
                         echo "[$(date)] Command run: $(which mysql) -u root -p -e 'UPDATE mysql.user SET Password=PASSWORD('$pwdWord') WHERE User='$userName' AND Host='$hostName';'" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         echo "############################################################################################################################################" >> /var/log/smx-log/fail.log
                         echo "" >> /var/log/smx-log/fail.log
                         read -p "Press [enter] to continue..." ReadDamKey
                         clear
                         echo
                         cat /var/log/smx-log/fail.log | tail -n 7
                         echo
                         read -p "Press [enter] to continue..." ReadDamKey
              	    fi
              	    ;;
	    setpriv)
		      clear
            	      echo "$(date)                                     $(whoami)@$(hostname)"
            	      echo "[TOP]                                  [Entry Fields]"
            	      read -p " Grant or revoke privileges -------- (grant/revoke) > " ansPriv
            	      if [ "$ansPriv" = "grant" ]; then
                            clear
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "ALL PRIVILEGE example: SELECT, UPDATE, INSERT"
                            echo "[TOP]                                   [Entry Fields]"
                            read -p " Enter privileges ------------------- > " privChoice
                            read -p " Enter table name ------------------- > " tblName
                            read -p " Enter username --------------------- > " userName
                            clear
                            echo "         COMMAND STATUS          "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                Fileset                 Type"
                            echo "----------------------------------------------------------------"
                            echo "$(which mysql)                      bos.sysmgt.mysql        exec"
                            echo "Command run: $(which mysql) -u root -p -e 'GRANT $privChoice ON $tblName TO $userName;'"
                            echo "Command run: $(which mysql) -u root -p -e 'FLUSH PRIVILEGES;'"
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Setting privildges: $privChoice to user: $userName on table: $tblName"
                            sleep 1
                            update_spinner
                            sleep 1
                            echo "Enter SQL root password to grant $privChoice to: $userName on: $tblName..."
                            $(which mysql) -u root -p -e 'GRANT $privChoice TO $tblName TO $userName;'
                            if [ $? -eq 0 ]; then
				echo "#######################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly granted privileges to $userName on table: $tblName" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which mysql) -u root -p -e 'GRANT $privChoice ON $tblName TO $userName;'" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "#######################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
			    else
				 echo "#######################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not granted privileges to $userName on table: $tblName, check command syntax" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Command run: $(which mysql) -u root -p -e 'GRANT $privChoice ON $tblName TO $userName;'" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "#######################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 exit 1
                            fi
                            echo "Enter SQL root password to flush privildges..."
                            $(which mysql) -u root -p -e 'FLUSH PRIVILEGES;'
                            read -p "Press [enter] to continue..." ReadDamKey
      		      else
			    clear
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo "ALL PRIVILEGES MUST BE SEPERATED BY A COLON"
                            echo "priviledge example: SELECT, UPDATE, INSERT"
                            echo "[TOP]                                   [Entry Fields]"
                            read -p " Enter privileges ------------------- > " privChoice
                            read -p " Enter table name ------------------- > " tblName
                            read -p " Enter username --------------------- > " userName
                            clear
                            echo "         COMMAND STATUS          "
                            echo
                            echo "$(date)                                     $(whoami)@$(hostname)"
                            echo
                            echo "Command: RUNNING    stdout: yes    stderr: no     "
                            echo
                            echo "Before command completion, additional instructions may appear below"
                            echo
                            echo "File                                Fileset                 Type"
                            echo "----------------------------------------------------------------"
                            echo "$(which mysql)                      bos.sysmgt.mysql        exec"
                            echo "Command run: $(which mysql) -u root -p -e 'REVOKE $privChoice ON $tblName FROM $userName;'"
                            echo "Command run: $(which mysql) -u root -p -e 'FLUSH PRIVILEGES;'"
                            update_spinner
                            sleep 1
                            update_spinner
                            echo "Revoking privildges: $privChoice for user: $userName on table: $tblName"
                            sleep 1
                            update_spinner
                            sleep 1
                            echo "Enter SQL root password to revoke privleges from: $userName..."
                            $(which mysql) -u root -p -e 'REVOKE $privChoice TO $tblName FROM $userName;'
			    if [ $? -eq 0 ]; then
				 echo "##########################################################################################" >> /var/log/smx-log/success.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Successfuly granted privileges to $userName on table: $tblName" >> /var/log/smx-log/success.log
                                 echo "[$(date)] Command run: $(which mysql) -u root -p -e 'REVOKE $privChoice ON $tblName FROM $userName;'" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 echo "##########################################################################################" >> /var/log/smx-log/success.log
                                 echo "" >> /var/log/smx-log/success.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/success.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
      			    else
                                 clear
				 echo "###################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                 echo "[$(date)] Not granted privileges to $userName on table: $tblName, check command syntax" >> /var/log/smx-log/fail.log
				 echo "[$(date)] Command run: $(which mysql) -u root -p -e 'REVOKE $privChoice ON $tblName FROM $userName'" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 echo "###################################################################################################" >> /var/log/smx-log/fail.log
                                 echo "" >> /var/log/smx-log/fail.log
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 clear
                                 echo
                                 cat /var/log/smx-log/fail.log | tail -n 7
                                 echo
                                 read -p "Press [enter] to continue..." ReadDamKey
                                 exit 1
			    fi
                            echo "Enter SQL root password to flush privileges..."
                            $(which mysql) -u root -p -e 'FLUSH PRIVILEGES;'
                            read -p "Press [enter] to continue..." ReadDamKey
                      fi
                      ;;
	    backup)
		     clear
            	     echo "$(date)                                     $(whoami)@$(hostname)"
            	     echo "DATABASE NAMES MUST BE SEPERATED BY A SPACE"
            	     echo "Database name example: testdb testdb01"
            	     echo "Backup location example: /home/user/sqlbackup/"
            	     echo "Backup filename example: dbbackup.sql"
            	     echo "[TOP]                                   [Entry Fields]"
            	     read -p " Enter database name(s) ------------- > " dbName
            	     read -p " Enter backup location -------------- > " bakLoc
            	     read -p " Enter backup filename -------------- > " fileName
            	     clear
            	     echo "         COMMAND STATUS        "
            	     echo
            	     echo "$(date)                                     $(whoami)@$(hostname)"
            	     echo
            	     echo "Command: RUNNING    stdout: yes    stderr: no     "
            	     echo
            	     echo "Before command completion, additional instructions may appear below"
            	     echo
            	     echo "File                                 Fileset                 Type"
            	     echo "-----------------------------------------------------------------"
            	     echo "$(which mysqldump)                   bos.sysmgt.mysqldump    exec"
            	     echo "Command run: $(which mysqldump) -u root -p $dbName > $bakLoc$fileName"
            	     update_spinner
                     sleep 1
                     update_spinner
                     echo "Backing up database: $dbName to: $bacLoc$fileName"
                     sleep 1
                     update_spinner
                     sleep 1
            	     echo "Enter SQL root password to backup: $dbName..."
            	     $(which mysqldump) -u root -p $dbName > $bakLoc$fileName
            	     if [ $? -eq 0 ]; then
                          echo "#####################################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly backed up database: $dbName to: $bacLoc" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which mysqldump) -u root -p $dbName > $bakLoc$fileName" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "#####################################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
      		     else
			  echo "#####################################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "Not backed up database: $dbName to: $bakLoc, check command syntax" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which mysqldump) -u root -p $dbName > $bakLoc$fileName" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "#####################################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
            	     fi
            	     ;;
	    restore)
		      clear
            	      echo "$(date)                                     $(whoami)@$(hostname)"
            	      echo "Database name example: testdb"
            	      echo "Backup location example: /home/user/sqlbackup/"
            	      echo "Backup filename: testdb.sql"
            	      echo "[TOP]                                     [Entry Fields]"
            	      read -p " Enter database name ------------------ > " dbName
            	      read -p " Enter backup location ---------------- > " bakLoc
            	      read -p " Enter backup filename ---------------- > " fileName
            	      clear
            	      echo "         COMMAND STATUS          "
            	      echo
            	      echo "$(date)                                     $(whoami)@$(hostname)"
            	      echo
            	      echo "Command: RUNNING    stdout: yes    stderr: no     "
            	      echo
            	      echo "Before command completion, additional instructions may appear below"
            	      echo
            	      echo "File                                Fileset                 Type"
            	      echo "----------------------------------------------------------------"
            	      echo "$(which mysql)                      bos.sysmgt.mysql        exec"
            	      echo "Command run: $(which mysql) -u root -p $dbName < $bakLoc$fileName"
            	      update_spinner
                      sleep 1
                      update_spinner
                      echo "Restoreing mysql dump from: $bacLoc$fileName to database: $dbName"
                      sleep 1
                      update_spinner
                      sleep 1
            	      echo "Enter SQL root password to restore: $dbName..."
            	      $(which mysql) -u root -p $dbName < $bakLoc$fileName
            	      if [ $? -eq 0 ]; then
			   echo "##################################################################" >> /var/log/smx-log/success.log
                           echo "$(hostname)::$(whoami)@$(hostname)" >> /var/log/smx-log/success.log
                           echo "[$(date)] Successfuly restored database file: $fileName to database: $dbName" >> /var/log/smx-log/success.log
                           echo "[$(date)] Command run: $(which mysql) -u root -p $dbName < $bakLoc$fileName" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           echo "##################################################################" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/success.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
      		      else
			   echo "################################################################################" >> /var/log/smx-log/fail.log
                           echo "$(hostname)::$(whoami)@$(hostname)" >> /var/log/smx-log/fail.log
                           echo "[$(date)] Not restored database file: $fileName to database: $dbName, check command syntax" >> /var/log/smx-log/fail.log
                           echo "[$(date)] Command run: $(which mysql) -u root -p $dbName < $bakLoc$fileName" >> /var/log/smx-log/fail.log
                           echo "" >> /var/log/smx-log/fail.log
                           echo "################################################################################" >> /var/log/smx-log/fail.log
                           echo "" >> /var/log/smx-log/fail.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/fail.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
            	      fi
            	      ;;
	    resetPwd)
		       clear
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo "[TOP]                                      [Entry Fields]"
                       read -p " Enter SQL user to reset password ------ > " sqlUsr
                       read -p " Enter new SQL password ---------------- > " sqlPwd
                       clear
                       echo "         COMMAND STATUS           "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                 Fileset                 Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which mysql)                       bos.sysmgt.mysql        exec"
                       echo "Command run: $(which mysql) -u root -p -e 'update mysql.user set password=PASSWORD('$sqlPwd') where User='$sqlUsr';'"
                       echo "Command run: $(which mysql) -u root -p -e 'flush privileges;'"
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Changing password for user: $sqlUsr"
                       sleep 1
                       update_spinner
                       sleep 1
                       echo "Enter mysql root password to reset user: $sqlUsr password..."
                       $(which mysql) -u root -p -e 'update mysql.user set password=PASSWORD("$sqlPwd") where User="$sqlUsr";'
                       if [ $PIPESTATUS -eq 0 ]; then
                            echo "####################################################################################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly reset SQL user: $sqlUsr password to: $sqlPwd" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which mysql) -u root -p -e 'update mysql.user set password=PASSWORD('$sqlPwd') where User='$sqlUsr';'" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "####################################################################################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
		       else
                            echo "####################################################################################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not reset SQL user: $sqlUsr password to: $sqlPwd, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which mysql) -u root -p -e 'update mysql.user set password=PASSWORD('$sqlPwd') where User='$sqlUsr';'" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "####################################################################################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/fail.log | tail -n 7
                            echo
			    read -p "Press [enter] to continue..." ReadDamKey
                            exit 1
                       fi
                       echo "Enter mysql root password to flush privilege tables..."
                       $(which mysql) -u root -p -e "flush privileges;"
                       read -p "Press [enter] to continue..." ReadDamKey
                       ;;
	    resetRoot)
		        clear
			$(which uname) | grep Linux >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "OS = Linux"
			     cat /proc/version | grep "Red Hat" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
				  echo "OS = Red Hat"
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo "[TOP]                                  [Entry Fields]"
				  read -p " Enter new SQL root password ------- > " rootPwd
				  clear
				  echo "         COMMAND STATUS          "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "$(which mysqld_safe)                 bos.sysmgt.mysqld_safe  exec"
				  echo "$(which mysql)                       bos.sysmgt.mysql        exec"
				  echo "Command run: $(which service) mysqld stop"
				  echo "Command run: $(which mysqld_safe) --skip-grant-tables &"
				  echo "Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'"
				  echo "Command run: $(which mysql) -u root -c 'flush priviliges;'"
				  echo "Command run: $(which service) mysqld restart"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping mysql server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) mysqld stop
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Starting mysql server in save-mode"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which mysqld_safe) --skip-grant-tables &
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Changing root password"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which mysql) -u root -c 'update mysql.user set password=PASSWORD("$rootPwd") where User="root";'
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Flushing priviledge table"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which mysql) -u root -c "flush privileges;"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Restarting SQL mysql server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) mysqld restart
				  echo "###############################################################################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly reset SQL root password to: $rootPwd" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "###############################################################################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             else
				  clear
				  cat /proc/version | grep "Debian" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Debian"
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo "[TOP]                                  [Entry Fields]"
                                       read -p " Enter new SQL root password ------- > " rootPwd
                                       clear
                                       echo "         COMMAND STATUS          "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "$(which mysqld_safe)                 bos.sysmgt.mysqld_safe  exec"
                                       echo "$(which mysql)                       bos.sysmgt.mysql        exec"
                                       echo "Command run: /etc/init.d/mysql stop"
                                       echo "Command run: $(which mysqld_safe) --skip-grant-tables &"
                                       echo "Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'"
                                       echo "Command run: $(which mysql) -u root -c 'flush priviliges;'"
                                       echo "Command run: $(which service) mysql restart"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping mysql server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) mysql stop
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Starting mysql in save-mode"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which mysqld_safe) --skip-grant-tables &
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Changing SQL root password"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which mysql) -u root -c 'update mysql.user set password=PASSWORD("$rootPwd") where User="root";'
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Flushing priviledge table"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which mysql) -u root -c "flush privileges;"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Restarting mysql server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) mysqld restart
                                       echo "###############################################################################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly reset SQL root password to: $rootPwd" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "###############################################################################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       clear
                                       cat /proc/version | grep "Ubuntu" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = Ubuntu"
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo "[TOP]                                  [Entry Fields]"
					    read -p " Enter new SQL root password ------- > " rootPwd
					    clear
					    echo "         COMMAND STATUS          "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "$(which mysqld_safe)                 bos.sysmgt.mysqld_safe  exec"
					    echo "$(which mysql)                       bos.sysmgt.mysql        exec"
					    echo "Command run: /etc/init.d/mysql stop"
					    echo "Command run: $(which mysqld_safe) --skip-grant-tables &"
					    echo "Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'"
					    echo "Command run: $(which mysql) -u root -c 'flush priviliges;'"
					    echo "Command run: $(which service) mysql restart"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping mysql server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) mysql stop
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Starting mysql server in save-mode"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which mysqld_safe) --skip-grant-tables &
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Changing SQL root password"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which mysql) -u root -c 'update mysql.user set password=PASSWORD("$rootPwd") where User="root";'
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Flushing priviledge table"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which mysql) -u root -c "flush privileges;"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Restarting mysql server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) mysqld restart
					    echo "###############################################################################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly reset SQL root password to: $rootPwd" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "###############################################################################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       else
					    clear
					    cat /proc/version | grep "SUSE" >> /dev/null
				            if [ $? -eq 0 ]; then
						 clear
						 echo "OS = SuSE"
						 echo "$(date)                                     $(whoami)@$(hostname)"
						 echo "[TOP]                                  [Entry Fields]"
						 read -p " Enter new SQL root password ------- > " rootPwd
						 clear
						 echo "         COMMAND STATUS          "
						 echo
						 echo "$(date)                                     $(whoami)@$(hostname)"
						 echo
						 echo "Command: RUNNING    stdout: yes    stderr: no     "
						 echo
						 echo "Before command completion, additional instructions may appear below"
						 echo
						 echo "File                                 Fileset                 Type"
						 echo "-----------------------------------------------------------------"
						 echo "$(which service)                     bos.sysmgt.service      exec"
						 echo "$(which mysqld_safe)                 bos.sysmgt.mysqld_safe  exec"
						 echo "$(which mysql)                       bos.sysmgt.mysql        exec"
						 echo "Command run: $(which service) mysql stop"
						 echo "Command run: $(which mysqld_safe) --skip-grant-tables &"
						 echo "Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'"
						 echo "Command run: $(which mysql) -u root -c 'flush priviliges;'"
						 update_spinner
						 sleep 1
						 update_spinner
						 echo "Stopping mysql server"
						 sleep 1
						 update_spinner
						 sleep 1
						 $(which service) mysql stop
						 update_spinner
						 sleep 1
						 update_spinner
						 echo "Starting mysql server in save-mode"
						 sleep 1
						 update_spinner
						 sleep 1
						 $(which mysqld_safe) --skip-grant-tables &
						 update_spinner
						 sleep 1
						 update_spinner
						 echo "Changing mysql root password"
						 sleep 1
						 update_spinner
						 sleep 1
						 $(which mysql) -u root -c 'update mysql.user set password=PASSWORD("$rootPwd") where User="root";'
						 update_spinner
						 sleep 1
						 update_spinner
						 echo "Flushing priviledge table"
						 sleep 1
						 update_spinner
						 sleep 1
						 $(which mysql) -u root -c "flush privileges;"
						 update_spinner
						 sleep 1
						 update_spinner
						 echo "Restarting mysql server"
						 sleep 1
						 update_spinner
						 sleep 1
						 $(which service) mysql restart
						 echo "###############################################################################################################" >> /var/log/smx-log/success.log
						 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						 echo "[$(date)] Successfuly reset SQL root password to: $rootPwd" >> /var/log/smx-log/success.log
						 echo "[$(date)] Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 echo "###############################################################################################################" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 read -p "Press [enter] to continue..." ReadDamKey
						 clear
						 echo
						 cat /var/log/smx-log/success.log | tail -n 7
						 echo
						 read -p "Press [enter] to continue..." ReadDamKey
				            fi
                                       fi
				  fi
                             fi
			else
			     $(which uname) | grep BSD >> /dev/null
			     if [ $? -eq 0 ]; then
				  clear
				  echo "OS = BSD"
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo "[TOP]                                  [Entry Fields]"
				  read -p " Enter new SQL root password ------- > " rootPwd
				  clear
				  echo "         COMMAND STATUS          "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "/usr/local/etc/rc.d/mysql-server     bos.sysmgt.mysql-server exec"
				  echo "$(which mysqld_safe)                 bos.sysmgt.mysqld_safe  exec"
				  echo "$(which mysql)                       bos.sysmgt.mysql        exec"
				  echo "Command run: /usr/local/etc/rc.d/mysql-server stop"
				  echo "Command run: $(which mysqld_safe) --skip-grant-tables &"
				  echo "Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'"
				  echo "Command run: $(which mysql) -u root -c 'flush priviliges;'"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping mysql server"
				  sleep 1
				  update_spinner
				  sleep 1
				  /usr/local/etc/rc.d/mysql stop
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Starting mysql server in save-mode"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which mysqld_safe) --skip-grant-tables &
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Changing mysql root password"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which mysql) -u root -c 'update mysql.user set password=PASSWORD("$rootPwd") where User="root";'
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Flushing priviledge table"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which mysql) -u root -c "flush privileges;"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Restarting mysql server"
				  sleep 1
				  update_spinner
				  sleep 1
				  /usr/local/etc/rc.d/mysql-server restart
				  echo "###############################################################################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly reset SQL root password to: $rootPwd" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which mysql) -u root -c 'update mysql.user set password=PASSWORD('$rootPwd') where User='root';'" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "###############################################################################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else
				  echo "Feature not availiable for OS X"
				  read -p "Press [enter] to conitnue..." ReadDamKey
				  sql_menu
			     fi
			fi
                        ;;
	    session)
		      clear
                      echo "$(date)                                     $(whoami)@$(hostname)"
                      echo "[TOP]                                   [Entry Fields]"
                      read -p " Enter SQL user --------------------- > " sqlUsr
                      clear
                      echo "         COMMAND STATUS              "
                      echo
                      echo "$(date)                                     $(whoami)@$(hostname)"
                      echo
                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                      echo
                      echo "Before command completion, additional instructions may appear below"
                      echo
                      echo "File                                 Fileset                 Type"
                      echo "-----------------------------------------------------------------"
                      echo "$(which mysql)                       bos.sysmgt.mysql        exec"
                      echo "[$(date)] Command run: $(which mysql) -u $sqlUsr -p"
                      update_spinner
                      sleep 1
                      update_spinner
                      echo "Starting mysql session"
                      sleep 1
                      update_spinner
                      sleep 1
                      $(which mysql) -u $sqlUsr -p
                      if [ $? -eq 0 ]; then
                           echo "#################################################" >> /var/log/smx-log/success.log
                           echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                           echo "[$(date)] Successfuly opened mysql session as user: $sqlUsr" >> /var/log/smx-log/success.log
                           echo "[$(date)] Command run: $(which mysql) -u $sqlUsr -p" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           echo "#################################################" >> /var/log/smx-log/success.log
                           echo "" >> /var/log/smx-log/success.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/success.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
		      else
                           echo "######################################################################################" >> /var/log/smx-log/fail.log
                           echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                           echo "[$(date)] Not opened mysql session as user: $sqlUsr, check command syntax, password and username" >> /var/log/smx-log/fail.log
                           echo "[$(date)] Command run: $(which mysql) -u $sqlUsr -p" >> /var/log/smx-log/fail.log
                           echo "" >> /var/log/smx-log/success.log
                           echo "######################################################################################" >> /var/log/smx-log/fail.log
                           echo "" >> /var/log/smx-log/success.log
                           read -p "Press [enter] to continue..." ReadDamKey
                           clear
                           echo
                           cat /var/log/smx-log/fail.log | tail -n 7
                           echo
                           read -p "Press [enter] to continue..." ReadDamKey
                      fi
                      ;;
            help)
                   echo "install > Install SQL server on system"
                   echo "start > Start SQL daemon"
                   echo "stop > Stop SQL daemon"
                   echo "restart > Restart SQL daemon"
                   echo "addusr > Add user to SQL server"
                   echo "chpwd > Change a SQL users password"
                   echo "setpriv > Set privlages for user on SQL server"
                   echo "backup > Backup a SQL database to a .sql file"
                   echo "restore > Restore a SQL database from a .sql file"
                   echo "resetPwd > Reset SQL password"
                   echo "resetRoot > Reset root SQL password"
                   echo "session > Start SQL session"
                   echo "help > This menu"
                   echo "exit > Return to srv_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;       
	    exit)
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
            	   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/sql_menu" >> /var/log/smx-log/exit.log
            	   echo "" >> /var/log/smx-log/exit.log
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
            	   srv_menu
            	   ;;
	    exit-mas)
                       clear
                       echo "#################################" >> /var/log/smx-log/exit.log
            	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
            	       echo "[$(date)] Successfuly terminated smx.sh" >> /var/log/smx-log/exit.log
            	       echo "" >> /var/log/smx-log/exit.log
                       echo "#################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
            	       exit 0
            	       ;;
	    *)         clear
            	       echo "        COMMAND STATUS        "
            	       echo
            	       echo "$(date)                                     $(whoami)@$(hostname)"
            	       echo
            	       echo "Command: FAIL    stdout: yes    stderr: no        "
            	       echo
            	       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 3452 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done
}

function smb_menu() {
    while :
    do
	clear
      	echo "$(date)                                     $(whoami)@$(hostname)"
      	echo
      	read -p "$(whoami)@$(hostname):smx/smb_menu # " choice_smb
      	echo
      	
      	case "$choice_smb" in
      	    install)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "[TOP]                                                     [Entry Fields]"
				read -p " Open access or authenticated share ------- (open/auth) > " ans
				if [ "$ans" = "open" ]; then
                                      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Shared folder example: /home/samba/share"
                                      echo "Share name example: smb-share"
                                      echo "Allowed address range example: 192.168.1.200 192.168.1.121"
                                      echo "[TOP]                                          [Entry Fields]"
                                      read -p " Enter shared folder ----------------------- > " folderShare
                                      read -p " Enter share name -------------------------- > " smbShare
                                      read -p " Enter allowed address range (with spaces) - > " addrRange
                                      clear
                                      echo "         COMMAND STATUS          "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                      echo "Command run: $(which yum) -y install samba samba-client | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which mkdir) -p $folderShare"
                                      echo "Command run: $(which chmod) 777 $folderShare"
                                      echo "Command run: $(which service) smb start"
                                      echo "Command run: $(which service) nmb start"
                                      echo "Command run: $(which chkconfig) smb on"
                                      echo "Command run: $(which chkconfig) nmb on"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing packages: samba and samba-client"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install samba samba-client | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
					   echo "###############################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which yum) -y install samba samba-client | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "###############################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                        	      else
                        		   echo "###############################################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which yum) -y install samba samba-client | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "###############################################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/fail.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
					   exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating share point: $folderShare"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which mkdir) -p $folderShare
                                      $(which chmod) 777 $folderShare
                                      echo "unix charset = UTF-8" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting MS workgroup to: WORKGROUP"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/MSHOME/WORKGROUP/g' /etc/samba/smb.conf
                                      $(which sed) -i 's/hosts allow/;hosts allow' /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting hosts to: 127.0.0.1 and: $addrRange"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "hosts allow = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
                                      $(which sed) -i 's/security = user/security = share/g' /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining new share: $smbShare at: $folderShare"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "" >> /etc/samba/smb.conf
                                      echo "[$smbShare]" >> /etc/samba/smb.conf
                                      echo "path = $folderShare" >> /etc/samba/smb.conf
                                      echo "writable = yes" >> /etc/samba/smb.conf
                                      echo "guest ok = yes" >> /etc/samba/smb.conf
                                      echo "guest only = yes" >> /etc/samba/smb.conf
                                      echo "create mode = 0777" >> /etc/samba/smb.conf
                                      echo "directory mode = 0777" >> /etc/samba/smb.conf
                                      echo "share modes = yes" >> /etc/samba/smb.conf
                                      echo "" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Starting samba server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) smb start
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Starting netbios name server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) nmb start
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting samba to start at startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) smb start
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting netbios name server to start at startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) nmb start
                                      read -p "Press [enter] to continue..." ReadDamKey
				else
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Folder share name example: /home/share/samba"
                                      echo "Samba share name example: test-share"
                                      echo "Allowed address range example: 192.168.1.23 192.168.1.12"
                                      echo "Allowed users example: user1 user2"
                                      echo "[TOP]                                           [Entry Fields]"
                                      read -p " Enter folder share name -------------------- > " folderName
                                      read -p " Enter samba share name --------------------- > " smbName
                                      read -p " Enter allowed address range (with spaces) -- > " addrRange
                                      read -p " Enter allowed users ------------------------ > " smbUsers
                                      clear
                                      echo "         COMMAND STATUS          "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which groupadd)                    bos.grpmgt.groupadd     exec"
                                      echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                      echo "$(which chgrp)                       bos.grpmgt.chgrp        exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                      echo "$(which smbpasswd)                   bos.sysmgt.smbpasswd    exec"
                                      echo "$(which usermod)                     bos.usrmgt.usermod      exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                      echo "Command run: $(which yum) -y install samba samba-client | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which groupadd) samba"
                                      echo "Command run: $(which mkdir) -p $folderName"
                                      echo "Command run: $(which chgrp) samba $folderName"
                                      echo "Command run: $(which chmod) 770 $folderName"
                                      echo "[Command run: $(which smbpasswd) -a $smbUsers"
                                      echo "Command run: $(which usermod) -G samba $smbUsers"
                                      echo "Command run: $(which service) smb start"
                                      echo "Command run: $(which service) nmb start"
                                      echo "Command run: $(which chkconfig) smb on"
                                      echo "Command run: $(which chkconfig) nmb on"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing packages: samba samba-client"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install samba samba-client| $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
				           echo "###############################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which yum) -y install samba samba-client | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "###############################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
				           echo "###############################################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which yum) -y install samba samba-client| $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "##############################################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/fail.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
					   exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Adding group: samba"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which groupadd) samba
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating samba share point: $folderName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which mkdir) -p $folderName
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Changing group ownership of folder: $folderName to samba"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chgrp) samba $folderName
                                      $(which chmod) 770 $folderName
                                      echo "unix charset = UTF-8" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting MS workgroup to: WORKGROUP"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which sed) -i 's/MSHOME/WORKGROUP/g' /etc/samba/smb.conf
                                      $(which sed) -i 's/hosts allow/;hosts allow' /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting hosts allow to: 127.0.0.1 and: $addrRange"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "host allow = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining new samba share as: $smbName at: $folderName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "" >> /etc/samba/smb.conf
                                      echo "[$smbName]" >> /etc/samba/smb.conf
                                      echo "path = $folderName" >> /etc/samba/smb.conf
                                      echo "writable = yes" >> /etc/samba/smb.conf
                                      echo "create mode = 0770" >> /etc/samba/smb.conf
                                      echo "directory mode = 0770" >> /etc/samba/smb.conf
                                      echo "share modes = yes" >> /etc/samba/smb.conf
                                      echo "guest ok = no" >> /etc/samba/smb.conf
                                      echo "valid users = @samba" >> /etc/samba/smb.conf
                                      echo "" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Adding user: $smbUsers to samba"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which smbpasswd) -a $smbUsers
                                      $(which usermod) -G samba $smbUsers
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Starting samba server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) smb start
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Starting netbios name server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which service) nmb start
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting samba to start at startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) smb on
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting netbios name server to start at startup"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which chkconfig) nmb on
                                      read -p "Press [enter] to continue..." ReadDamKey
			        fi
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "Folder share name example: /samba/share"
                                     echo "Share name example: test-share"
                                     echo "Allowed addresses example: 192.168.2.4 192.168.1.34"
                                     echo "[TOP]                                    [Entry Fields]"
                                     read -p " Open access or authenticated share -- (open/auth) > " ans
                                     if [ "$ans" = "open" ]; then
					   clear
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo "Folder share name example: /samba/share"
					   echo "Share name example: smb-test"
					   echo "Allowed addresses example: 192.168.1.121 192.168.1.23"
					   echo "[TOP]                                             [Entry Fields]"
					   read -p " Enter folder share name ---------------------- > " folderName
					   read -p " Enter share name ----------------------------- > " smbName
					   read -p " Enter allowed addresses (with spaces) -------- > " addrRange
					   sleep 2
					   clear
					   echo "      COMMAND STATUS         "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stderr: no     "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                 Type"
					   echo "-----------------------------------------------------------------"
					   echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
					   echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
					   echo "$(which chmod)                       bos.sysmgt.chmod        exec"
					   echo "$(which sed)                         bos.sysmgt.sed          exec"
					   echo "$(which service)                     bos.sysmgt.service      exec"
					   echo "Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log"
					   echo "Command run: $(which mkdir) -p $folderName"
					   echo "Command run: $(which chmod) 777 $folderName"
					   echo "Command run: $(which service) samba start"
					   update_spinner 
					   sleep 1
					   update_spinner
					   echo "Installing package: samba"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log
					   if [ $PIPESTATUS -eq 0 ]; then
                                                echo "##############################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "##############################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
                        	           else
                                                echo "##############################################################################################" >> /var/log/smx-log/fail.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						echo "Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
						echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						echo "##############################################################################################" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/fail.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
						exit 1
					   fi
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Creating samba share point: $folderName"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which mkdir) -p $folderName
					   $(which chmod) 777 $folderName
					   echo "unix charset = UTF-8" >> /etc/samba/smb.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Setting MS workgroup to: WORKGROUP"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which sed) -i 's/MSHOME/WORKGROUP/g' /etc/samba/smb.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Setting allowed addresses to 127.0.0.1 and: $addrRange"
					   sleep 1
					   update_spinner
					   sleep 1
					   echo "interfaces = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
					   echo "bind interfaces only = yes" >> /etc/samba/smb.conf
					   $(which sed) -i 's/security = user/security = share/g' /etc/samba/smb.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Defining new samba share as: $smbName at: $folderName"
					   sleep 1
					   update_spinner
					   sleep 1
					   echo "" >> /etc/samba/smb.conf
					   echo "[$smbName]" >> /etc/samba/smb.conf
					   echo "path = $folderName" >> /etc/samba/smb.conf
					   echo "writable = yes" >> /etc/samba/smb.conf
					   echo "guest ok = yes" >> /etc/samba/smb.conf
					   echo "guest only = yes" >> /etc/samba/smb.conf
					   echo "create mode = 0777" >> /etc/samba/smb.conf
					   echo "directory mode = 0777" >> /etc/samba/smb.conf
					   echo "share modes = yes" >> /etc/samba/smb.conf
					   echo "" >> /etc/samba/smb.conf
					   $(which serivce) samba start
					   read -p "Press [enter] to continue..." ReadDamKey
                        	     else
                        		   clear
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo "Folder share name example: /samba/share"
					   echo "Share name example: samba-test"
					   echo "Allowed addresses example: 192.168.3.2 192.168.1.34"
					   echo "Allowed users example: user01 user02"
					   echo "[TOP]                                               [Entry Fields]"
					   read -p " Enter folder share name ------------------------ > " folderName
					   read -p " Enter share name ------------------------------- > " smbName
					   read -p " Enter allowed addresses (with spaces) ---------- > " addrRange
					   read -p " Enter allowed users ---------------------------- > " smbUsers
					   sleep 2
					   clear
					   echo "      COMMAND STATUS         "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stderr: no     "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                 Type"
					   echo "-----------------------------------------------------------------"
					   echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
					   echo "$(which groupadd)                    bos.grpmgt.groupadd     exec"
					   echo "$(which chgrp)                       bos.grpmgt.chgrp        exec"
					   echo "$(which usermod)                     bos.usrmgt.usermod      exec"
					   echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
					   echo "$(which chmod)                       bos.sysmgt.chmod        exec"
					   echo "$(which sed)                         bos.sysmgt.sed          exec"
					   echo "$(which service)                     bos.sysmgt.service      exec"
					   echo "Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log"
					   echo "Command run: $(which groupadd) samba"
					   echo "Command run: $(which chgrp) samba $folderName"
					   echo "Command run: $(which usermod) -G samba $smbUsers"
					   echo "Command run: $(which mkdir) -p $folderName"
					   echo "Command run: $(which chmod) 770 $folderName"
					   echo "Command run: $(which service) samba start"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Installing package: samba"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log
					   if [ $PIPESTATUS -eq 0 ]; then
                                                echo "##############################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "##############################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
                        	           else
                                                echo "##############################################################################################" >> /var/log/smx-log/fail.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						echo "[$(date)] Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
						echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						echo "##############################################################################################" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/fail.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
						exit 1
					   fi
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Adding new group: samba"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which groupadd) samba
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Creating new samba share point: $folderName"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which mkdir) -p $folderName
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Changing group ownership of samba share: $folderName to: samba"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which chgrp) samba $folderName
					   $(which chmod) 770 $folderName
					   echo "unix charset = UTF-8" >> /etc/samba/smb.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Setting MS workgroup to: WORKGROUP"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which sed) -i 's/MSHOME/WORKGROUP/g' /etc/samba/smb.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
					   sleep 1
					   update_spinner
					   sleep 1
					   echo "interfaces = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
					   echo "bind interfaces only = yes" >> /etc/samba/smb.conf
					   echo "" >> /etc/samba/smb.conf
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Defining new samba share as: $smbName at: $folderName"
					   sleep 1
					   update_spinner
					   sleep 1
					   echo "[$smbName]" >> /etc/samba/smb.conf
					   echo "path = $folderName" >> /etc/samba/smb.conf
					   echo "writable = yes" >> /etc/samba/smb.conf
					   echo "guest ok = no" >> /etc/samba/smb.conf
					   echo "create mode = 0770" >> /etc/samba/smb.conf
					   echo "directory mode = 0770" >> /etc/samba/smb.conf
					   echo "share modes = yes" >> /etc/samba/smb.conf
					   echo "valid users = @samba" >> /etc/samba/smb.conf
					   echo "" >> /etc/samba/smb.conf
					   $(which smbpasswd) -a $smbUsers
					   $(which usermod) -G samba $smbUsers
					   $(which service) samba start
					   read -p "Press [enter] to continue..." ReadDamKey
				     fi
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo "Folder share name example: /samba/share"
					  echo "Share name example: test-share"
					  echo "Allowed addresses example: 192.168.2.4 192.168.1.34"
					  echo "[TOP]                                    [Entry Fields]"
					  read -p " Open access or authenticated share -- (open/auth) > " ans
					  if [ "$ans" = "open" ]; then
                                                clear
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "Folder share name example: /samba/share"
						echo "Share name example: smb-test"
						echo "Allowed addresses example: 192.168.1.121 192.168.1.23"
						echo "[TOP]                                              [Entry Fields]"
						read -p " Enter folder share name ----------------------- > " folderName
						read -p " Enter share name ------------------------------ > " smbName
						read -p " Enter allowed addresses (with spaces) --------- > " addrRange
						sleep 2
						clear
						echo "      COMMAND STATUS         "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
						echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
						echo "$(which chmod)                       bos.sysmgt.chmod        exec"
						echo "$(which sed)                         bos.sysmgt.sed          exec"
						echo "$(which service)                     bos.sysmgt.service      exec"
						echo "Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log"
						echo "Command run: $(which mkdir) -p $folderName"
						echo "Command run: $(which chmod) 777 $folderName"
						echo "Command run: $(which service) samba start"
						update_spinner
						sleep 1
						update_spinner
						echo "Installing package: samba"
						sleep 1
						update_spinner
						sleep 1
						$(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log
						if [ $PIPESTATUS -eq 0 ]; then
                                                     echo "##############################################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "##############################################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                        		        else
					             echo "##############################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "##############################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     exit 1
                    			        fi
						update_spinner
						sleep 1
						update_spinner
						echo "Creating samba share point: $folderName"
						sleep 1
						update_spinner
						sleep 1
						$(which mkdir) -p $folderName
						$(which chmod) 777 $folderName
						echo "unix charset = UTF-8" >> /etc/samba/smb.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Setting MS workgroup as: WORKGROUP"
						sleep 1
						update_spinner
						sleep 1
                    			        $(which sed) -i 's/MSHOME/WORKGROUP/g' /etc/samba/smb.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
						sleep 1
						update_spinner
						sleep 1
						echo "interfaces = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
						echo "bind interfaces only = yes" >> /etc/samba/smb.conf
						$(which sed) -i 's/security = user/security = share/g' /etc/samba/smb.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Defining new samba share as: $smbName at: $folderName"
						sleep 1
						update_spinner
						sleep 1
						echo "" >> /etc/samba/smb.conf
						echo "[$smbName]" >> /etc/samba/smb.conf
						echo "path = $folderName" >> /etc/samba/smb.conf
						echo "writable = yes" >> /etc/samba/smb.conf
						echo "guest ok = yes" >> /etc/samba/smb.conf
						echo "guest only = yes" >> /etc/samba/smb.conf
						echo "create mode = 0777" >> /etc/samba/smb.conf
						echo "directory mode = 0777" >> /etc/samba/smb.conf
						echo "share modes = yes" >> /etc/samba/smb.conf
						echo "" >> /etc/samba/smb.conf
					        $(which service) samba start
						read -p "Press [enter] to continue..." ReadDamKey
				          else
                                                clear
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "Folder share name example: /samba/share"
						echo "Share name example: samba-test"
						echo "Allowed addresses example: 192.168.3.2 192.168.1.34"
						echo "Allowed users example: user01 user02"
						echo "[TOP]                                     [Entry Fields]"
						read -p " Enter folder share name -------------- > " folderName
						read -p " Enter share name --------------------- > " smbName
						read -p " Enter allowed addresses -------------- > " addrRange
						read -p " Enter allowed users ------------------ > " smbUsers
						sleep 2
						clear
						echo "      COMMAND STATUS         "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
						echo "$(which groupadd)                    bos.grpmgt.groupadd     exec"
						echo "$(which chgrp)                       bos.grpmgt.chgrp        exec"
						echo "$(which usermod)                     bos.usrmgt.usermod      exec"
						echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
						echo "$(which chmod)                       bos.sysmgt.chmod        exec"
						echo "$(which sed)                         bos.sysmgt.sed          exec"
						echo "$(which service)                     bos.sysmgt.service      exec"
						echo "Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log"
						echo "Command run: $(which groupadd) samba"
						echo "Command run: $(which chgrp) samba $folderName"
						echo "Command run: $(which usermod) -G samba $smbUsers"
						echo "Command run: $(which mkdir) -p $folderName"
						echo "Command run: $(which chmod) 770 $folderName"
						echo "Command run: $(which service) samba start"
						update_spinner
						sleep 1
						update_spinner
						echo "Installing package: samba"
						sleep 1
						update_spinner
						sleep 1
						$(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log
						if [ $PIPESTATUS -eq 0 ]; then
                                                     echo "##############################################################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "##############################################################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                        		        else
					             echo "##############################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                     echo "Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Command run: $(which apt-get) -y install samba | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "##############################################################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     exit 1
                    			        fi
						update_spinner
						sleep 1
						update_spinner
						echo "Adding new group: samba"
						sleep 1
						update_spinner
						sleep 1
                    			        $(which groupadd) samba
					        update_spinner
						sleep 1
						update_spinner
						echo "Creating new samba share point at: $folderName"
						sleep 1
						update_spinner
						sleep 1
                    			        $(which mkdir) -p $folderName
						update_spinner
						sleep 1
						update_spinner
						echo "Changing group ownership of folder: $folderName to samba"
						sleep 1
						update_spinner
						sleep 1
						$(which chgrp) samba $folderName
						$(which chmod) 770 $folderName
						echo "unix charset = UTF-8" >> /etc/samba/smb.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Setting MS workgroup to: WORKGROUP"
						sleep 1
						update_spinner
						sleep 1
                    			        $(which sed) -i 's/MSHOME/WORKGROUP/g' /etc/samba/smb.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
						sleep 1
						update_spinner
						sleep 1
						echo "interfaces = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
						echo "bind interfaces only = yes" >> /etc/samba/smb.conf
						update_spinner
						sleep 1
						update_spinner
						echo "Defining new samba share as: $smbName at: $folderName"
						sleep 1
						update_spinner
						sleep 1
						echo "" >> /etc/samba/smb.conf
						echo "[$smbName]" >> /etc/samba/smb.conf
						echo "path = $folderName" >> /etc/samba/smb.conf
						echo "writable = yes" >> /etc/samba/smb.conf
						echo "guest ok = no" >> /etc/samba/smb.conf
						echo "create mode = 0770" >> /etc/samba/smb.conf
						echo "directory mode = 0770" >> /etc/samba/smb.conf
						echo "share modes = yes" >> /etc/samba/smb.conf
						echo "valid users = @samba" >> /etc/samba/smb.conf
						echo "" >> /etc/samba/smb.conf
						$(which smbpasswd) -a $smbUsers
						$(which usermod) -G samba $smbUsers
						$(which service) samba start
						read -p "Press [enter] to continue..." ReadDamKey
				          fi
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "[TOP]                                    [Entry Fields]"
                                               read -p " Open access or authenticated share --- (open/auth) > " ans
                                               if [ "$ans" = "open" ]; then
                                                     clear
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo "Folder name example: /samba/share"
                                                     echo "Share name example: samba-test"
                                                     echo "Allowed addresses example: 192.168.1.34 192.168.1.32"
                                                     echo "[TOP]                                     [Entry Fields]"
                                                     read -p " Enter folder name -------------------- > " folderName
                                                     read -p " Enter share name --------------------- > " smbName
                                                     read -p " Enter allowed addresses -------------- > " addrRange
                                                     clear
                                                     echo "         COMMAND STATUS           "
                                                     echo
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo
                                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                     echo
                                                     echo "Before command completion, additional instructions may appear below"
                                                     echo
                                                     echo "File                                 Fileset                 Type"
                                                     echo "-----------------------------------------------------------------"
                                                     echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                     echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                                     echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                                     echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                                     echo "Command run: $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log"
                                                     echo "Command run: $(which mkdir) -p $folderName"
                                                     echo "Command run: $(which chmod) 777 $folderName"
                                                     echo "Command run: $(which service) smb start"
                                                     echo "Command run: $(which chkconfig) smb on"
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Installing package: samba"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log
                                                     if [ $PIPESTATUS -eq 0 ]; then
							  echo "#######################################################################################" >> /var/log/smx-log/success.log
							  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
							  echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
							  echo "[$(date)] Command run: $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
							  echo "" >> /var/log/smx-log/success.log
							  echo "#######################################################################################" >> /var/log/smx-log/success.log
							  echo "" >> /var/log/smx-log/success.log
							  read -p "Press [enter] to continue..." ReadDamKey
							  clear
							  echo
							  cat /var/log/smx-log/success.log | tail -n 7
							  echo
							  read -p "Press [enter] to continue..." ReadDamKey
                                                     else
							  echo "#######################################################################################" >> /var/log/smx-log/fail.log
							  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
							  echo "Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
							  echo "[$(date)] Command run: $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
							  echo "" >> /var/log/smx-log/fail.log
							  echo "#######################################################################################" >> /var/log/smx-log/fail.log
							  echo "" >> /var/log/smx-log/fail.log
							  read -p "Press [enter] to continue..." ReadDamKey
							  clear
							  echo
							  cat /var/log/smx-log/fail.log | tail -n 7
							  echo
							  read -p "Press [enter] to continue..." ReadDamKey
							  exit 1
                        			     fi
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Creating new samba share point at: $folderName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which mkdir) -p $folderName
                                                     $(which chmod) 777 $folderName
                                                     echo "unix charset = UTF-8" >> /etc/samba/smb.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "host allow = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
                                                     echo "security = share" >> /etc/samba/smb.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Defining new samba share as: $smbName at: $folderName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "" >> /etc/samba/smb.conf
                                                     echo "[$smbName]" >> /etc/samba/smb.conf
                                                     echo "path = $folderName" >> /etc/samba/smb.conf
                                                     echo "writable = yes" >> /etc/samba/smb.conf
                                                     echo "guest ok = yes" >> /etc/samba/smb.conf
                                                     echo "guest only = yes" >> /etc/samba/smb.conf
                                                     echo "create mode = 0777" >> /etc/samba/smb.conf
                                                     echo "directory mode = 0777" >> /etc/samba/smb.conf
                                                     echo "share modes = yes" >> /etc/samba/smb.conf
                                                     echo "" >> /etc/samba/smb.conf
                                                     $(which service) smb start
                                                     $(which chkconfig) smb on
                                                     echo "To Successfuly use samba, DISABLE apparmor..."
                                                     read -p "Press [enter] to continue..." ReadDamKey
                    			       else
                    				     clear
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo "Folder name example: /samba/share"
                                                     echo "Share name example: samba-test"
                                                     echo "Allowed addresses example: 192.168.1.34 192.168.1.32"
                                                     echo "Allowed users example: user01 user02"
                                                     echo "[TOP]                                     [Entry Fields]"
                                                     read -p " Enter folder name -------------------- > " folderName
                                                     read -p " Enter share name --------------------- > " smbName
                                                     read -p " Enter allowed addresses -------------- > " addrRange
                                                     read -p " Enter allowed users ------------------ > " smbUsers
                                                     clear
                                                     echo "         COMMAND STATUS           "
                                                     echo
                                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                                     echo
                                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                                     echo
                                                     echo "Before command completion, additional instructions may appear below"
                                                     echo
                                                     echo "File                                 Fileset                 Type"
                                                     echo "-----------------------------------------------------------------"
                                                     echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                                     echo "$(which groupadd)                    bos.grpmgt.groupadd     exec"
                                                     echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                                     echo "$(which chgrp)                       bos.grpmgt.chgrp        exec"
                                                     echo "$(which chmod)                       bos.sysmgt.chmod        exec"
                                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                                     echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                                     echo "$(which smbpasswd)                   bos.sysmgt.smbpasswd    exec"
                                                     echo "$(which usermod)                     bos.sysmgt.usermod      exec"
                                                     echo "Command run: $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log"
                                                     echo "Command run: $(which groupadd) samba"
                                                     echo "Command run: $(which mkdir) -p $folderName"
                                                     echo "Command run: $(which chgrp) samba $folderName"
                                                     echo "Command run: $(which chmod) 2770 $folderName"
                                                     echo "Command run: $(which service) smb start"
                                                     echo "Command run: $(which chkconfig) smb on"
                                                     echo "Command run: $(which smbpasswd) -a $smbUsers"
                                                     echo "Command run: $(which usermod) -G samba $smbUsers"
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Installing package: samba"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log
                                                     if [ $PIPESTATUS -eq 0 ]; then
							  echo "#######################################################################################" >> /var/log/smx-log/success.log
							  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
							  echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
							  echo "[$(date)] Command run: $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
							  echo "" >> /var/log/smx-log/success.log
							  echo "#######################################################################################" >> /var/log/smx-log/success.log
							  echo "" >> /var/log/smx-log/success.log
							  read -p "Press [enter] to continue..." ReadDamKey
							  clear
							  echo
							  cat /var/log/smx-log/success.log | tail -n 7
							  echo
							  read -p "Press [enter] to continue..." ReadDamKey
                                                     else
							  echo "#######################################################################################" >> /var/log/smx-log/fail.log
							  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
							  echo "Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
							  echo "[$(date)] Command run: $(which zypper) in -y samba | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
							  echo "" >> /var/log/smx-log/fail.log
							  echo "#######################################################################################" >> /var/log/smx-log/fail.log
							  echo "" >> /var/log/smx-log/fail.log
							  read -p "Press [enter] to continue..." ReadDamKey
							  clear
							  echo
							  cat /var/log/smx-log/fail.log | tail -n 7
							  echo
							  read -p "Press [enter] to continue..." ReadDamKey
							  exit 1
                        			     fi
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Creating new samba share point: $folderName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     $(which mkdir) -p $folderName
                                                     $(which chmod) 777 $folderName
                                                     echo "unix charset = UTF-8" >> /etc/samba/smb.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "host allow = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
                                                     echo "security = share" >> /etc/samba/smb.conf
                                                     update_spinner
                                                     sleep 1
                                                     update_spinner
                                                     echo "Defining new samba share: $smbName at: $folderName"
                                                     sleep 1
                                                     update_spinner
                                                     sleep 1
                                                     echo "" >> /etc/samba/smb.conf
                                                     echo "[$smbName]" >> /etc/samba/smb.conf
                                                     echo "path = $folderName" >> /etc/samba/smb.conf
                                                     echo "writable = yes" >> /etc/samba/smb.conf
                                                     echo "guest ok = no" >> /etc/samba/smb.conf
                                                     echo "create mode = 0770" >> /etc/samba/smb.conf
                                                     echo "directory mode = 0770" >> /etc/samba/smb.conf
                                                     echo "share modes = yes" >> /etc/samba/smb.conf
                                                     echo "valid users = @samba" >> /etc/samba/smb.conf
                                                     echo "" >> /etc/samba/smb.conf
                                                     $(which service) smb start
                                                     $(which chkconfig) smb on
                                                     $(which smbpasswd) -a $smbUsers
                                                     $(which usermod) -G samba $smbUsers
                                                     read -p "Press [enter] to continue..." ReadDamKey
					       fi
					  fi
                                     fi
			        fi
		           fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "$(date)                                     $(whoami)@$(hostname)"
                                echo "[TOP]                                    [Entry Fields]"
                                read -p " Open access or authenticated share --- (open/auth) > " ans
                                if [ "$ans" = "open" ]; then
                                      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Folder name example: /samba/share"
                                      echo "Share name example: samba-test"
                                      echo "Allowed addresses example: 192.168.1.34 192.168.1.32"
                                      echo "[TOP]                                     [Entry Fields]"
                                      read -p " Enter folder name -------------------- > " folderName
                                      read -p " Enter share name --------------------- > " smbName
                                      read -p " Enter allowed addresses -------------- > " addrRange
                                      clear
                                      echo "         COMMAND STATUS           "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which make)                        bos.sysmgt.make         exec"
                                      echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
				      echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
                                      echo "/usr/local/etc/rc.d/samba            bos.sysmgt.samba        exec"
                                      echo "Command run: $(which make) -C /usr/ports/net/samba41 install clean"
                                      echo "Command run: $(which mkdir) -p $folderName"
                                      echo "Command run: $(which chmod) 777 $folderName"
				      echo "Command run: $(which sysrc) samba_enable=YES"
                                      echo "Command run: /usr/local/etc/rc.d/samba start"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing package: samba41"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which make) -C /usr/ports/net/samba41 install clean
                                      if [ $PIPESTATUS -eq 0 ]; then
					   echo "#######################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which make) -C /usr/ports/net/samba41 install clean" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "#######################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   echo "#######################################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which make) -C /usr/ports/net/samba41 install clean" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "#######################################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/fail.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
					   exit 1
                        	      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating new samba share point at: $folderName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which mkdir) -p $folderName
                                      $(which chmod) 777 $folderName
                                      echo "unix charset = UTF-8" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "host allow = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
                                      echo "security = share" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining new samba share as: $smbName at: $folderName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "" >> /etc/samba/smb.conf
                                      echo "[$smbName]" >> /etc/samba/smb.conf
                                      echo "path = $folderName" >> /etc/samba/smb.conf
                                      echo "writable = yes" >> /etc/samba/smb.conf
                                      echo "guest ok = yes" >> /etc/samba/smb.conf
                                      echo "guest only = yes" >> /etc/samba/smb.conf
                                      echo "create mode = 0777" >> /etc/samba/smb.conf
                                      echo "directory mode = 0777" >> /etc/samba/smb.conf
                                      echo "share modes = yes" >> /etc/samba/smb.conf
                                      echo "" >> /etc/samba/smb.conf
				      $(which sysrc) samba_enable=YES
                                      /usr/local/etc/rc.d/samba start
                                      echo "Samba successfully installed"
                                      read -p "Press [enter] to continue..." ReadDamKey
                    		else
                    		      clear
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Folder name example: /samba/share"
                                      echo "Share name example: samba-test"
                                      echo "Allowed addresses example: 192.168.1.34 192.168.1.32"
                                      echo "Allowed users example: user01 user02"
                                      echo "[TOP]                                     [Entry Fields]"
                                      read -p " Enter folder name -------------------- > " folderName
                                      read -p " Enter share name --------------------- > " smbName
                                      read -p " Enter allowed addresses -------------- > " addrRange
                                      read -p " Enter allowed users ------------------ > " smbUsers
                                      clear
                                      echo "         COMMAND STATUS           "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which make)                        bos.pkgmgt.make         exec"
                                      echo "$(which groupadd)                    bos.grpmgt.groupadd     exec"
                                      echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
                                      echo "$(which chgrp)                       bos.grpmgt.chgrp        exec"
                                      echo "$(which chmod)                       bos.sysmgt.chmod        exec"
				      echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
                                      echo "/usr/local/etc/rc.d/samba            bos.sysmgt.samba        exec"
                                      echo "$(which smbpasswd)                   bos.sysmgt.smbpasswd    exec"
                                      echo "$(which usermod)                     bos.sysmgt.usermod      exec"
                                      echo "Command run: $(which make) -C /usr/ports/net/samba41 install clean"
                                      echo "Command run: $(which groupadd) samba"
                                      echo "Command run: $(which mkdir) -p $folderName"
                                      echo "Command run: $(which chgrp) samba $folderName"
                                      echo "Command run: $(which chmod) 2770 $folderName"
				      echo "Command run: $(which sysrc) samba_enable=YES"
                                      echo "Command run: /usr/local/etc/rc.d/samba start"
                                      echo "Command run: $(which smbpasswd) -a $smbUsers"
                                      echo "Command run: $(which usermod) -G samba $smbUsers"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing package: samba"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which make) -C /usr/ports/net/samba41 install clean
                                      if [ $PIPESTATUS -eq 0 ]; then
					   echo "#######################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly installed samba on system: $(hostname)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which make) -C /usr/ports/net/samba41 install clean" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "#######################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   echo "#######################################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "Not installed samba on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which make) -C /usr/ports/net/samba41 install clean" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "#######################################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/fail.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
					   exit 1
                        	      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Creating new samba share point: $folderName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which mkdir) -p $folderName
                                      $(which chmod) 777 $folderName
                                      echo "unix charset = UTF-8" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting allowed addresses to: 127.0.0.1 and: $addrRange"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "host allow = 127.0.0.1 $addrRange" >> /etc/samba/smb.conf
                                      echo "security = share" >> /etc/samba/smb.conf
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Defining new samba share: $smbName at: $folderName"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      echo "" >> /etc/samba/smb.conf
                                      echo "[$smbName]" >> /etc/samba/smb.conf
                                      echo "path = $folderName" >> /etc/samba/smb.conf
                                      echo "writable = yes" >> /etc/samba/smb.conf
                                      echo "guest ok = no" >> /etc/samba/smb.conf
                                      echo "create mode = 0770" >> /etc/samba/smb.conf
                                      echo "directory mode = 0770" >> /etc/samba/smb.conf
                                      echo "share modes = yes" >> /etc/samba/smb.conf
                                      echo "valid users = @samba" >> /etc/samba/smb.conf
                                      echo "" >> /etc/samba/smb.conf
				      $(which sysrc) samba_enable=YES
                                      /usr/local/etc/rc.d/samba start
                                      $(which smbpasswd) -a $smbUsers
                                      $(which usermod) -G samba $smbUsers
                                      read -p "Press [enter] to continue..." ReadDamKey
				fi
			   else
			        echo "Feature not availiable for OS X"
			        read -p "Press [enter] to continue..." ReadDamKey
				smb_menu
			   fi
		      fi
    	              ;;
	    start)
		    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
			      echo "OS = Red Hat"
                              echo "        COMMAND STATUS        "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) smb start"
                              echo "Command run: $(which service) nmb start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting samba server"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) smb start
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting netbios name server"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) nmb start
			      echo "######################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly started smb and nmb on system: $(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which service) smb start" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "######################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
			      read -p "Press [enter] to continue..." ReadDamKey
			 else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
			           echo "OS = Debian"
				   echo "       COMMAND STATUS         "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                 Type"
				   echo "-----------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) samba start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting samba server"
				   sleep 1
				   update_spinner
				   sleep 1
				   $(which service) samba start
			           echo "################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started samba on system: $(hostname)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) samba start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
			           read -p "Press [enter] to continue..." ReadDamKey
                              else
				   clear
				   cat /proc/version | grep "Ubuntu" >> /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "       COMMAND STATUS         "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) samba start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting samba server"
					sleep 1
					update_spinner
					sleep 1
					$(which service) samba start
					echo "################################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started samba on system: $(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) samba start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "################################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "       COMMAND STATUS         "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) smb start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting samba server"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) smb start
                                             echo "################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started samba on system: $(hostname)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) smb start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					fi
				   fi
			      fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "OS = BSD"
			      echo "         COMMAND STATUS            "
			      echo
			      echo "$(date)                                     $(whoami)@$(hostname)"
			      echo
			      echo "Command: RUNNING    stdout: yes    stderr: no     "
			      echo
			      echo "Before command completion, additional instructions may appear below"
			      echo
			      echo "File                                 Fileset                 Type"
			      echo "-----------------------------------------------------------------"
			      echo "/usr/local/etc/rc.d/samba            bos.sysmgt.samba        exec"
			      echo "Command run: /usr/local/etc/rc.d/samba start"
			      update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting samba server"
                              sleep 1
                              update_spinner
                              sleep 1
			      /usr/local/etc/rc.d/samba start
			      if [ $? -eq 0 ]; then
				   echo "###############################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfully started samba" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: /usr/local/etc/rc.d/samba start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "###############################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to conitnue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to conitnue..." ReadDamKey
			      else
				   echo "###############################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started samba, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: /usr/local/etc/rc.d/samba stop" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "###############################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to conitnue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to conitnue..." ReadDamKey
			      fi
			 else
			      echo "Feature not availiable for OS X"
			      read -p "Press [enter] to continue..." ReadDamKey
			      smb_menu
			 fi
		    fi
                    ;;
	    stop)
		   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /proc/version | grep "Red Hat" >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
			     echo "OS = Red Hat"
                             echo "        COMMAND STATUS        "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) smb stop"
                             echo "Command run: $(which service) nmb stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping samba server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) smb stop
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping netbios name server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) nmb stop
                             echo "######################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly stopped smb and nmb on system: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) smb stop" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "######################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
			     read -p "Press [enter] to continue..." ReadDamKey
			else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
			          echo "OS = Debian"
				  echo "       COMMAND STATUS         "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) samba stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping samba server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) samba stop
			          echo "################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped samba on system: $(hostname)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) samba stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
			          read -p "Press [enter] to continue..." ReadDamKey
                             else
				  clear
				  cat /proc/version | grep "Ubuntu" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "       COMMAND STATUS         "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) samba stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping samba server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) smb stop
                                       echo "################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped samba on system: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) samba stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = SuSE"
					    echo "       COMMAND STATUS         "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) smb stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping samba server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) smb stop
					    echo "################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped samba on system: $(hostname)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) smb stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       fi
				  fi
			     fi
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "OS = BSD"
			     echo "         COMMAND STATUS               "
			     echo
			     echo "$(date)                                     $(whoami)@$(hostname)"
			     echo
			     echo "Before command completion, additional instructions may appear below"
			     echo
			     echo "File                                 Fileset                 Type"
			     echo "-----------------------------------------------------------------"
			     echo "/usr/local/etc/rc.d/samba            bos.sysmgt.samba        exec"
			     echo "Command run: /usr/local/etc/rc.d/samba stop"
			     update_spinner
			     sleep 1
			     update_spinner
			     echo "Stopping samba server"
			     sleep 1
			     update_spinner
			     sleep 1
			     /usr/local/etc/rc.d/samba stop
			     if [ $? -eq 0 ]; then
				  echo "###########################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfully started samba" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/samba stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "###########################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to conitnue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else
				  echo "###########################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not started samba, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/samba stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "###########################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to conitnue..." ReadDamKey
			     fi
			else
			     echo "Feature not availiable for OS X"
			     read -p "Press [enter] to conitnue..." ReadDamKey
			fi
		   fi
                   ;;
	    restart)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "        COMMAND STATUS        "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) smb restart"
				echo "Command run: $(which service) nmb restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting samba server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) smb restart
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting netbios name server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) nmb restart
			        echo "########################################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "[$(date)] Successfuly restarted smb and nmb on system: $(hostname)" >> /var/log/smx-log/success.log
				echo "[$(date)] Command run: $(which service) smb restart" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				echo "########################################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
			        read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "       COMMAND STATUS         "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) samba restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting samba server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) samba restart
                                     echo "##################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted samba on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) samba restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "##################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     clear
				     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "       COMMAND STATUS         "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) samba restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting samba server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) samba restart
					  echo "##################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted samba on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) samba restart" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "##################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "       COMMAND STATUS         "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) smb restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting samba server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) smb restart
                                               echo "##################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted samba on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) smb restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "##################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     fi
			        fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS                     "
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no"
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "/usr/local/etc/rc.d/samba            bos.sysmgt.samba        exec"
				echo "Command run: /usr/local/etc/rc.d/samba restart"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting samba server"
                                sleep 1
                                update_spinner
                                sleep 1
				/usr/local/etc/rc.d/samba restart
				if [ $? -eq 0 ]; then
				     echo "#########################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully restarted samba" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/samba restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "########################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to conitnue..." ReadDamKey
				else
				     echo "########################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not restarted samba, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/samba restart" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "########################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to conitnue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to conitnue..." ReadDamKey
				fi    
			   else
			        echo "Feature not availiable for OS X"
				read -p "Press [enter] to conitnue..." ReadDamKey
				smb_menu
			   fi
		      fi
                      ;;
            status)
                     clear
                     echo "        COMMAND STATUS        "
                     echo
                     echo "$(date)                                     $(whoami)@$(hostname)"
                     echo
                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                     echo
                     echo "Before command completion, additional instructions may appear below"
                     echo
                     echo "File                                Fileset                  Type"
                     echo "-----------------------------------------------------------------"
                     echo "$(which smbstatus)                  bos.sysmgt.smbstatus     exec"
                     echo "Command run: $(which smbstatus) -v | $(which tee) /var/log/smx-log/smbstatus.log"
                     update_spinner
                     sleep 1
                     update_spinner
                     echo "Displaying samba server status"
                     sleep 1
                     update_spinner
                     sleep 1
                     $(which smbstatus) -v | $(which tee) /var/log/smx-log/smbstatus.log
                     if [ $? -eq 0 ]; then
                          echo "####################################################################################" >> /var/log/smx-log/success.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                          echo "[$(date)] Successfuly displayed SMB status" >> /var/log/smx-log/success.log
                          echo "[$(date)] Command run: $(which smbstatus) -v | $(which tee) /var/log/smx-log/smbstatus.log" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          echo "####################################################################################" >> /var/log/smx-log/success.log
                          echo "" >> /var/log/smx-log/success.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/success.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     else
			  echo "####################################################################################" >> /var/log/smx-log/fail.log
                          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Not displayed SMB status, check command syntax" >> /var/log/smx-log/fail.log
                          echo "[$(date)] Command run: $(which smbstatus) -v | $(which tee) /var/log/smx-log/smbstatus.log" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          echo "####################################################################################" >> /var/log/smx-log/fail.log
                          echo "" >> /var/log/smx-log/fail.log
                          read -p "Press [enter] to continue..." ReadDamKey
                          clear
                          echo
                          cat /var/log/smx-log/fail.log | tail -n 7
                          echo
                          read -p "Press [enter] to continue..." ReadDamKey
                     fi
                     ;;  
            help)
                   echo "install > Install Samba server on system"
                   echo "start > Start Samba"
                   echo "stop > Stop Samba"
                   echo "restart > Restart Samba"
                   echo "status > Get status of mounted SMB shares"
                   echo "help > This menu"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;    
	    exit)
		   clear
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/smb_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
	    exit-mas)
	               clear
                       echo "#####################################" >> /var/log/smx-log/exit.log
            	       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
            	       echo "[$(date)] Successfuly terminated $(basename $0)" >> /var/log/smx-log/exit.log
            	       echo "" >> /var/log/smx-log/exit.log
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
            	       exit 0
            	       ;;
	        *)         clear
            	       echo "        COMMAND STATUS        "
            	       echo
            	       echo "$(date)                                     $(whoami)@$(hostname)"
            	       echo
            	       echo "Command: FAIL    stdout: yes    stderr: no        "
            	       echo
            	       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 5632 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done
}

function ssh_menu() {
    while :
    do
        clear
        echo
        echo "$(date)                                     $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/ssh_menu # " choice_ssh
        echo

        case "$choice_ssh" in
            install)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "[TOP]                                     [Entry Fields]"
				printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
				if [ "$netIntf" = "" ]; then
                                      NETINTF=""
                                      read netIntf
                                      NETINTF=$netIntf
				fi
				if [ "$netIntf" = "" ]; then
                                      NETINTF=""
				      NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
			        fi       
				clear
				echo "This program assumes that root login is set to yes, so root can login over ssh"
				echo  
				echo "             COMMAND STATUS           "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which sed)                         bos.sysmgt.sed          exec"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config"
				echo "Command run: $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config"
				echo "Command run: $(which service) sshd restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Allowing remote root login"
				sleep 1
				update_spinner
				sleep 1
				$(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config
				update_spinner
				sleep 1
				update_spinner
				echo "Disabling empty passwords"
				sleep 1
				update_spinner
				sleep 1
				$(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting ssh server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) sshd restart
				echo "################################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "Successfuly installed SSH on system: $(hostName)" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				echo "################################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
				echo
				echo "SSH [$(date)] Successfuly installed on system, ssh to root@$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')"
			        read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "[TOP]                                     [Entry Fields]"
                                     printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                     if [ "$netIntf" = "" ]; then
					   NETINTF=""
					   read netIntf
					   NETINTF=$netIntf
                                     fi
                                     if [ "$netIntf" = "" ]; then
					   NETINTF=""
					   NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                     fi             
                                     clear
                                     echo "             COMMAND STATUS              "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no    "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                     echo "$(which sed)                         bos.sysmgt.sed          exec"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log"
                                     echo "Command run: $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config"
                                     echo "Command run: $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config"
                                     echo "Command run: $(which service) ssh restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing package: ssh"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log
                                     if [ $PIPESTATUS -eq 0 ]; then
					  echo "############################################################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly installed ssh on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "############################################################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/apt-get.log | tail -n 7
					  echo
					  echo
					  echo "SSH Successfuly installed on system, ssh to root@$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')"
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo "############################################################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Not installed ssh on system: $(hostname), check command syntax" >> /var/log/smx-log/ FAIL.log
					  echo "[$(date)] Command run: $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log 
					  echo "############################################################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
					  exit 1
                		     fi
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Allowing remote root login"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                		     $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Disabling empty passwords"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                		     $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting ssh server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) ssh restart
                                     echo "SSH Successfuly installed on system, ssh to root@$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')"
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo "[TOP]                                     [Entry Fields]"
					  printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
				          if [ "$netIntf" = "" ]; then
                                                NETINTF=""
						read netIntf
						NETINTF=$netIntf
					  fi
					  if [ "$netIntf" = "" ]; then
                                                NETINTF=""
						NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
				          fi             
					  clear
					  echo "             COMMAND STATUS              "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no    "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
					  echo "$(which sed)                         bos.sysmgt.sed          exec"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log"
					  echo "Command run: $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config"
					  echo "Command run: $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config"
					  echo "Command run: $(which service) ssh restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Installing pacakge: ssh"
					  sleep 1
					  update_spinner
					  sleep 1
                		          $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log
				          if [ $PIPESTATUS -eq 0 ]; then
                                               echo "############################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed ssh on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "############################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/apt-get.log | tail -n 7
                                               echo
                                               echo
                                               echo "SSH Successfuly installed on system, ssh to root@$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')"
                                               read -p "Press [enter] to continue..." ReadDamKey
				          else
                                               echo "############################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not installed ssh on system: $(hostname), check command syntax" >> /var/log/smx-log/ FAIL.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install ssh | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log 
                                               echo "############################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
                		          fi
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Allowing remote root login"
					  sleep 1
					  update_spinner
					  sleep 1
                		          $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Disabling empty passwords"
					  sleep 1
					  update_spinner
					  sleep 1
                		          $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting ssh server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) ssh restart
					  echo "SSH Successfuly installed on system, ssh to root@$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')"
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "[TOP]                                     [Entry Fields]"
                                               printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                               if [ "$netIntf" = "" ]; then
                                                     NETINTF=""
                                                     read netIntf
                                                     NETINTF=$netIntf
                                               fi
                                               if [ "$netIntf" = "" ]; then
                                                     NETINTF=""
						     NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
					       fi  
                                               clear
                                               echo "              COMMAND STATUS               "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                Type"
                                               echo "----------------------------------------------------------------"
                                               echo "$(which sed)                         bos.sysmgt.sed         exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config"
                                               echo "Command run: $(which sed) -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config"
                                               echo "Command run: $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config"
                                               echo "Command run: $(which service) sshd restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Allowing remote root login"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       $(which sed) -i 's/#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting password authentication to yes"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       $(which sed) -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Disabling empty passwords"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       $(which sed) -i 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting ssh server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) sshd restart
                                               echo "################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed ssh on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               echo
                                               echo "SSH Successfuly installed on system, ssh to root@$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')"
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     fi
			        fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS                 "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
				echo "$(which sed)                         bos.sysmgt.sed          exec"
				echo "/etc/rc.d/sshd                       bos.sysmgt.sshd         exec"
				echo "Command run: $(which sysrc) sshd_enable=YES"
				echo "Command run: $(which sed) -i 's/#PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_config"
				echo "Command run: $(which sed) -i 's/#PasswordAuthentication no/PasswordAuthentiction yes/g' /etc/ssh/sshd_config"
				echo "Command run: $(which sed) -i 's/#PermitEmptyPasswords no/PermitEmptyPasswords no/g' /etc/ssh/sshd_config"
				echo "Command run: /etc/rc.d/sshd start"
				update_spinner
				sleep 1
				update_spinner
				echo "Configuring ssh server"
				sleep 1
				update_spinner
				sleep 1
				$(which sysrc) sshd_enable=YES
				$(which sed) -i "s/#PermitRootLogin no/PermitRootLogin yes/g" /etc/ssh/sshd_config
				$(which sed) -i "s/#PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
				$(which sed) -i "s/#PermitEmptyPasswords no/PermitEmptyPasswords no/g" /etc/ssh/sshd_config
				/etc/rc.d/sshd start
				if [ $? -eq 0 ]; then
				     echo "################################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully configured ssh server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /etc/rc.d/sshd start" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "################################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "################################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not configured ssh server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /etc/rc.d/sshd start" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "################################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to conitnue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				fi
			   else
			        echo "Feature not availiable for OS X"
				read -p "Press [enter] to conitnue..." ReadDamKey
			   fi
		      fi
                      ;;
            start)
                    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "             COMMAND STATUS               "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) sshd start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting ssh service"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) sshd start
                              echo "###############################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly started sshd on system: $(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which service) sshd start" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "###############################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
			 else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
				   echo "OS = Debian"
				   echo "             COMMAND STATUS               "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                 Type"
				   echo "-----------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) ssh start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting ssh server"
				   sleep 1
				   update_spinner
				   sleep 1
				   $(which service) ssh start
				   echo "##############################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started ssh on system: $(hostName)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) ssh start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "##############################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              else
				   clear
				   cat /proc/version | grep "Ubuntu" >> /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "             COMMAND STATUS               "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) ssh start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting ssh server"
					sleep 1
					update_spinner
					sleep 1
					$(which service) ssh start
					echo "##############################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started ssh on system: $(hostName)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) ssh start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "##############################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
				             clear
                                             echo "OS = SuSE"
                                             echo "             COMMAND STATUS               "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) sshd start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting ssh server"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) sshd start
                                             echo "##############################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started ssh on system: $(hostName)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) sshd start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "##############################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					fi
            			   fi
            		      fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "OS = BSD"
			      echo "          COMMAND STATUS                          "
			      echo
			      echo "$(date)                                     $(whoami)@$(hostname)"
			      echo
			      echo "Command: RUNNING    stdout: yes    stderr: no     "
			      echo
			      echo "Before command completion, additional instuctions may appear below"
			      echo
			      echo "File                                 Fileset                Type"
			      echo "----------------------------------------------------------------"
			      echo "/etc/rc.d/sshd                       bos.sysmgt.sshd        exec"
			      echo "Command run: /etc/rc.d/sshd start"
			      update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting ssh server"
                              sleep 1
                              update_spinner
                              sleep 1
			      /etc/rc.d/sshd start
			      if [ $? -eq 0 ]; then
				   echo "#################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfully started ssh server" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: /etc/rc.d/sshd start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "#################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      else
				   echo "######################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started ssh server, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: /etc/rc.d/sshd start" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "######################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to conitnue..." ReadDamKey
			      fi
 			 else
			      $(which uname) | grep Darwin >> /dev/null
			      if [ $? -eq 0 ]; then
				   clear
				   echo "Feature not avaliable for OS X"
				   read -p "Press [enter] to continue..." ReadDamKey
				   ssh_menu
			      fi
			 fi
		    fi
                    ;;
            stop)
                   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /proc/version | grep "Red Hat" >> /dev/null
			if [ $? -eq 0 ]; then
		             clear
                             echo "OS = Red Hat"
                             echo "             COMMAND STATUS               "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) sshd stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping ssh server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) sshd stop
                             echo "###############################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly stopped sshd on system: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) sshd stop" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "###############################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
        		else
        		     clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
				  echo "OS = Debian"
				  echo "             COMMAND STATUS               "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) ssh stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping ssh server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) ssh stop
				  echo "##############################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped ssh on system: $(hostName)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) ssh stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "##############################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else    
				  clear
				  cat /proc/version | grep "Ubuntu" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "             COMMAND STATUS               "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) ssh stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping ssh server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) ssh stop
                                       echo "##############################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped ssh on system: $(hostName)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) ssh stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "##############################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
			          else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = SuSE"
					    echo "             COMMAND STATUS               "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) sshd stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping ssh server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) sshd stop
					    echo "##############################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped ssh on system: $(hostName)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) sshd stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "##############################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
				       fi
			          fi
			     fi
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "OS = BSD"
			     echo "         COMMAND STATUS                  "
			     echo
			     echo "$(date)                                     $(whoami)@$(hostname)"
			     echo
			     echo "Command: RUNNING    stdout: yes    stderr: no     "
			     echo
			     echo "Before command completion, additional instructions may appear below"
			     echo
			     echo "File                                 Fileset                 Type"
			     echo "-----------------------------------------------------------------"
			     echo "/etc/rc.d/sshd                       bos.sysmgt.sshd         exec"
			     echo "Command run: /etc/rc.d/sshd stop"
			     update_spinner
			     sleep 1
			     update_spinner
			     echo "Stopping ssh server"
			     sleep 1
			     update_spinner
			     sleep 1
			     /etc/rc.d/sshd stop
			     if [ $? -eq 0 ]; then
				  echo "###########################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfully stopped ssh server" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: /etc/rc.d/sshd stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "###########################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else
 				  echo "###########################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped ssh server, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: /etc/rc.d/sshd stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "###########################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     fi
			else 
			     $(which uname) | grep Darwin >> /dev/null
			     if [ $? -eq 0 ]; then
				  clear
				  echo "Feature not avaliable for OS X"
				  read -p "Press [enter] to continue..." ReadDamKey
				  ssh_menu
			     fi
			fi
		   fi
                   ;;
            restart)
                      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "              COMMAND STATUS               "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                  Fileset                Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                      bos.sysmgt.service     exec"
				echo "Command run: $(which service) sshd restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting ssh server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) sshd restart
				echo "#################################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "[$(date)] Successfuly restarted sshd on system: $(hostname)" >> /var/log/smx-log/success.log
				echo "[$(date)] Command run: $(which service) sshd restart" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				echo "#################################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
				read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "              COMMAND STATUS               "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                  Fileset                Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) ssh restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting ssh server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) ssh restart
                                     echo "################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted ssh on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) ssh restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else    
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "              COMMAND STATUS               "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                  Fileset                Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) ssh restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting ssh server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) ssh restart
					  echo "################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted ssh on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) ssh restart" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "              COMMAND STATUS               "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                  Fileset                Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) sshd restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting ssh server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) sshd restart
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted sshd on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) sshd restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     fi
				fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS               "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "/etc/rc.d/sshd                       bos.sysmgt.sshd         exec"
				echo "Command run: /etc/rc.d/sshd restart"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting ssh server"
                                sleep 1
                                update_spinner
                                sleep 1
				/etc/rc.d/sshd restart
				if [ $? -eq 0 ]; then
				     echo "#####################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully restarted ssh server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /etc/rc.d/sshd restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "#####################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "########################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not restarted ssh server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /etc/rc.d/sshd restart" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "########################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				fi
			   else
			        $(which uname) | grep Darwin >> /dev/null
				if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to continue..." ReadDamKey
				     ssh_menu
				fi
			   fi
		      fi
                      ;;
            help)
                   echo "install > Install SSH server on system"
                   echo "start > Start SSH server"
                   echo "stop > Stop SSH server"
                   echo "restart > Restart SSH server"
                   echo "help > This menu"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell" 
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;         
            exit)
                   clear
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/ssh_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
            exit-mas)
                       clear
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated $(basename $0)" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "        COMMAND STATUS        "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no        "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 8064 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function vnc_menu() {
    while :
    do
        clear
        echo "$(date)                                     $(whoami)@$(hostname)"
    	echo
    	read -p "$(whoami)@$(hostname):smx/vnc_menu # " choice_vnc
    	echo

    	case "$choice_vnc" in
    	    install)
                      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			    cat /etc/redhat-release | grep 7 >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
				 echo "OS = Red Hat v7"
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo "[TOP]                                    [Entry Fields]"
				 read -p " Enter user to configure VNC --------- > " userName
				 clear
				 echo "           COMMAND STATUS           "
				 echo
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo
				 echo "Command: RUNNING    stdout: yes    stderr: no     "
				 echo
				 echo "Before command completion, additional instructions may appear below"
				 echo
				 echo "File                                 Fileset                 Type"
				 echo "-----------------------------------------------------------------"
				 echo "$(which yum)                         bos.pkgmgt.yum          exec"
				 echo "$(which su)                          bos.sysmgt.su           exec"
				 echo "$(which vncpasswd)                   bos.sysmgt.vncpasswd    exec"
				 echo "$(which vncserver)                   bos.sysmgt.vncserver    exec"
				 echo "Command run: $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/yum.log"
				 echo "Command run: $(which su) -l $userName"
				 echo "Command run: $(which vncpasswd)"
				 echo "Command run: $(which vncserver) :1 -geometry 800x600 -depth 24"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Installing package: tigervnc-server"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/yum.log
				 if [ $PIPESTATUS -eq 0 ]; then
                                      echo "################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly installed vnc on system: $(hostname)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/yum.log
                                      echo "################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/yum.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      echo "Successfuly installed vnc on system: $(hostname)"
                                      read -p "Press [enter] to continue..." ReadDamKey
				 else
                                      echo "#################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not installed VNC on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/fail.log" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "#################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      exit 1
				 fi
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Setting VNC password"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which su) -l $userName -c "$(which vncpasswd)"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Starting VNC server with screen set to: 800x600 and color depth set to: 24"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which su) -l $userName -c "$(which vncserver) :1 -geometry 800x600 -depth 24"
				 echo
				 echo "Successfuly configured VNC on system: $(hostname)"
				 echo "Please add: $(which su) -l $userName -c 'vncserver :1 -geometry 800x600 -depth 24' to /etc/rc.local or other startup file"
				 read -p "Press [enter] to continue..." ReadDamKey
			    else
			 	 clear
				 cat /etc/redhat-release | grep 6 >> /dev/null
				 if [ $? -eq 0 ]; then
                                      echo "OS = Red Hat v6"
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "[TOP]                                    [Entry Fields]"
                                      read -p " Enter user to configure VNC --------- > " userName
                                      clear
                                      echo "           COMMAND STATUS           "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                 Type"
                                      echo "-----------------------------------------------------------------"
                                      echo "$(which yum)                         bos.pkgmgt.yum          exec"
                                      echo "$(which su)                          bos.sysmgt.su           exec"
                                      echo "$(which vncpasswd)                   bos.sysmgt.vncpasswd    exec"
                                      echo "$(which vncserver)                   bos.sysmgt.vncserver    exec"
                                      echo "$(which sed)                         bos.sysmgt.sed          exec"
                                      echo "Command run: $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/yum.log"
                                      echo "Command run: $(which su) -l $userName"
                                      echo "Command run: $(which vncpasswd)"
                                      echo "Command run: $(which vncserver) :1"
                                      echo "Command run: $(which vncserver) -kill :1"
                                      echo "Command run: $(which sed) -i 's/twm/#twm/g' /home/$userName/.vnc/xstartup"
                                      echo "Command run: $(which vncserver) :1 -geometry 800x600 -depth 24"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing package: tigervnc-server"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/yum.log
                                      if [ $PIPESTATUS -eq 0 ]; then
					   echo "################################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly installed vnc on system: $(hostname)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/yum.log
					   echo "################################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/yum.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   echo "Successfuly installed vnc on system: $(hostname)"
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   echo "#################################################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Not installed VNC on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which yum) -y install tigervnc-server | $(which tee) /var/log/smx-log/fail.log" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "#################################################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/fail.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
					   exit 1
                                      fi
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Setting VNC password"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which su) -l $userName -c "$(which vncpasswd)"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      $(which vncserver) :1
                                      $(which vncserver) -kill :1
                                      $(which sed) -i 's/twm/#twm/g' /home/$userName/.vnc/xstartup
                                      echo "exec gnome-session &" >> /home/$userName/.vnc/xstartup
                                      echo "Starting VNC server with screen set to: 800x600 and color depth set to: 24"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which su) -l $userName -c "$(which vncserver) :1 -geometry 800x600 -depth 24"
                                      echo
                                      echo "Successfuly configured VNC on system: $(hostname)"
                                      echo "Please add: $(which su) -l $userName -c 'vncserver :1 -geometry 800x600 -depth 24' to /etc/rc.local or other startup file"
                                      read -p "Press [enter] to continue..." ReadDamKey
				 else
                                      clear
                                      cat /proc/version | grep "Debian" >> /dev/null
                                      if [ $? -eq 0 ]; then
					   clear
					   echo "OS = Debian"
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo "[TOP]                                   [Entry Fields]"
					   read -p " Enter user to configure VNC -------- > " userName
					   clear
					   echo "         COMMAND STATUS        "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stder: no      "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                 Type"
					   echo "-----------------------------------------------------------------"
					   echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
					   echo "$(which su)                          bos.sysmgt.su           exec"
					   echo "$(which vncpasswd)                   bos.sysmgt.vncpasswd    exec"
					   echo "$(which vncserver)                   bos.sysmgt.vncserver    exec"
					   echo "Command run: $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log"
					   echo "Command run: $(which su) -l $userName -c '$(which vncpasswd)'"
					   echo "Command run: $(which su) -l $userName -c '$(which vncserver) :1'"
					   echo "Command run: $(which su) -l $userName -c '$(which vncserver) -kill :1'"
					   echo "Command run: echo 'exec gnome-session &' >> /home/$userName/.vnc/xstartup"
					   echo "Command run: $(which su) -l $userName -c '$(which vncserver) :1 -geometry 800x600 -depth 24'"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Installing package: vnc4server"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log
					   if [ $PIPESTATUS -eq 0 ]; then
                                                echo "###################################################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly installed VNC server on system: $(hostname)" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "###################################################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
					   else
                                                echo "###################################################################################################" >> /var/log/smx-log/exit.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
						echo "[$(date)] Not installed VNC on system: $(hostname), check command syntax" >> /var/log/smx-log/exit.log
						echo "[$(date)] Command run: $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/exit.log
						echo "" >> /var/log/smx-log/exit.log
						echo "###################################################################################################" >> /var/log/smx-log/exit.log
						echo "" >> /var/log/smx-log/exit.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/exit.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
						exit 1
					   fi
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Setting VNC password"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which su) -l $userName -c "$(which vncpasswd)"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Starting VNC server"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which su) -l $userName -c "$(which vncserver) :1"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Stopping VNC server"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which su) -l $userName -c "$(which vncserver) -kill :1"
					   echo "exec gnome-session &" >> /home/$userName/.vnc/xstartup
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Starting VNC server with screen set to: 800x600 to color depth to: 24"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which su) -l $userName -c "$(which vncserver) :1 -geometry 800x600 -depth 24"
					   echo
					   echo "Successfuly configured VNC on system: $(hostname)"
					   echo "Please add: $(which su) -l $userName -c 'vncserver :1 -geometry 800x600 -depth 24' to startup file"
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else    
					   clear
					   cat /proc/version | grep "Ubuntu" >> /dev/null
					   if [ $? -eq 0 ]; then
                                                clear
						echo "OS = Ubuntu"
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo "[TOP]                                   [Entry Fields]"
						read -p " Enter user to configure VNC -------- > " userName
						clear
						echo "         COMMAND STATUS        "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stder: no      "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                 Fileset                 Type"
						echo "-----------------------------------------------------------------"
						echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
						echo "$(which su)                          bos.sysmgt.su           exec"
						echo "$(which vncpasswd)                   bos.sysmgt.vncpasswd    exec"
						echo "$(which vncserver)                   bos.sysmgt.vncserver    exec"
						echo "Command run: $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log"
						echo "Command run: $(which su) -l $userName -c '$(which vncpasswd)'"
						echo "Command run: $(which su) -l $userName -c '$(which vncserver) :1'"
						echo "Command run: $(which su) -l $userName -c '$(which vncserver) -kill :1'"
						echo "Command run: echo 'exec gnome-session &' >> /home/$userName/.vnc/xstartup"
						echo "Command run: $(which su) -l $userName -c '$(which vncserver) :1 -geometry 800x600 -depth 24'"
						update_spinner
						sleep 1
						update_spinner
						echo "Installing package: vnc4server"
						sleep 1
						update_spinner
						sleep 1
						$(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log
						if [ $PIPESTATUS -eq 0 ]; then
						     echo "###################################################################################################" >> /var/log/smx-log/success.log
						     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						     echo "[$(date)] Successfuly installed VNC server on system: $(hostname)" >> /var/log/smx-log/success.log
						     echo "[$(date)] Command run: $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
						     echo "" >> /var/log/smx-log/success.log
						     echo "###################################################################################################" >> /var/log/smx-log/success.log
						     echo "" >> /var/log/smx-log/success.log
						     read -p "Press [enter] to continue..." ReadDamKey
						     clear
						     echo
						     cat /var/log/smx-log/success.log | tail -n 7
						     echo
						     read -p "Press [enter] to continue..." ReadDamKey
						else
						     echo "###################################################################################################" >> /var/log/smx-log/exit.log
						     echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
						     echo "[$(date)] Not installed VNC on system: $(hostname), check command syntax" >> /var/log/smx-log/exit.log
						     echo "[$(date)] Command run: $(which apt-get) -y install vnc4server | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/exit.log
						     echo "" >> /var/log/smx-log/exit.log
						     echo "###################################################################################################" >> /var/log/smx-log/exit.log
						     echo "" >> /var/log/smx-log/exit.log
						     read -p "Press [enter] to continue..." ReadDamKey
						     clear
						     echo
						     cat /var/log/smx-log/exit.log | tail -n 7
						     echo
						     read -p "Press [enter] to continue..." ReadDamKey
						     exit 1
						fi
						update_spinner
						sleep 1
						update_spinner
						echo "Setting VNC password"
						sleep 1
						update_spinner
						sleep 1
						$(which su) -l $userName -c "$(which vncpasswd)"
						update_spinner
						sleep 1
						update_spinner
						echo "Starting VNC server"
						sleep 1
						update_spinner
						sleep 1
						$(which su) -l $userName -c "$(which vncserver) :1"
						update_spinner
						sleep 1
						update_spinner
						echo "Stopping VNC server"
						sleep 1
						update_spinner
						sleep 1
						$(which su) -l $userName -c "$(which vncserver) -kill :1"
						echo "exec gnome-session &" >> /home/$userName/.vnc/xstartup
						update_spinner
						sleep 1
						update_spinner
						echo "Starting VNC server with screen set to: 800x600 and color depth set to: 24"
						sleep 1
						update_spinner
						sleep 1
						$(which su) -l $userName -c "$(which vncserver) :1 -geometry 800x600 -depth 24"
						echo
						echo "Successfuly configured VNC on system: $(hostname)"
						echo "Please add: $(which su) -l $userName -c 'vncserver :1 -geometry 800x600 -depth 24' to startup file"
						read -p "Press [enter] to continue..." ReadDamKey
					   else
                                                clear
						cat /proc/version | grep "SUSE" >> /dev/null
						if [ $? -eq 0 ]; then
						     clear
						     echo "OS = SuSE"
						     echo "$(date)                                     $(whoami)@$(hostname)"
						     echo "[TOP]                                    [Entry Fields]"
						     read -p " Enter username to configure VNC ---- > " userName
						     clear
						     echo "         COMMAND STATUS            "
						     echo
						     echo "$(date)                                     $(whoami)@$(hostname)"
						     echo
						     echo "Command: RUNNING    stdout: yes    stderr: no     "
						     echo
						     echo "Before command completion, additional instructions may appear below"
						     echo
						     echo "File                                 Fileset                 Type"
						     echo "-----------------------------------------------------------------"
						     echo "$(which su)                          bos.sysmgt.su           exec"
						     echo "$(which vncpasswd)                   bos.sysmgt.vncpasswd    exec"
						     echo "$(which vncserver)                   bos.sysmgt.vncserver    exec"
						     echo "$(which sed)                         bos.sysmgt.sed          exec"
						     echo "Command run: $(which su) -l $userName -c '$(which vncpasswd)'"
						     echo "Command run: $(which su) -l $userName -c '$(which vncserver) :1'"
						     echo "Command run: $(which sed) -i 's/twm/#twm/g' /home/$userName/.vnc/xstartup"
						     echo "Command run: echo 'exec gnome-session & >> /home/$userName/.vnc/xstartup"
						     echo "Command run: $(which su) -l $userName -c '$(which vncserver) -kill :1'"
						     echo "Command run: $(which su) -l $userName -c '$(which vncserver) -geometry 800x600 :1'"
						     update_spinner
						     sleep 1
						     update_spinner
						     echo "Setting VNC password"
						     sleep 1
						     update_spinner
						     sleep 1
						     $(which su) -l $userName -c "$(which vncpasswd)"
						     update_spinner
						     sleep 1
						     update_spinner
						     echo "Starting VNC server"
						     sleep 1
						     update_spinner
						     sleep 1
						     $(which su) -l $userName -c "$(which vncserver) :1"
						     $(which sed) -i 's/twm/#twm/g' /home/$userName/.vnc/xstartup
						     echo "exec gnome-session &" >> /home/$userName/.vnc/xstartup
						     update_spinner
						     sleep 1
						     update_spinner
						     echo "Stopping VNC server"
						     sleep 1
						     update_spinner
						     sleep 1
						     $(which su) -l $userName -c "$(which vncserver) -kill :1"
						     update_spinner
						     sleep 1
						     update_spinner
						     echo "Starting VNC server with screen set to: 800x600"
						     sleep 1
						     update_spinner
						     sleep 1
						     $(which su) -l $userName -c "$(which vncserver) -geometry 800x600 :1"
						     echo "##################################################################################" >> /var/log/smx-log/success.log
						     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						     echo "[$(date)] Successfuly installed VNC on system: $(hostname)" >> /var/log/smx-log/success.log
						     echo "[$(date)] Command run: $(which su) -l $userName -c '$(which vncserver) -geometry 800x600 :1'" >> /var/log/smx-log/success.log
						     echo "" >> /var/log/smx-log/success.log
						     echo "##################################################################################" >> /var/log/smx-log/success.log
						     echo "" >> /var/log/smx-log/success.log
						     read -p "Press [enter] to continue..." ReadDamKey
						     clear
						     echo
						     cat /var/log/smx-log/success.log | tail -n 7
						     echo
						     echo "Successfuly configured VNC on system: $(hostname)"
						     echo "Add: $(which su) -l $userName -c 'vncserver -geometry 800x600 :1' to startup file"
						     read -p "Press [enter] to continue..." ReadDamKey
						fi
					   fi
                                      fi
				 fi     
			    fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "Feature not avaliable for BSD"
				read -p "Press [enter] to continue..." ReadDamKey
				vnc_menu
			   else
			        $(which uname) | grep Darwin >> /dev/null
			        if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to continue..." ReadDamKey
				     vnc_menu
				fi
			   fi
		      fi
                      ;;
            start)
		    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "         COMMAND STATUS            "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) vncserver start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting VNC server"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) vncserver start
                              echo "####################################################" >> /var/log/smx-log/success.log
                              echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Successfuly started vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
                              echo "[$(date)] Command run: $(which service) vncserver start" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              echo "####################################################" >> /var/log/smx-log/success.log
                              echo "" >> /var/log/smx-log/success.log
                              read -p "Press [enter] to continue..." ReadDamKey
                              clear
                              echo
                              cat /var/log/smx-log/success.log | tail -n 7
                              echo
                              read -p "Press [enter] to continue..." ReadDamKey
			 else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
				   echo "OS = Debian"
				   echo "         COMMAND STATUS            "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                 Type"
				   echo "-----------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) vncserver start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting VNC server"
				   sleep 1
				   update_spinner
				   sleep 1
				   $(which service) vncserver start
				   echo "####################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) vncserver start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "####################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              else    
				   clear
				   cat /proc/version | grep "Ubuntu" >> /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "         COMMAND STATUS            "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) vncserver start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting VNC server"
					sleep 1
					update_spinner
					sleep 1
					$(which service) vncserver start
					echo "####################################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) vncserver start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "####################################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "         COMMAND STATUS            "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) vncserver start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting VNC server"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) vncserver start
                                             echo "####################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) vncserver start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "####################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					fi
				   fi
                              fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "Feature not avaliable for BSD"
			      read -p "Press [enter] to conitnue..." ReadDamKey
			      vnc_menu
			 else
			      $(which uname) | grep Darwin >> /dev/null
			      if [ $? -eq 0 ]; then
				   clear
				   echo "Feature not avaliable for OS X"
				   read -p "Press [enter] to continue..." ReadDamKey
				   vnc_menu
			      fi
			 fi
		    fi
                    ;;
	    stop)
                   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /proc/version | grep "Red Hat" >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Red Hat"
                             echo "         COMMAND STATUS            "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) vncserver stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping VNC server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) vncserver stop
                             echo "####################################################" >> /var/log/smx-log/success.log
                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Successfuly stopped vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
                             echo "[$(date)] Command run: $(which service) vncserver stop" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             echo "####################################################" >> /var/log/smx-log/success.log
                             echo "" >> /var/log/smx-log/success.log
                             read -p "Press [enter] to continue..." ReadDamKey
                             clear
                             echo
                             cat /var/log/smx-log/success.log | tail -n 7
                             echo
                             read -p "Press [enter] to continue..." ReadDamKey
			else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
				  echo "OS = Debian"
				  echo "         COMMAND STATUS            "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) vncserver stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping VNC server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) vncserver stop
				  echo "####################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) vncserver stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "####################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             else    
				  clear
				  cat /proc/version | grep "Ubuntu" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "         COMMAND STATUS            "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) vncserver stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping VNC server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) vncserver stop
                                       echo "####################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) vncserver stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "####################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "         COMMAND STATUS            "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) vncserver stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping VNC server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) vncserver stop
					    echo "####################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) vncserver stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "####################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       fi
				  fi
                             fi
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "Feature not avaliable for BSD"
			     read -p "Press [enter] to continue..." ReadDamKey
			     vnc_menu
			else
			     $(which uname) | grep Darwin >> /dev/null
			     if [ $? -eq 0 ]; then
				  clear
				  echo "Feature not avaliable for OS X"
				  read -p "Press [enter] to continue..." ReadDamKey
				  vnc_menu
			     fi
			fi
		   fi
                   ;;
	    restart)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "         COMMAND STATUS            "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) vncserver restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting VNC server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) vncserver restart
				echo "######################################################" >> /var/log/smx-log/success.log
				echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				echo "[$(date)] Successfuly restarted vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
				echo "[$(date)] Command run: $(which service) vncserver restart" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				echo "######################################################" >> /var/log/smx-log/success.log
				echo "" >> /var/log/smx-log/success.log
				read -p "Press [enter] to continue..." ReadDamKey
				clear
				echo
				cat /var/log/smx-log/success.log | tail -n 7
				echo
				read -p "Press [enter] to continue..." ReadDamKey
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "         COMMAND STATUS            "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) vncserver restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting VNC server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) vncserver restart
                                     echo "######################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) vncserver restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "######################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else    
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "         COMMAND STATUS            "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) vncserver restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting VNC server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) vncserver restart
					  echo "######################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) vncserver restart" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "######################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "         COMMAND STATUS            "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) vncserver restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting VNC server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) vncserver restart
                                               echo "######################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted vncserver on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) vncserver restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "######################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     fi
				fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "Feature not avaliable for BSD"
				read -p "Press [enter] to continue..." ReadDamKey
				vnc_menu
			   else
			        $(which uname) | grep Darwin >> /dev/null
				if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to continue..." ReadDamKey
				     vnc_menu
				fi
			   fi
		      fi
                      ;;
            help)
                   echo "install > Install VNC server on system"
                   echo "start > Start VNC"
                   echo "stop > Stop VNC"
                   echo "restart > Restart VNC"
                   echo "help > This menu"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell"    
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;      
	    exit)
                   clear
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/vnc_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "#######################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
            exit-mas)
                       clear
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated $(basename $0)" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "        COMMAND STATUS        "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no        "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 3525 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
	esac
    done
}

function snmp_menu() {
    while :
    do
        clear
    	echo "$(date)                                     $(whoami)@$(hostname)"
    	echo
    	read -p "$(whoami)@$(hostname):smx/snmp_menu # " choice_snmp
    	echo
	
    	case "$choice_snmp" in
	    install)
		      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = Red Hat"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "System location example: Node1, Rack1, Datacenter"
				echo "System contact example: root@$(hostname)"
				echo "[TOP]                                              [Entry Fields]"
				read -p " Enter system location ------------------------- > " sysLocation
				printf " Enter system contact [root@$(hostname)] -------- > "
				if [ "$sysContact" = "" ]; then
                                      SYS_CONTACT=""
                                      read sysContact
                                      SYS_CONTACT=$sysContact
				fi
				if [ "$sysContact" = "" ]; then
                                      SYS_CONTACT=""
                                      SYS_CONTACT=root@$(hostname)
				fi
				clear
				echo "         COMMAND STATUS                 "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which yum)                         bos.pkgmgt.yum          exec"
				echo "$(which mv)                          bos.sysmgt.mv           exec"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
				echo "$(which snmpwalk)                    bos.sysmgt.snmpwalk     exec"
				echo "Command run: $(which yum) -y install net-snmp-utils | $(which tee) /var/log/smx-log/yum.log"
				echo "Command run: $(which mv) /etc/snmp/snmp.conf /etc/snmp/snmp.conf.bak"
				echo "Command run: echo 'rocommunity    public' >> /etc/snmp/snmp.conf" 
				echo "Command run: echo 'syslocation    $sysLocation' >> /etc/snmp/snmp.conf"
				echo "Command run: echo 'syscontact     $SYS_CONTACT' >> /etc/snmp/snmp.conf"
				echo "Command run: $(which service) snmpd start"
				echo "Command run: $(which chkconfig) snmpd on"
				echo "Command run: $(which snmpwalk) -v 1 -c public -O e 127.0.0.1 | $(which tee) /var/log/smx-log/snmp.log"
				update_spinner
				sleep 1
				update_spinner
				echo "Installing package: net-snmp-utils"
				sleep 1
				update_spinner
				sleep 1
				$(which yum) -y install net-snmp-utils | $(which tee) /var/log/smx-log/yum.log
				if [ $PIPESTATUS -eq 0 ]; then
                                     echo "###########################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly installed SNMP on system: $(hostname)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which yum) -y install net-snmp-utils | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "###########################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
            			else
            			     echo "###############################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not installed SNMP on system: $(hostname), check command synatax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which yum) -y install net-snmp-utils | $(which tee) /var/log/smx-log/fail.log" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "############################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
            			fi
				update_spinner
				sleep 1
				update_spinner
				echo "Backing up snmp.conf"
				sleep 1
				update_spinner
				sleep 1
				$(which mv) /etc/snmp/snmp.conf /etc/snmp/snmp.bak
				echo "rocommunity    public" >> /etc/snmp/snmp.conf
				echo "syslocation    $syslocation" >> /etc/snmp/snmp.conf
				echo "syscontact     $SYS_CONTACT" >> /etc/snmp/snmp/snmp.conf
				update_spinner
				sleep 1
				update_spinner
				echo "Starting SNMP"
				sleep 1
				update_spinner
				sleep 1
            			$(which service) snmpd start
				update_spinner
				sleep 1
				update_spinner
				echo "Setting SNMP to start on startup"
				sleep 1
				update_spinner
				sleep 1
            			$(which chkconfig) snmpd on
				update_spinner
				sleep 1
				update_spinner
				echo "Testing SNMP server: 127.0.0.1"
				sleep 1
				update_spinner
				sleep 1
				$(which snmpwalk) -v 1 -c public -O e 127.0.0.1 | $(which tee) /var/log/smx-log/snmp.log
				if [ $PIPESTATUS -eq 0 ]; then
			             echo
                                     echo "SNMP Successfuly configured on system: $(hostname)"
                                     read -p "Press [enter] to continue..." ReadDamKey
			        else
                                     echo
                                     echo "SNMP not installed, check command syntax and log files"
                                     read -p "Press [enter] to continue..." ReadDamKey
			        fi		
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
			             clear
                                     echo "OS = Debian"
                                     echo "         COMMAND STATUS                 "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
                                     echo "$(which mv)                          bos.sysmgt.mv           exec"
                                     echo "$(which sed)                         bos.sysmgt.sed          exec"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "$(which snmpwalk)                    bos.sysmgt.snmpwalk     exec"
                                     echo "Command run: $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log"
                                     echo "Command run: $(which mv) /etc/snmp/snmpd.conf /etc/snmp/snmpd.bak"
                                     echo "Command run: $(which sed) -i 's/SNMPDOPTS/#SNMPOPTS/g' /etc/default/snmpd"
                                     echo "Command run: $(which service) snmpd restart"
                                     echo "Command run: $(which snmpwalk) -v 1 -c public -O e 127.0.0.1 | $(which tee) /var/log/smx-log/snmp.log"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Installing package: snmpd"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log
                                     if [ $PIPESTATUS -eq 0 ]; then
					  echo "##########################################################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly installed snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "##########################################################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [Enter] to continue..." ReadDamKey
                                     else
					  echo "##########################################################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Not installed snmpd on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Command run: $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  echo "##########################################################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
					  exit 1
                                     fi
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Backing up snmpd.conf"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which mv) /etc/snmp/snmpd.conf /etc/snmp/snmpd.bak
                                     echo "rocommunity    public" >> /etc/snmp/snmp.conf
                                     $(which sed) -i 's/SNMPDOPTS/#SNMPDOPTS/g' /etc/snmp/snmp.conf
                                     echo "SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -p /var/run/snmpd.pid'" >> /etc/snmp/snmp.conf
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting SNMP server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                		     $(which service) snmpd Restart
				     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Testing SNMP server: 127.0.0.1"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which snmpwalk) -v 1 -c public -O e 127.0.0.1 | $(which tee) /var/log/smx-log/snmp.log
                                     if [ $PIPESTATUS -eq 0 ]; then
			                  echo
					  echo "SNMP Successfuly configured on system: $(hostname)"
					  read -p "Press [enter] to continue..." ReadDamKey
				     else
					  echo
					  echo "SNMP not installed, check command syntax and log files"
					  read -p "Press [enter] to continue..." ReadDamKey
				     fi
			        else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                    $(whoami)@$(hostname)"
					  echo "sysLocation example: node1, rack1, datacenter"
					  echo "sysContact example: root@$(hostname)"
					  echo "[TOP]                                              [Entry Fields]"
					  read -p " Enter system location ------------------------- > " sysLocation
					  printf " Enter system contact [root@$(hostname)] -------- > "
					  if [ "$sysContact" = "" ]; then
                                                SYS_CONTACT=""
						read sysContact
						SYS_CONTACT=$sysContact
					  fi
					  if [ "$sysContact" = "" ]; then
                                                SYS_CONTACT=""
					        SYS_CONTACT=root@$(hostname)
					  fi
					  clear
					  echo "        COMMAND STATUS                        "
					  echo
					  echo "$(date)                                    $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no    "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which apt-get)                     bos.pkgmgt.apt-get      exec"
					  echo "$(which mv)                          bos.sysmgt.mv           exec"
					  echo "$(which sed)                         bos.sysmgt.sed          exec"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "$(which snmpwalk)                    bos.sysmgt.snmpwalk     exec"
					  echo "Command run: $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log"
					  echo "Command run: $(which mv) /etc/snmp/snmpd.conf /etc/snmp/snmpd.bak"
					  echo "Command run: $(which sed) -i 's/SNMPDOPTS/#SNMPDOPTS/g' /etc/default/snmpd"
					  echo "Command run: $(which service) snmpd restart"
					  echo "Command run: $(which snmpwalk) -v 1 -c public -O e 127.0.0.1"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Installing package: snmpd"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log
					  if [ $PIPESTATUS -eq 0 ]; then
                                               echo "##########################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "##########################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
				          else
                                               echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not installed snmpd on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install snmpd | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "##########################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Backing up snmpd.conf"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which mv) /etc/snmp/snmpd.conf /etc/snmp/snmpd.bak
					  echo "rocommunity    public" >> /etc/snmp/snmpd.conf
					  echo "syslocation    $sysLocation" >> /etc/snmp/snmpd.conf
					  echo "syscontact     $SYS_CONTACT" >> /etc/snmp/snmpd.conf
					  $(which sed) -i 's/SNMPDOPTS/#SNMPDOPTS/g' /etc/snmp/snmpd.conf
					  echo "SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -I -smux -p /var/run/snmpd.pid -c /etc/snmp/snmpd.conf'" >> /etc/default/snmpd
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting snmp server"
					  sleep 1
					  update_spinner
					  sleep 1
                		          $(which service) snmpd restart
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Testing snmp server: 127.0.0.1"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which snmpwalk) -v 1 -c public -O e 127.0.0.1
					  if [ $PIPESTATUS -eq 0 ]; then
                                               echo
                                               echo "SNMP Successfuly configured on system: $(hostname)"
                                               read -p "Press [enter] to continue..." ReadDamKey
				          else
					       echo
                                               echo "SNMP not installed, check command syntax and log files"
                                               read -p "Press [enter] to continue..." ReadDamKey
				          fi
                		     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "System location example: Node1, Rack1, Datacenter"
                                               echo "System contact example: root@$(hostname)"
                                               echo "[TOP]                                              [Entry Fields]"
                                               read -p " Enter system location ------------------------- > " sysLocation
                                               printf " Enter system contact [root@$(hostname)] -------- > "
                                               if [ "$sysContact" = "" ]; then
                                                     SYS_CONTACT=""
                    				     read sysContact
						     SYS_CONTACT=$sysContact
                                               fi
                                               if [ "$sysContact" = "" ]; then
                                                     SYS_CONTACT=""
                    				     SYS_CONTACT=root@$(hostname)
                                               fi
                                               clear
                                               echo "         COMMAND STATUS                 "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which zypper)                      bos.pkgmgt.zypper       exec"
                                               echo "$(which mv)                          bos.sysmgt.mv           exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
                                               echo "$(which snmpwalk)                    bos.sysmgt.snmpwalk     exec"
                                               echo "Command run: $(which zypper) in -y install net-snmp-utils | $(which tee) /var/log/smx-log/zypper.log"
                                               echo "Command run: $(which mv) /etc/snmp/snmp.conf /etc/snmp/snmp.conf.bak"
                                               echo "Command run: echo 'rocommunity    public' >> /etc/snmp/snmp.conf" 
                                               echo "Command run: echo 'syslocation    $sysLocation' >> /etc/snmp/snmp.conf"
                                               echo "Command run: echo 'syscontact     $SYS_CONTACT' >> /etc/snmp/snmp.conf"
                                               echo "Command run: $(which service) snmpd start"
                                               echo "Command run: $(which chkconfig) snmpd on"
                                               echo "Command run: $(which snmpwalk) -v 1 -c public -O e 127.0.0.1 | $(which tee) /var/log/smx-log/snmp.log"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Installing package: net-snmp-utils"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which zypper) in  -y install net-snmp-utils | $(which tee) /var/log/smx-log/zypper.log
                                               if [ $PIPESTATUS -eq 0 ]; then
						    echo "###########################################################################################" >> /var/log/smx-log/success.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Successfuly installed SNMP on system: $(hostname)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Command run: $(which yum) -y install net-snmp-utils | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    echo "###########################################################################################" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/success.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
                                               else
						    echo "###############################################################################################" >> /var/log/smx-log/fail.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Not installed SNMP on system: $(hostname), check command synatax" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Command run: $(which yum) -y install net-snmp-utils | $(which tee) /var/log/smx-log/fail.log" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    echo "############################################################################################" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/fail.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
						    exit 1
                                               fi
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Backing up snmp.conf"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which mv) /etc/snmp/snmp.conf /etc/snmp/snmp.bak
                                               echo "rocommunity    public" >> /etc/snmp/snmp.conf
                                               echo "syslocation    $syslocation" >> /etc/snmp/snmp.conf
                                               echo "syscontact     $SYS_CONTACT" >> /etc/snmp/snmp/snmp.conf
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Starting snmp server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       $(which service) snmpd start
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Setting snmp to start at startup"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                    			       $(which chkconfig) snmpd on
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Testing snmp server: 127.0.0.1"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which snmpwalk) -v 1 -c public -O e 127.0.0.1 | $(which tee) /var/log/smx-log/snmp.log
                                               if [ $PIPESTATUS -eq 0 ]; then
						    echo
						    echo "SNMP Successfuly configured on system: $(hostname)"
						    read -p "Press [enter] to continue..." ReadDamKey
                                               else
						    echo
						    echo "SNMP not installed, check command syntax and log files"
						    read -p "Press [enter] to continue..." ReadDamKey
                                               fi	
				          fi
                                     fi
			        fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo "[TOP]                                              [Entry Fields]"
			        read -p " Enter system location ------------------------- > " sysLocation
			        printf " Enter system contact [root@$(hostname)] -------- > "
                                if [ "$sysContact" = "" ]; then
                                      SYS_CONTACT=""
                    		      read sysContact
				      SYS_CONTACT=$sysContact
                                fi
                                if [ "$sysContact" = "" ]; then
                                      SYS_CONTACT=""
                    		      SYS_CONTACT=root@$(hostname)
                                fi
				clear
				echo "             COMMAND STATUS               "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which make)                        bos.pkgmgt.make         exec"
				echo "$(which sysrc)                       bos.sysmgt.sysrc        exec"
				echo "/usr/local/etc/rc.d/snmpd            bos.sysmgt.snmpd        exec"
				echo "$(which snmpwalk)                    bos.sysmgt.snmpwalk     exec"
				echo "Command run: $(which make) -C /usr/ports/net-mgmt/net-snmp install clean"
				echo "Command run: $(which sysrc) snmpd_enable=YES"
				echo "Command run: $(which sysrc) snmpd_flags='-a'"
				echo "Command run: $(which sysrc) snmpd_conffile='/usr/local/share/snmp/snmpd.conf /etc/snmpd.conf'"
				echo "Command run: $(which sysrc) snmptrapd_enable=YES"
				echo "Command run: $(which sysrc) snmptrapd_flags='-a -p /var/run/snmptrapd.pid'"
				echo "Command run: /usr/local/etc/rc.d/snmpd start"
				echo "Command run: $(which snmpwalk) -v 2c -c public 127.0.0.1"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Setting up snmp server"
                                sleep 1
                                update_spinner
                                sleep 1
				$(which make) -C /usr/ports/net-mgmt/net-snmp install clean
				if [ $? -eq 0 ]; then
				     echo "##################################################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully configured snmp server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: $(which make) -C /usr/ports/net-mgmt/net-snmp install clean" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "##################################################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "##################################################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not configured snmp server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: $(which make) -C /usr/ports/net-mgmt/net-snmp install clean" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "##################################################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				     exit 1
				fi
				$(which sysrc) snmpd_enable=YES
				$(which sysrc) snmpd_flags="-a"
				$(which sysrc) snmpd_conffile="/usr/local/share/snmp/snmpd.conf /etc/snmpd.conf"
				$(which sysrc) snmptrapd_enable=YES
				$(which sysrc) snmptrapd_flags="-a -p /var/run/snmptrapd.pid"
				/usr/local/etc/rc.d/snmpd start
				$(which snmpwalk) -v 2c -c public 127.0.0.1
				if [ $? -eq 0 ]; then
				     clear
				     echo "Successfully configured snmp server"
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     clear
				     echo "Not configured snmp server, check command syntax"
				     read -p "Press [enter] to continue..." ReadDamKey
				     snmp_menu
				fi
			   else
			        $(which uname) | grep Darwin >> /dev/null
				if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to continue..." ReadDamKey
				     snmp_menu
				fi
			   fi
		      fi
                      ;;
	    start)
		    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
                              echo "OS = Red Hat"
                              echo "        COMMAND STATUS         "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) snmpd start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting SNMP server"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) snmpd start
                              if [ $? -eq 0 ]; then
				   echo "################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              else
				   echo "#########################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started snmpd, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "#########################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              fi
		         else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
				   echo "OS = Debian"
				   echo "        COMMAND STATUS         "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                 Type"
				   echo "-----------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) snmpd start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting SNMP server"
				   sleep 1
				   update_spinner
				   sleep 1
				   $(which service) snmpd start
				   if [ $? -eq 0 ]; then
                                        echo "################################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "################################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
			           else
                                        echo "#########################################" >> /var/log/smx-log/fail.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					echo "[$(date)] Not started snmpd, check command syntax" >> /var/log/smx-log/fail.log
					echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/fail.log
					echo "" >> /var/log/smx-log/fail.log
					echo "#########################################" >> /var/log/smx-log/fail.log
					echo "" >> /var/log/smx-log/fail.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/fail.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   fi
                              else
				   clear
				   cat /proc/version | grep "Ubuntu" >> /dev/null
				   if [ $? -eq 0 ]; then
				        clear
					echo "OS = Ubuntu"
					echo "        COMMAND STATUS         "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) snmpd start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting SNMP server"
					sleep 1
					update_spinner
					sleep 1
					$(which service) snmpd start
					if [ $? -eq 0 ]; then
                                             echo "################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                			else
                			     echo "#########################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not started snmpd, check command syntax" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "#########################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
				        fi
				   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
                                             echo "OS = SuSE"
				             echo "        COMMAND STATUS         "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) snmpd start"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Starting SNMP server"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             $(which service) snmpd start
                                             if [ $? -eq 0 ]; then
						  echo "################################################" >> /var/log/smx-log/success.log
						  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						  echo "[$(date)] Successfuly started snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
						  echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  echo "################################################" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  read -p "Press [enter] to continue..." ReadDamKey
						  clear
						  echo
						  cat /var/log/smx-log/success.log | tail -n 7
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
                                             else
				                  echo "#########################################" >> /var/log/smx-log/fail.log
                    			          echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						  echo "[$(date)] Not started snmpd, check command syntax" >> /var/log/smx-log/fail.log
						  echo "[$(date)] Command run: $(which service) snmpd start" >> /var/log/smx-log/fail.log
						  echo "" >> /var/log/smx-log/fail.log
						  echo "#########################################" >> /var/log/smx-log/fail.log
						  echo "" >> /var/log/smx-log/fail.log
						  read -p "Press [enter] to continue..." ReadDamKey
						  clear
						  echo
						  cat /var/log/smx-log/fail.log | tail -n 7
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
					     fi
					fi
            			   fi
            		      fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "OS = BSD"
			      echo "         COMMAND STATUS                    "
			      echo
			      echo "$(date)                                     $(whoami)@$(hostname)"
			      echo
			      echo "Command: RUNNING    stdout: yes    stderr: no     "
			      echo
			      echo "Before command completion, additional instructions may appear below"
			      echo
			      echo "File                                 Fileset                 Type"
			      echo "-----------------------------------------------------------------"
			      echo "/etc/rc.d/snmpd                      bos.sysmgt.snmpd        exec"
			      echo "Command run: /etc/rc.d/snmpd start"
			      update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting SNMP server"
                              sleep 1
                              update_spinner
                              sleep 1
			      /etc/rc.d/snmpd start
			      if [ $? -eq 0 ]; then
				   echo "#########################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfully started snmp server" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: /etc/rc.d/snmpd start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "#########################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      else
				   echo "#########################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started snmp server, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: /etc/rc.d/snmpd start" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "#########################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      fi
			 else
			      $(which uname) | grep Darwin >> /dev/null
			      if [ $? -eq 0 ]; then
				   clear
				   echo "Feature not avaliable for OS X"
				   read -p "Press [enter] to continue..." ReadDamKey
				   snmp_menu
			      fi
			 fi
		    fi
                    ;;
            stop)
                   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /proc/version | grep "Red Hat" >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Red Hat"
                             echo "           COMMAND STATUS             "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) snmpd stop"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping SNMP server"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) snmpd stop
                             if [ $? -eq 0 ]; then
				  echo "####################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped snmp on system: $(hostname)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "####################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             else
				  echo "#############################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped snmp on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "#############################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             fi         
			else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
				  echo "OS = Debian"
				  echo "           COMMAND STATUS             "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) snmpd stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping SNMP server"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) snmpd stop
				  if [ $? -eq 0 ]; then
                                       echo "####################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped snmp on system: $(hostname)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "####################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       echo "#############################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not stopped snmp on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       echo "#############################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  fi     
                             else
				  clear
				  cat /proc/version | grep "Ubuntu" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "           COMMAND STATUS             "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) snmpd stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping SNMP server"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) snmpd stop
                                       if [ $? -eq 0 ]; then
					    echo "####################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped snmp on system: $(hostname)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "####################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       else
					    echo "#############################################################" >> /var/log/smx-log/fail.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Not stopped snmp on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/fail.log
					    echo "" >> /var/log/smx-log/fail.log
					    echo "#############################################################" >> /var/log/smx-log/fail.log
					    echo "" >> /var/log/smx-log/fail.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/fail.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       fi
				  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = SuSE"
					    echo "           COMMAND STATUS             "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) snmpd stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping SNMP server"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) snmpd stop
					    if [ $? -eq 0 ]; then
						 echo "####################################################" >> /var/log/smx-log/success.log
						 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						 echo "[$(date)] Successfuly stopped snmp on system: $(hostname)" >> /var/log/smx-log/success.log
						 echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 echo "####################################################" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 read -p "Press [enter] to continue..." ReadDamKey
						 clear
						 echo
						 cat /var/log/smx-log/success.log | tail -n 7
						 echo
						 read -p "Press [enter] to continue..." ReadDamKey
					    else
						 echo "#############################################################" >> /var/log/smx-log/fail.log
						 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						 echo "[$(date)] Not stopped snmp on system: $(hostname), check command syntax" >> /var/log/smx-log/fail.log
						 echo "[$(date)] Command run: $(which service) snmpd stop" >> /var/log/smx-log/fail.log
						 echo "" >> /var/log/smx-log/fail.log
						 echo "#############################################################" >> /var/log/smx-log/fail.log
						 echo "" >> /var/log/smx-log/fail.log
						 read -p "Press [enter] to continue..." ReadDamKey
						 echo
						 cat /var/log/smx-log/fail.log | tail -n 7
						 echo
						 read -p "Press [enter] to continue..." ReadDamKey
					    fi
                                       fi
				  fi 
                             fi
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
		        if [ $? -eq 0 ]; then
			     clear
			     echo "OS = BSD"
			     echo "         COMMAND STATUS             "
			     echo
			     echo "$(date)                                     $(whoami)@$(hostname)"
			     echo
			     echo "Command: RUNNING    stdout: yes    stderr: no     "
			     echo
			     echo "Before command completion, additional instructions may appear below"
			     echo
			     echo "File                                 Fileset                 Type"
			     echo "-----------------------------------------------------------------"
			     echo "/etc/rc.d/snmpd                      bos.sysmgt.snmpd        exec"
			     echo "Command run: /etc/rc.d/snmpd stop"
			     update_spinner
			     sleep 1
			     update_spinner
			     echo "Stopping SNMP server"
			     sleep 1
			     update_spinner
			     sleep 1
			     /etc/rc.d/snmpd stop
			     if [ $? -eq 0 ]; then
				  echo "##################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfully stopped snmp server" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: /etc/rc.d/snmpd stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "##################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else
				  echo "#######################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped snmp server, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: /etc/rc.d/snmpd stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "#######################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     fi
			else
			     $(which uname) | grep Darwin >> /dev/null
			     if [ $? -eq 0 ]; then
				  clear
				  echo "Feature not avaliable for OS X"
				  read -p "Press [enter] to continue..." ReadDamKey
				  snmp_menu
			     fi
			fi
		   fi
                   ;;
            restart)
                      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "             COMMAND STATUS                "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) snmpd restart"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting SNMP server"
				sleep 1
				update_spinner
				sleep 1
				$(which service) snmpd restart
				if [ $? -eq 0 ]; then
                                     echo "###############################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted snmpd" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "###############################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo "#################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not restarted snmpd, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "#################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				fi          
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "           COMMAND STATUS                 "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                  Fileset                Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) snmpd restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting SNMP server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) snmpd restart
                                     if [ $? -eq 0 ]; then
					  echo "##################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "##################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo "#####################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Not restarted snmpd, check command syntax" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  echo "#####################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     fi        
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "           COMMAND STATUS                 "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                  Fileset                Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) snmpd restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting SNMP server"
					  sleep 1
					  update_spinner
					  sleep 1
					  /etc/init.d/snmpd restart
					  if [ $? -eq 0 ]; then
                                               echo "##################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "##################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               echo "#####################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not restarted snmpd, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "#####################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "           COMMAND STATUS                 "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                  Fileset                Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) snmpd restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting SNMP server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               /etc/init.d/snmpd restart
                                               if [ $? -eq 0 ]; then
                                                    echo "##################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly restarted snmpd on system: $(hostname)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "##################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               else
                                                    echo "#####################################################" >> /var/log/smx-log/fail.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Not restarted snmpd, check command syntax" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Command run: $(which service) snmpd restart" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    echo "#####################################################" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/fail.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               fi
					  fi
                                     fi
				fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS                 "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "/etc/rc.d/snmpd                      bos.sysmgt.snmpd        exec"
				echo "Command run: /etc/rc.d/snmpd restart"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting SNMP server"
                                sleep 1
                                update_spinner
                                sleep 1
				/etc/rc.d/snmpd restart
				if [ $? -eq 0 ]; then
				     echo "########################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully restarted snmp server" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /etc/rc.d/snmpd restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "########################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "#########################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not restarted snmp server, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /etc/rc.d/snmpd restart" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "#########################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to conitnue..." ReadDamKey
				fi
			   else
			        $(which uname) | grep Darwin >> /dev/null
				if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to continue..." ReadDamKey
				     snmp_menu
				fi
			   fi
		      fi
                      ;;
            snmptest)
                       clear
                       echo "$(date)                                    $(whoami)@$(hostname)"
                       echo "[TOP]                                            [Entry Fields]"
                       printf " Enter SNMP server address [127.0.0.1] -------- > "
                       if [ "$snmpServer" = "" ]; then
                             SNMP_SERVER=""
                             read snmpServer
                             SNMP_SERVER=$snmpServer
                       fi
                       if [ "$snmpServer" = "" ]; then
                             SNMP_SERVER=""
                             SNMP_SERVER=127.0.0.1
                       fi 
                       printf " Enter SNMP community string [public] --------- > "
                       if [ "$snmpString" = "" ]; then
                             SNMP_STRING=""
                             read snmpString
                             SNMP_STRING=$snmpString
                       fi
                       if [ "$snmpString" = "" ]; then
                             SNMP_STRING=""
                             SNMP_STRING=public
                       fi               
                       clear
                       echo "          COMMAND STATUS                "
                       echo
                       echo "$(date)                                    $(whoami)@$(hostname)"
                       echo
                       echo "Command: RUNNING    stdout: yes    stderr: no    "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "File                                 Fileset                 Type"
                       echo "-----------------------------------------------------------------"
                       echo "$(which snmpwalk)                    bos.sysmgt.snmpwalk     exec"
                       echo "Command run: $(which snmpwalk) -v 1 -c $SNMP_STRING -O e $SNMP_SERVER | $(which tee) /var/log/smx-log/snmp.log"
                       update_spinner
                       sleep 1
                       update_spinner
                       echo "Testing SNMP server: $SNMP_SERVER with string: $SNMP_STRING"
                       sleep 1
                       update_spinner
                       sleep 1
                       $(which snmpwalk) -v 1 -c $SNMP_STRING -O e $SNMP_SERVER | $(which tee) /var/log/smx-log/snmp.log
                       if [ $PIPESTATUS -eq 0 ]; then
                            echo "##############################################################################################################" >> /var/log/smx-log/success.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                            echo "[$(date)] Successfuly tested snmp server: $SNMP_SERVER" >> /var/log/smx-log/success.log
                            echo "[$(date)] Command run: $(which snmpwalk) -v 1 -c $SNMP_STRING -O e $SNMP_SERVER | $(which tee) /var/log/smx-log/snmp.log" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            echo "##############################################################################################################" >> /var/log/smx-log/success.log
                            echo "" >> /var/log/smx-log/success.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       else
                            echo "###############################################################################################################" >> /var/log/smx-log/fail.log
                            echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Not tested snmp server: $SNMP_SERVER, check command syntax" >> /var/log/smx-log/fail.log
                            echo "[$(date)] Command run: $(which snmpwalk) -v 1 -c $SNMP_STRING -O e $SNMP_SERVER | $(which tee) /var/log/smx-log/snmp.log" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            echo "###############################################################################################################" >> /var/log/smx-log/fail.log
                            echo "" >> /var/log/smx-log/fail.log
                            read -p "Press [enter] to continue..." ReadDamKey
                            clear
                            echo
                            cat /var/log/smx-log/success.log | tail -n 7
                            echo
                            read -p "Press [enter] to continue..." ReadDamKey
                       fi
                       ;;
            help)
                   echo "install > Install SNMP on system"
                   echo "start > Start SNMP service"
                   echo "stop > Stop SNMP service"
                   echo "restart > Restart SNMP service"
                   echo "snmptest > Perform test on SNMP server"
                   echo "help > This program"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;           
            exit)
                   clear
                   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/snmp_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
            exit-mas)
                       clear
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated $(basename $0)" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "        COMMAND STATUS        "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no        "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 7685 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function dns_menu() {
    while :
    do
        clear
        echo "$(date)                                     $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname) # " choice_dns
        echo
    
        case "$choice_dns" in
            install)
                      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			    cat /proc/version | grep "Red Hat" >> /dev/null
			    if [ $? -eq 0 ]; then           
				 clear
				 echo "OS = Red Hat"
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo "Domain name example: example.local"
				 echo "Nameserver address example: 192.168.1.1"
				 echo "Email contact example: root.exaple.local"
				 echo "Hostname example: ns1"
				 echo "Full qualified domain name: ns1.example.local"
				 echo "[TOP]                                     [Entry Fields]"
				 read -p " Enter domain name --------------------- > " domainName
				 read -p " Enter nameserver address -------------- > " dnsSrvAddr
				 read -p " Enter email contact ------------------- > " emailAddr
				 read -p " Enter hostname ------------------------ > " hostAddr
			         read -p " Enter fully qualified domain name ----- > " fqdnName
				 printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
				 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       read netIntf
                                       NETINTF=$netIntf
				 fi
				 if [ "$netIntf" = "" ]; then
                                       NETINTF=""
                                       NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
				 fi
				 printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] > "
				 if [ "$ipAddr" = "" ]; then
                                       IP_ADDR=""
                                       read ipAddr
                                       IP_ADDR=$ipAddr
				 fi
				 if [ "$ipAddr" = "" ]; then
                                       IP_ADDR=""
                                       IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
				 fi
				 # Check for existing .zone files in /var/named - may create problems with creating new domains
				 $(which find) '/var/named/$domainName.zone' >> /dev/null
				 if [ $? -eq 0 ]; then
                                      rm /var/named/$domainName.zone
				 fi     
				 clear
				 echo "           COMMAND STATUS           "
				 echo
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo
				 echo "Command: RUNNING    stdout: yes    stderr: no     "
				 echo
				 echo "Before command completion, additional instructions may appear below"
				 echo
				 echo "File                                 Fileset                 Type"
				 echo "-----------------------------------------------------------------"
				 echo "$(which yum)                         bos.pkgmgt.yum          exec"
				 echo "$(which sed)                         bos.sysmgt.sed          exec"
				 echo "$(which service)                     bos.sysmgt.service      exec"
				 echo "$(which rndc)                        bos.sysmgt.rndc         exec"
				 echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
				 echo "Command run: $(which yum) -y install bind bind-utils bind-chroot | $(which tee) /var/log/smx-log/yum.log"
				 echo "Command run: $(which service) named start"
				 echo "Command run: $(which rndc) reload"
				 echo "Command run: $(which chkconfig) named on"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Installing BIND on system"
				 sleep 1
				 update_spinner
				 sleep 1 
				 $(which yum) -y install bind bind-utils bind-chroot | $(which tee) /var/log/smx-log/yum.log
				 if [ $PIPESTATUS -eq 0 ]; then
                                      echo "########################################################################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly installed BIND on system" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which yum) -y install bind bind-utils bind-chroot | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "########################################################################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
				 else
                                      echo "########################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not installed BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which yum) -y install bind bind-utils bind-chroot | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "########################################################################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      exit 1
				 fi
				 $(which sed) -i 's/listen-on port 53/#listen-on port 53/g' /etc/named.conf
				 $(which sed) -i 's/localhost/any/g' /etc/named.conf
				 $(which sed) -i 's/recursion yes/recursion no/g' /etc/named.conf
				 echo "" >> /etc/named.conf
				 echo 'zone "'$domainName'" IN {' >> /etc/named.conf
				 echo "     type master;" >> /etc/named.conf
				 echo '     file "'$domainName.zone'";' >> /etc/named.conf
				 echo "     allow-update { none; };" >> /etc/named.conf
				 echo "};" >> /etc/named.conf
				 echo '$TTL 86400' >> /var/named/$domainName.zone
				 echo "@    IN    SOA    $fqdnName. $emailAddr. (" >> /var/named/$domainName.zone
				 echo "           2015653402      ;Serial" >> /var/named/$domainName.zone
				 echo "           3600            ;Refresh" >> /var/named/$domainName.zone
				 echo "           1800            ;Retry" >> /var/named/$domainName.zone
				 echo "           604800          ;Expire" >> /var/named/$domainName.zone
				 echo "           86400           ;Minimum TTL" >> /var/named/$domainName.zone
				 echo ")" >> /var/named/$domainName.zone
				 echo "; Specify nameservers" >> /var/named/$domainName.zone
				 echo "          IN    NS    $dnsSrvAddr." >> /var/named/$domainName.zone
				 echo "" >> /var/named/$domainName.zone
				 echo "; Resolve nameserver hostnames to IP" >> /var/named/$domainName.zone
				 echo "$hostAddr    IN    A    $IP_ADDR" >> /var/named/$domainName.zone
				 echo "" >> /var/named/$domainName.zone
				 echo "; Define hostnames to IP" >> /var/named/$domainName.zone
				 $(which service) named start
				 if [ $? -eq 0 ]; then
			              echo
                                      echo "BIND started, reloading zone files..."
                                      echo
                                      $(which rndc) reload
                                      $(which chkconfig) named on
                                      read -p "Press [enter] to continue..." ReadDamKey
				 else
			              echo
                                      echo "BIND not started, zone files not reloaded"
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
				 fi     
			    else
				 clear
				 cat /proc/version | grep "Debian" >> /dev/null
				 if [ $? -eq 0 ]; then
                                      clear
                                      echo "OS = Debian"
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo "Domain name example: example.local"
                                      echo "Reverse IP address example: 1.0.168.192"
                                      echo "Enter nameserver address example: 192.168.0.1"
                                      echo "Enter email contact: root.example.local"
                                      echo "Enter hostname example: ns1"
                                      echo "[TOP]                                      [Entry Fields]"
                                      read -p " Enter domain name --------------------- > " domainName
                                      read -p " Enter reverse IP address -------------- > " reverseIPAddr
                                      read -p " Enter nameserver address -------------- > " dnsSrvAddr
                                      read -p " Enter email contact ------------------- > " emailAddr
                                      read -p " Enter hostname ------------------------ > " hostName
                                      printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                      if [ "$netIntf" = "" ]; then
					    NETINTF=""
					    read netIntf
					    NETINTF=$netIntf
                                      fi
                                      if [ "$netIntf" = "" ]; then
					    NETINTF=""
					    NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                      fi
                                      printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] > "
                                      if [ "$ipAddr" = "" ]; then
					    IP_ADDR=""
					    read ipAddr
					    IP_ADDR=$ipAddr
                                      fi
                                      if [ "$ipAddr" = "" ]; then
					    IP_ADDR=""
					    IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                      fi
                                      clear
                                      echo "          COMMAND STATUS         "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                          Type"
                                      echo "--------------------------------------------------------------------------"
                                      echo "$(which apt-get)                     bos.pkgmgt.apt-get               exec"
                                      echo "$(which named-checkconf)             bos.sysmgt.named-checkconf       exec"
                                      echo "$(which service)                     bos.sysmgt.service      exec"
                                      echo "Command run: $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log"
                                      echo "Command run: $(which named-checkconf) /etc/bind/named.conf.local"
                                      echo "Command run: $(which service) bind9 restart"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Installing BIND on system"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log
                                      if [ $PIPESTATUS -eq 0 ]; then
					   echo "########################################################################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly installed BIND on system" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "########################################################################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   echo "########################################################################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Not installed BIND on system, check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "########################################################################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   clear
					   echo
					   cat /var/log/smx-log/fail.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
					   exit 1
                                      fi
                                      echo 'zone "'$domainName'" {' >> /etc/bind/named.conf.local
                                      echo "          type master;" >> /etc/bind/named.conf.local
                                      echo '          file "/etc/bind/for.$domainName";' >> /etc/bind/named.conf.local
                                      echo "};" >> /etc/bind/named.conf.local
                                      echo "" >> /etc/bind/named.conf.local
                                      echo 'zone      "'$reverseIPAddr.in-addr.arpa'"    {' >> /etc/bind/named.conf.local
                                      echo "          type master;" >> /etc/bind/named.conf.local
                                      echo 'file      "/etc/bind/rev.$domainName";' >> /etc/bind/named.conf.local
                                      echo "};" >> /etc/bind/named.conf.local
                                      cp /etc/bind/db.local /etc/bind/for.$domainName
                                      echo ";" >> /etc/bind/for.$domainName
                                      echo "; BIND data file for forward.$domainName zone" >> /etc/bind/for.$domainName
                                      echo ";" >> /etc/bind/for.$domainName
                                      echo '$TTL    604800' >> /etc/bind/for.$domainName
                                      echo "@    IN    SOA    $dnsSrvAddr. $emailAddr." >> /etc/bind/for.$domainName
                                      echo "2015342309 ;Serial" >> /etc/bind/for.$domainName
                                      echo "604800 ;Refresh" >> /etc/bind/for.$domainName
                                      echo "86400 ;Retry" >> /etc/bind/for.$domainName
                                      echo "2419200 ;Expire" >> /etc/bind/for.$domainName
                                      echo "604800 ) ;Negative Cache TTL" >> /etc/bind/for.$domainName
                                      echo "        IN    A    $IP_ADDR" >> /etc/bind/for.$domainName
                                      echo "" >> /etc/bind/for.$domainName
                                      echo ";" >> /etc/bind/for.$domainName
                                      echo "@    IN    NS    $dnsSrvAddr." >> /etc/bind/for.$domainName
                                      echo "$hostName    IN    A    $IP_ADDR" >> /etc/bind/for.$domainName
                                      cp /etc/bind/db.127 /etc/bind/rev.$domainName
                                      echo ";" >> /etc/bind/rev.$domainName
                                      echo "; BIND reverse data file for rev.$domainName" >> /etc/bind/rev.$domainName
                                      echo ";" >> /etc/bind/rev.$domainName
                                      echo '$TTL 604800' >> /etc/bind/rev.$domainName
                                      echo "@    IN    SOA    $dnsSrvAddr. $emailAddr. (" >> /etc/bind/rev.$domainName
                                      echo "2015342309 ;Serial" >> /etc/bind/rev.$domainName
                                      echo "604800 ;Retry" >> /etc/bind/rev.$domainName
                                      echo "2419200 ;Expire" >> /etc/bind/rev.$domainName
                                      echo "604800 ) ;Negative Cache TTL" >> /etc/bind/rev.$domainName
                                      echo "@    IN    NS    $hostName." >> /etc/bind/rev.$domainName
                                      echo "@    IN    A     $IP_ADDR." >> /etc/bind/rev.$domainName
                                      echo "200  IN    PTR   $dnsSrvAddr." >> /etc/bind/rev.$domainName
                                      $(which named-checkconf) /etc/bind/named.conf.local
                                      $(which service) bind9 restart
                                      if [ $? -eq 0 ]; then
					   echo "BIND Successfuly started..."
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   echo "BIND not started, check error logs..."
					   read -p "Press [enter] to continue..." ReadDamKey
                                      fi
				 else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo "Domain name example: example.local"
					  echo "Reverse IP address example: 1.0.168.192"
					  echo "Enter nameserver address example: 192.168.0.1"
					  echo "Enter email contact: root.example.local"
					  echo "Enter hostname example: ns1"
					  echo "[TOP]                                      [Entry Fields]"
					  read -p " Enter domain name --------------------- > " domainName
					  read -p " Enter reverse IP address -------------- > " reverseIPAddr
					  read -p " Enter nameserver address -------------- > " dnsSrvAddr
					  read -p " Enter email contact ------------------- > " emailAddr
					  read -p " Enter hostname ------------------------ > " hostName
					  printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
					  if [ "$netIntf" = "" ]; then
                                                NETINTF=""
						read netIntf
						NETINTF=$netIntf
					  fi
					  if [ "$netIntf" = "" ]; then
                                                NETINTF=""
						NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
					  fi
					  printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] > "
					  if [ "$ipAddr" = "" ]; then
                                                IP_ADDR=""
						read ipAddr
						IP_ADDR=$ipAddr
					  fi
					  if [ "$ipAddr" = "" ]; then
                                                IP_ADDR=""
						IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
					  fi
					  clear
					  echo "          COMMAND STATUS         "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                          Type"
					  echo "--------------------------------------------------------------------------"
					  echo "$(which apt-get)                     bos.pkgmgt.apt-get               exec"
					  echo "$(which named-checkconf)             bos.sysmgt.named-checkconf       exec"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log"
					  echo "Command run: $(which named-checkconf) /etc/bind/named.conf.local"
					  echo "Command run: $(which service) bind9 restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Installing BIND on system"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log
					  if [ $PIPESTATUS -eq 0 ]; then
                                               echo "########################################################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly installed BIND on system" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "########################################################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               echo "########################################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not installed BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which apt-get) -y install bind9 bind9utils bind9-doc dnsutils | $(which tee) /var/log/smx-log/apt-get.log" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "########################################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
					  fi
					  echo 'zone      "'$domainName'"     {' >> /etc/bind/named.conf.local
					  echo "          type master;" >> /etc/bind/named.conf.local
					  echo '          file "/etc/bind/for.$domainName";' >> /etc/bind/named.conf.local
					  echo "};" >> /etc/bind/named.conf.local
					  echo "" >> /etc/bind/named.conf.local
					  echo 'zone      "'$reverseIPAddr.in-addr.arpa'"    {' >> /etc/bind/named.conf.local
					  echo "          type master;" >> /etc/bind/named.conf.local
					  echo 'file      "/etc/bind/rev.$domainName";' >> /etc/bind/named.conf.local
					  echo "};" >> /etc/bind/named.conf.local
					  cp /etc/bind/db.local /etc/bind/for.$domainName
					  echo ";" >> /etc/bind/for.$domainName
					  echo "; BIND data file for forward.$domainName zone" >> /etc/bind/for.$domainName
					  echo ";" >> /etc/bind/for.$domainName
					  echo '$TTL    604800' >> /etc/bind/for.$domainName
					  echo "@    IN    SOA    $dnsSrvAddr. $emailAddr." >> /etc/bind/for.$domainName
					  echo "2015342309 ;Serial" >> /etc/bind/for.$domainName
					  echo "604800 ;Refresh" >> /etc/bind/for.$domainName
					  echo "86400 ;Retry" >> /etc/bind/for.$domainName
					  echo "2419200 ;Expire" >> /etc/bind/for.$domainName
					  echo "604800 ) ;Negative Cache TTL" >> /etc/bind/for.$domainName
					  echo "        IN    A    $IP_ADDR" >> /etc/bind/for.$domainName
					  echo "" >> /etc/bind/for.$domainName
					  echo ";" >> /etc/bind/for.$domainName
					  echo "@    IN    NS    $dnsSrvAddr." >> /etc/bind/for.$domainName
					  echo "$hostName    IN    A    $IP_ADDR" >> /etc/bind/for.$domainName
					  cp /etc/bind/db.127 /etc/bind/rev.$domainName
					  echo ";" >> /etc/bind/rev.$domainName
					  echo "; BIND reverse data file for rev.$domainName" >> /etc/bind/rev.$domainName
					  echo ";" >> /etc/bind/rev.$domainName
					  echo '$TTL 604800' >> /etc/bind/rev.$domainName
					  echo "@    IN    SOA    $dnsSrvAddr. $emailAddr. (" >> /etc/bind/rev.$domainName
					  echo "2015342309 ;Serial" >> /etc/bind/rev.$domainName
					  echo "604800 ;Retry" >> /etc/bind/rev.$domainName
					  echo "2419200 ;Expire" >> /etc/bind/rev.$domainName
					  echo "604800 ) ;Negative Cache TTL" >> /etc/bind/rev.$domainName
					  echo "@    IN    NS    $hostName." >> /etc/bind/rev.$domainName
					  echo "@    IN    A     $IP_ADDR." >> /etc/bind/rev.$domainName
					  echo "200  IN    PTR   $dnsSrvAddr." >> /etc/bind/rev.$domainName
					  $(which named-checkconf) /etc/bind/named.conf.local
					  $(which service) bind9 restart
					  if [ $? -eq 0 ]; then
                                               echo "BIND Successfuly started..."
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               echo "BIND not started, check error logs..."
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "IP address range (With CIDR notation) example: 192.168.1.0/24"
                                               echo "Domain name example: example.local"
                                               echo "Nameserver server address example: 192.168.1.1"
                                               echo "Email contact exaple: root.example.local"
                                               echo "Enter hostname example: ns1"
                                               echo "Fully qualified domain name example: ns1.example.local"
                                               echo "Reverse IP address example: 1.1.168.192"
                                               echo "[TOP]                                               [Entry Fields]"
                                               read -p " Enter IP address range (with CIDR notation) ---- > " ipRange
                                               read -p " Enter domain name ------------------------------ > " domainName
                                               read -p " Enter nameserver address ----------------------- > " dnsSrvAddr
                                               read -p " Enter email contact ---------------------------- > " emailAddr
                                               read -p " Enter hostname --------------------------------- > " hostAddr
                                               read -p " Enter fully qualified domain name -------------- > " fqdnName
                                               read -p " Enter reverse IP address ----------------------- > " reverseIPAddr
                                               printf " Enter network interface [$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)] > "
                                               if [ "$netIntf" = "" ]; then
                                                     NETINTF=""
						     read netIntf
						     NETINTF=$netIntf
                                               fi
                                               if [ "$netIntf" = "" ]; then
                                                     NETINTF=""
                                                     NETINTF=$(route -n | grep "^0.0.0.0" | rev | cut -d' ' -f1 | rev)
                                               fi
                                               printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] > "
                                               if [ "$ipAddr" = "" ]; then
                                                     IP_ADDR=""
                                                     read ipAddr
                                                     IP_ADDR=$ipAddr
                                               fi
                                               if [ "$ipAddr" = "" ]; then
                                                     IP_ADDR=""
                                                     IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                               fi
                                               # Check for existing .zone files in /var/named - may create problems with creating new/existing domains for test installs
                                               # for OpenSuSE remove /etc/named.conf - will be recreated during installation
                                               $(which find) '/etc/named.conf' >> /dev/null
                                               if [ $? -eq 0 ]; then
						    cp /etc/named.conf /etc/named.conf.org
						    rm /etc/named.conf
                                               fi     
                                               $(which find) '/var/lib/named/for.$domainName' >> /dev/null
                                               if [ $? -eq 0 ]; then
						    rm /var/lib/named/for.$domainName
                                               fi
                                               $(which find) '/var/lib/named/rev.$domainName' >> /dev/null
                                               if [ $? -eq 0 ]; then
						    rm /var/lib/named/rev.$domainName
                                               fi     
                                               clear
                                               echo "           COMMAND STATUS              "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                        Type"
                                               echo "------------------------------------------------------------------------"
                                               echo "$(which zypper)                      bos.pkgmgt.zypper              exec"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "$(which chkconfig)                   bos.sysmgt.chkconfig           exec"
                                               echo "$(which named-checkconf)             bos.sysmgt.named-checkconf     exec"
                                               echo "$(which named-checkzone)             bos.sysmgt.named-checkzone     exec"
                                               echo "Command run: $(which zypper) in -y bind | $(which tee) /var/log/smx-log/zypper.log"
                                               echo "Command run: $(which service) named start"
                                               echo "Command run: $(which chkconfig) named on"
                                               echo "Command run: $(which named-checkconf) /etc/named.conf"
                                               echo "Command run: $(which named-checkzone) $domainName /var/lib/named/for.$domainName"
                                               echo "Command run: $(which named-checkzone) $domainName /var/lib/named/rev.$domainName"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Installing BIND on system"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which zypper) in -y bind | $(which tee) /var/log/smx-log/zypper.log
                                               if [ $PIPESTATUS -eq 0 ]; then
						    echo "##################################################################################" >> /var/log/smx-log/success.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Successfuly installed bind on system" >> /var/log/smx-log/success.log
						    echo "[$(date)] Command run: $(which zypper) in -y bind | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    echo "##################################################################################" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    clear
						    echo
						    cat /var/log/smx-log/success.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
                                               else
						    echo "##################################################################################" >> /var/log/smx-log/fail.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Not installed bind on system, check command syntax" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Command run: $(which zypper) in -y bind | $(which tee) /var/log/smx-log/zypper.log" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    echo "##################################################################################" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    clear
						    echo
						    cat /var/log/smx-log/fail.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
						    exit 1
                                               fi
                                               # Check for existing .zone files in /var/named - may create problems with creating new/existing domains for test installs
                                               # for OpenSuSE remove /etc/named.conf - will be recreated during installation
                                               $(which find) '/etc/named.conf' >> /dev/null
                                               if [ $? -eq 0 ]; then
						    cp /etc/named.conf /etc/named.conf.org
						    rm /etc/named.conf
                                               fi     
                                               $(which find) '/var/lib/named/for.$domainName' >> /dev/null
                                               if [ $? -eq 0 ]; then
						    rm /var/lib/named/for.$domainName
                                               fi
                                               $(which find) '/var/lib/named/rev.$domainName' >> /dev/null
                                               if [ $? -eq 0 ]; then
						    rm /var/lib/named/rev.$domainName
                                               fi
                                               echo "options {" >> /etc/named.conf
                                               echo '     directory "/var/lib/named";' >> /etc/named.conf
                                               echo '     dump-file "/var/log/named_dump.db";' >> /etc/named.conf
                                               echo '     statistics-file "/var/log/named.stats";' >> /etc/named.conf
                                               echo "     allow-query { localhost; $ipRange;};" >> /etc/named.conf
                                               echo "};" >> /etc/named.conf
                                               echo "" >> /etc/named.conf
                                               echo 'zone "'$domainName'"   {' >> /etc/named.conf
                                               echo "       type master;" >> /etc/named.conf
                                               echo 'file   "'for.$domainName'";' >> /etc/named.conf
                                               echo "};" >> /etc/named.conf
                                               echo "" >> /etc/named.conf
                                               echo 'zone "'$reverseIPAddr.in-addr.arpa'"    {' >> /etc/named.conf
                                               echo "     type master;" >> /etc/named.conf
                                               echo '     file "'rev.$domainName'";' >> /etc/named.conf
                                               echo "};" >> /etc/named.conf
                                               echo '$TTL    604800' >> /var/lib/named/for.$domainName
                                               echo "@    IN    SOA    $fqdnName $emailAddr (" >> /var/lib/named/for.$domainName
                                               echo "2015342012 ; Serial" >> /var/lib/named/for.$domainName
                                               echo "604800     ; Retry" >> /var/lib/named/for.$domainName
                                               echo "2419200    ; Expire" >> /var/lib/named/for.$domainName
                                               echo "604800 )     ; Negative Cache TTL" >> /var/lib/named/for.$domainName
                                               echo "         IN    A    $IP_ADDR" >> /var/lib/named/for.$domainName
                                               echo "" >> /var/lib/named/for.$domainName
                                               echo "@    IN    NS    $hostAddr." >> /var/lib/named/for.$domainName
                                               echo "@    IN    NS    $IP_ADDR" >> /var/lib/named/for.$domainName
                                               echo "$hostAddr  IN    A    $IP_ADDR" >> /var/lib/named/for.$domainName
                                               echo '$TTL    604800' >> /var/lib/named/rev.$domainName
                                               echo "@    IN    SOA    $fqdnName $emailAddr (" >> /var/lib/named/rev.$domainName
                                               echo "2015342012 ; Serial" >> /var/lib/named/rev.$domainName
                                               echo "604800     ; Retry" >> /var/lib/named/rev.$domainName
                                               echo "2419200    ; Expire" >> /var/lib/named/rev.$domainName
                                               echo "604800 )     ; Negative Cache TTL" >> /var/lib/named/rev.$domainName
                                               echo "" >> /var/lib/named/rev.$domainName
                                               echo "@    IN    NS    $hostAddr." >> /var/lib/named/rev.$domainName
                                               echo "@    IN    NS    $IP_ADDR" >> /var/lib/named/rev.$domainName
                                               echo "$IP_ADDR    IN    PTR    $fqdnName." >> /var/lib/named/rev.$domainName
                                               $(which service) named start
                                               $(which chkconfig) named on
                                               $(which named-checkconf) /etc/named.conf
                                               $(which named-checkzone) $domainName /var/lib/named/for.$domainName
                                               $(which named-checkzone) $domainName /var/lib/named/rev.$domainName
					  fi
                                     fi
				 fi
			    fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
			        echo "OS = BSD"
			        echo "$(date)                                     $(whoami)@$(hostname)"
				echo "Host IP address example: x.x.x.100"
				echo "[TOP]                                               [Entry Fields]"
				read -p " Enter domain name ------------------------------ > " domainName
				read -p " Enter computer host IP address ----------------- > " hostIPAddr
                                read -p " Enter hostname --------------------------------- > " hostAddr
                                read -p " Enter fully qualified domain name -------------- > " fqdnName
                                read -p " Enter reverse IP address ----------------------- > " reverseIPAddr
				printf " Enter network interface [en0] ------------------- > "
				if [ "$netIntf" = "" ]; then
				      NET_INTF=""
				      read netIntf
				      NET_INTF=$netIntf
				fi
				if [ "$netIntf" = "" ]; then
				      NET_INTF=""
				      NET_INTF=en0
				fi
                                printf " Enter server IP address [$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')] ------------ > "
                                if [ "$ipAddr" = "" ]; then
                                      IP_ADDR=""
                                      read ipAddr
                                      IP_ADDR=$ipAddr
                                fi
                                if [ "$ipAddr" = "" ]; then
                                      IP_ADDR=""
                                      IP_ADDR=$(ifconfig $NETINTF | awk '/inet / { print $2 }' | sed 's/addr://')
                                fi
				clear
				echo "               COMMAND STATUS                  "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                        Type"
				echo "------------------------------------------------------------------------"
				echo "$(which make)                        bos.pkgmgt.make                exec"
				echo "$(which sysrc)                       bos.sysmgt.sysrc               exec"
				echo "$(which rndc-configen)               bos.sysmgt.rndf-configen       exec"
				echo "/usr/local/etc/rc.d/named            bos.sysmgt.named               exec"
				echo "$(which dig)                         bos.sysmgt.dig                 exec"
				echo "Command run: $(which make) -C /usr/ports/dns/bind99 install clean"
				echo "Command run: $(which sysrc) named_enable=YES"
				echo "Command run: $(which rndc-configen) -a"
				echo "Command run: /usr/local/etc/rc.d/named start"
				echo "Command run: $(which dig) google.com"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Installing BIND on system"
                                sleep 1
                                update_spinner
                                sleep 1
				$(which make) -C /usr/ports/dns/bind99 install clean
				if [ $? -eq 0 ]; then
				     echo "###########################################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully installed bind on system" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: $(which make) -C /usr/ports/dns/bind99 install clean" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "###########################################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "###########################################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not installed bind on system, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: $(which make) -C /usr/ports/dns/bind99 install clean" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "###########################################################################" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to conitnue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to conitnue..." ReadDamKey
				     exit 1
				fi
				mv /usr/local/etc/namedb/named.conf /usr/local/etc/namedb/named.conf.org
				echo 'zone "'$domainName'"   {' >> /usr/local/etc/namedb/named.conf
				echo "  type master;" >> /usr/local/etc/namedb/named.conf
				echo '  file "'master/$domainName'";' >> /usr/local/etc/namedb/named.conf
				echo "  allow-transfer { localhost; };" >> /usr/local/etc/namedb/named.conf
				echo "  allow-update { key rndc-key; };" >> /usr/local/etc/namedb/named.conf
				echo "};" >> /usr/local/etc/namedb/named.conf
				echo "" >> /usr/local/etc/namedb/named.conf
				echo 'zone "'$reverseIPAddr.in-addr.arpa'" {' >> /usr/local/etc/namedb/named.conf
				echo "  type master;" >> /usr/local/etc/namedb/named.conf
				echo '  file "'master/$domainName.rev'";' >> /usr/local/etc/namedb/named.conf
				echo "  allow-transfer { localhost; };" >> /usr/local/etc/namedb/named.conf
				echo "  allow-update { key rndc-key; };" >> /usr/local/etc/namedb/named.conf
				echo "};" >> /usr/local/etc/namedb/named.conf
				echo "" >> /usr/local/etc/namedb/named.conf
				$(which rndc-configen) -a
				cd /usr/local/etc/namedb/
				cat rndc.key >> named.conf
				echo '$TTL    3600' >> /usr/local/etc/namedb/master/$domainName
				echo "$domainName.    IN    SOA    $fqdnName. (" >> /usr/local/etc/namedb/master/$domainName
				echo "1 ; Serial" >> /usr/local/etc/namedb/master/$domainName
				echo "10800 ; Refresh" >> /usr/local/etc/namedb/master/$domainName
				echo "3600 ; Retry" >> /usr/local/etc/namedb/master/$domainName
				echo "604800 ; Expire" >> /usr/local/etc/namedb/master/$domainName
				echo "86400 ) ; Minumum TTL" >> /usr/local/etc/namedb/master/$domainName
				echo "" >> /usr/local/etc/namedb/master/$domainName
				echo "; DNS server(s)" >> /usr/local/etc/namedb/master/$domainName
				echo "$domainName    IN    NS    $fqdnName." >> /usr/local/etc/namedb/master/$domainName
				echo "" >> /usr/local/etc/namedb/master/$domainName
				echo "; Computer name and records" >> /usr/local/etc/namedb/master/$domainName
				echo "$fqdnName. IN    A    $IP_ADDR" >> /usr/local/etc/namedb/master/$domainName
				echo "" >> /usr/local/etc/namedb/master/$domainName
				echo "; Aliases" >> /usr/local/etc/namedb/master/$domainName
				echo "$hostName    IN    CNAME    $fqdnName." >> /usr/local/etc/namedb/master/$domainName
				echo "" >> /usr/local/etc/namedb/master/$domainName
				echo '$TTL    3600' >> /usr/local/etc/namedb/master/$domainName.rev
				echo "$reverseIPADDR.in-addr.arpa.    IN    SOA    $fqdnName (" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "  1 ; Serial" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "  10800 ; Refresh" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "  3600 ; Retry" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "  604800 ; Expire" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "  86400 ) ; Minimum TTL" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "; DNS Server(s)" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "$reverseIPAddr.    IN    NS    $fqdnName." >> /usr/local/etc/namedb/master/$domainName.rev
				echo "" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "; Computer IP addresse(s)" >> /usr/local/etc/namedb/master/$domainName.rev
				echo "$hostIPAddr     IN    PTR    $fqdnName." >> /usr/local/etc/namedb/master/$domainName.rev
				mv /etc/resolv.conf /etc/resolv.conf.org
				echo "domain $domainName" >> /etc/resolv.conf
				echo "nameserver $IP_ADDR" >> /etc/resolv.conf
				$(which sysrc) named_enable=YES
				/usr/local/etc/rc.d/named start
				if [ $? -eq 0 ]; then
				     echo
				     echo "named successfully started"
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo
				     echo "named not successfully started, check command syntax"
				     read -p "Press [enter] to continue..." ReadDamKey
				fi
			   else
			        $(which uname) | grep Darwin >> /dev/null
				if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to conitnue..." ReadDamKey
				     dns_menu
				fi
			   fi
		      fi
                      ;;
            start)
                    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" >> /dev/null
			 if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "        COMMAND STATUS          "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                 Type"
                              echo "-----------------------------------------------------------------"
                              echo "$(which service)                     bos.sysmgt.service      exec"
                              echo "Command run: $(which service) named start"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Starting BIND on system"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which service) named start
                              if [ $? -eq 0 ]; then
				   echo "####################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly started bind" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which service) named start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "####################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              else
				   echo "####################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started bind, check command syntax" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which system) named start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "####################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              fi          
			 else
                              clear
                              cat /proc/version | grep "Debian" >> /dev/null
                              if [ $? -eq 0 ]; then
				   clear
				   echo "OS = Debian"
				   echo "         COMMAND STATUS          "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                 Type"
				   echo "-----------------------------------------------------------------"
				   echo "$(which service)                     bos.sysmgt.service      exec"
				   echo "Command run: $(which service) bind9 start"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Starting BIND on system"
				   sleep 1
				   update_spinner
				   sleep 1
				   $(which service) bind9 start
				   if [ $? -eq 0 ]; then
                                        echo "#################################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly started BIND on system" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: $(which service) bind9 start" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "#################################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        echo "#################################################" >> /var/log/smx-log/fail.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					echo "[$(date)] Not started BIND on system, check command syntax" >> /var/log/smx-log/fail.log
					echo "[$(date)] Command run: $(which service) bind9 start" >> /var/log/smx-log/fail.log
					echo "" >> /var/log/smx-log/success.log
					echo "#################################################" >> /var/log/smx-log/fail.log
					echo "" >> /var/log/smx-log/fail.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/fail.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   fi          
                              else
				   clear
				   cat /proc/version | grep "Ubuntu" >> /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "         COMMAND STATUS          "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                 Type"
					echo "-----------------------------------------------------------------"
					echo "$(which service)                     bos.sysmgt.service      exec"
					echo "Command run: $(which service) bind9 start"
					update_spinner
					sleep 1
					update_spinner
					echo "Starting BIND on system"
					sleep 1
					update_spinner
					sleep 1
					$(which service) bind9 start
					if [ $? -eq 0 ]; then
                                             echo "#################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly started BIND on system" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: $(which service) bind9 start" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "#################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					else
                                             echo "#################################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not started BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: $(which service) bind9 start" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "#################################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					fi
				   else
                                        clear
					cat /proc/version | grep "SUSE" >> /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "         COMMAND STATUS           "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                 Type"
                                             echo "-----------------------------------------------------------------"
                                             echo "$(which service)                     bos.sysmgt.service      exec"
                                             echo "Command run: $(which service) named start"
					     update_spinner
					     sleep 1
					     update_spinner
					     echo "Starting BIND on system"
					     sleep 1
					     update_spinner
					     sleep 1
                                             $(which service) named start
                                             if [ $? -eq 0 ]; then
						  echo "################################################" >> /var/log/smx-log/success.log
						  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						  echo "[$(date)] Successfuly started BIND on system" >> /var/log/smx-log/success.log
						  echo "[$(date)] Command run: $(which service) named start" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  echo "################################################" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  clear
						  echo
						  cat /var/log/smx-log/success.log
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
                                             else
						  echo "################################################" >> /var/log/smx-log/fail.log
						  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						  echo "[$(date)] Not started BIND on system, check command syntax" >> /var/log/smx-log/fail.log
						  echo "[$(date)] Command run: $(which service) named start" >> /var/log/smx-log/fail.log
						  echo "" >> /var/log/smx-log/fail.log
						  echo "################################################" >> /var/log/smx-log/fail.log
						  echo "" >> /var/log/smx-log/fail.log
						  clear
						  echo
						  cat /var/log/smx-log/fail.log | tail -n 7
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
                                             fi          
					fi
				   fi
                              fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "OS = BSD"
			      echo "         COMMAND STATUS                 "
			      echo
			      echo "$(date)                                     $(whoami)@$(hostname)"
			      echo
			      echo "Command: RUNNING    stdout: yes    stderr: no     "
			      echo
			      echo "Before command completion, additional instructions may appear below"
			      echo
			      echo "File                                 Fileset                 Type"
			      echo "-----------------------------------------------------------------"
			      echo "/usr/local/etc/rc.d/named            bos.sysmgt.named        exec"
			      echo "Command run: /usr/local/etc/rc.d/named start"
			      update_spinner
			      sleep 1
			      update_spinner
			      echo "Starting BIND on system"
			      sleep 1
			      update_spinner
			      sleep 1
			      /usr/local/etc/rc.d/named start
			      if [ $? -eq 0 ]; then
				   echo "#######################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfully started bind" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: /usr/local/etc/rc.d/named start" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "#######################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      else
				   echo "#######################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not started bind, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: /usr/local/etc/rc.d/named start" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "#######################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to conitnue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
			      fi
			 else
			      $(which uname) | grep Darwin >> /dev/null
			      if [ $? -eq 0 ]; then
				   clear
				   echo "Feature not avaliable for OS X"
				   read -p "Press [enter] to continue..." ReadDamKey
				   dns_menu
			      fi
			 fi
		    fi
                    ;;
            stop)
                   clear
		   $(which uname) | grep Linux >> /dev/null
		   if [ $? -eq 0 ]; then
		        clear
			echo "OS = Linux"
			cat /proc/version | grep "Red Hat" >> /dev/null
			if [ $? -eq 0 ]; then
                             clear
                             echo "OS = Red Hat"
                             echo "        COMMAND STATUS          "
                             echo
                             echo "$(date)                                     $(whoami)@$(hostname)"
                             echo
                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                             echo
                             echo "Before command completion, additional instructions may appear below"
                             echo
                             echo "File                                 Fileset                 Type"
                             echo "-----------------------------------------------------------------"
                             echo "$(which service)                     bos.sysmgt.service      exec"
                             echo "Command run: $(which service) named start"
                             update_spinner
                             sleep 1
                             update_spinner
                             echo "Stopping BIND on system"
                             sleep 1
                             update_spinner
                             sleep 1
                             $(which service) named stop
                             if [ $? -eq 0 ]; then
				  echo "####################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfuly stopped BIND on system" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: $(which service) named stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "####################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             else
				  echo "####################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped BIND on system, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: $(which system) named stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "####################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
                             fi          
			else
                             clear
                             cat /proc/version | grep "Debian" >> /dev/null
                             if [ $? -eq 0 ]; then
				  clear
				  echo "OS = Debian"
				  echo "         COMMAND STATUS          "
				  echo
				  echo "$(date)                                     $(whoami)@$(hostname)"
				  echo
				  echo "Command: RUNNING    stdout: yes    stderr: no     "
				  echo
				  echo "Before command completion, additional instructions may appear below"
				  echo
				  echo "File                                 Fileset                 Type"
				  echo "-----------------------------------------------------------------"
				  echo "$(which service)                     bos.sysmgt.service      exec"
				  echo "Command run: $(which service) bind9 stop"
				  update_spinner
				  sleep 1
				  update_spinner
				  echo "Stopping BIND on system"
				  sleep 1
				  update_spinner
				  sleep 1
				  $(which service) bind9 stop
				  if [ $? -eq 0 ]; then
                                       echo "#################################################" >> /var/log/smx-log/success.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Successfuly stopped BIND on system" >> /var/log/smx-log/success.log
                                       echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       echo "#################################################" >> /var/log/smx-log/success.log
                                       echo "" >> /var/log/smx-log/success.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/success.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  else
                                       echo "#################################################" >> /var/log/smx-log/fail.log
                                       echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Not stopped BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                       echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/fail.log
                                       echo "#################################################" >> /var/log/smx-log/fail.log
                                       echo "" >> /var/log/smx-log/fail.log
                                       read -p "Press [enter] to continue..." ReadDamKey
                                       clear
                                       echo
                                       cat /var/log/smx-log/fail.log | tail -n 7
                                       echo
                                       read -p "Press [enter] to continue..." ReadDamKey
				  fi          
                             else
				  clear
				  cat /proc/version | grep "Ubuntu" >> /dev/null
				  if [ $? -eq 0 ]; then
                                       clear
                                       echo "OS = Ubuntu"
                                       echo "         COMMAND STATUS          "
                                       echo
                                       echo "$(date)                                     $(whoami)@$(hostname)"
                                       echo
                                       echo "Command: RUNNING    stdout: yes    stderr: no     "
                                       echo
                                       echo "Before command completion, additional instructions may appear below"
                                       echo
                                       echo "File                                 Fileset                 Type"
                                       echo "-----------------------------------------------------------------"
                                       echo "$(which service)                     bos.sysmgt.service      exec"
                                       echo "Command run: $(which service) bind9 stop"
                                       update_spinner
                                       sleep 1
                                       update_spinner
                                       echo "Stopping BIND on system"
                                       sleep 1
                                       update_spinner
                                       sleep 1
                                       $(which service) bind9 stop
                                       if [ $? -eq 0 ]; then
					    echo "#################################################" >> /var/log/smx-log/success.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					    echo "[$(date)] Successfuly stopped BIND on system" >> /var/log/smx-log/success.log
					    echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    echo "#################################################" >> /var/log/smx-log/success.log
					    echo "" >> /var/log/smx-log/success.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/success.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       else
					    echo "#################################################" >> /var/log/smx-log/fail.log
					    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Not stopped BIND on system, check command syntax" >> /var/log/smx-log/fail.log
					    echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/fail.log
					    echo "#################################################" >> /var/log/smx-log/fail.log
					    echo "" >> /var/log/smx-log/fail.log
					    read -p "Press [enter] to continue..." ReadDamKey
					    clear
					    echo
					    cat /var/log/smx-log/fail.log | tail -n 7
					    echo
					    read -p "Press [enter] to continue..." ReadDamKey
                                       fi
				  else
                                       clear
                                       cat /proc/version | grep "SUSE" >> /dev/null
                                       if [ $? -eq 0 ]; then
					    clear
					    echo "OS = SuSE"
					    echo "         COMMAND STATUS           "
					    echo
					    echo "$(date)                                     $(whoami)@$(hostname)"
					    echo
					    echo "Command: RUNNING    stdout: yes    stderr: no     "
					    echo
					    echo "Before command completion, additional instructions may appear below"
					    echo
					    echo "File                                 Fileset                 Type"
					    echo "-----------------------------------------------------------------"
					    echo "$(which service)                     bos.sysmgt.service      exec"
					    echo "Command run: $(which service) named stop"
					    update_spinner
					    sleep 1
					    update_spinner
					    echo "Stopping BIND on system"
					    sleep 1
					    update_spinner
					    sleep 1
					    $(which service) named start
					    if [ $? -eq 0 ]; then
						 echo "################################################" >> /var/log/smx-log/success.log
						 echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						 echo "[$(date)] Successfuly stopped BIND on system" >> /var/log/smx-log/success.log
						 echo "[$(date)] Command run: $(which service) named stop" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 echo "################################################" >> /var/log/smx-log/success.log
						 echo "" >> /var/log/smx-log/success.log
						 clear
						 echo
						 cat /var/log/smx-log/success.log
						 echo
						 read -p "Press [enter] to continue..." ReadDamKey
					    else
						 echo "################################################" >> /var/log/smx-log/fail.log
						 echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						 echo "[$(date)] Not stopped BIND on system, check command syntax" >> /var/log/smx-log/fail.log
						 echo "[$(date)] Command run: $(which service) named stop" >> /var/log/smx-log/fail.log
						 echo "" >> /var/log/smx-log/fail.log
						 echo "################################################" >> /var/log/smx-log/fail.log
						 echo "" >> /var/log/smx-log/fail.log
						 clear
						 echo
						 cat /var/log/smx-log/fail.log | tail -n 7
						 echo
						 read -p "Press [enter] to continue..." ReadDamKey
					    fi          
                                       fi
				  fi
                             fi
			fi
		   else
		        $(which uname) | grep BSD >> /dev/null
			if [ $? -eq 0 ]; then
			     clear
			     echo "OS = BSD"
			     echo "         COMMAND STATUS                               "
			     echo
			     echo "$(date)                                     $(whoami)@$(hostname)"
			     echo
			     echo "Command: RUNNING    stdout: yes    stderr: no     "
			     echo
			     echo "Before command completion, additional instructions may appear below"
			     echo
			     echo "File                                 Fileset                 Type"
			     echo "-----------------------------------------------------------------"
			     echo "/usr/local/etc/rc.d/named            bos.sysmgt.named        exec"
			     echo "Command run: /usr/local/etc/rc.d/named stop"
			     update_spinner
			     sleep 1
			     update_spinner
			     echo "Stopping BIND on system"
			     sleep 1
			     update_spinner
			     sleep 1
			     /usr/local/etc/rc.d/named stop
			     if [ $? -eq 0 ]; then
				  echo "########################################################" >> /var/log/smx-log/success.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				  echo "[$(date)] Successfully stopped bind" >> /var/log/smx-log/success.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/named stop" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  echo "########################################################" >> /var/log/smx-log/success.log
				  echo "" >> /var/log/smx-log/success.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/success.log | tail -n 7
				  echo
				  read -p "Press [enter] to continue..." ReadDamKey
			     else
				  echo "########################################################" >> /var/log/smx-log/fail.log
				  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Not stopped bind, check command syntax" >> /var/log/smx-log/fail.log
				  echo "[$(date)] Command run: /usr/local/etc/rc.d/named stop" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  echo "########################################################" >> /var/log/smx-log/fail.log
				  echo "" >> /var/log/smx-log/fail.log
				  read -p "Press [enter] to continue..." ReadDamKey
				  clear
				  echo
				  cat /var/log/smx-log/fail.log | tail -n 7
				  echo
				  read -p "Press [enter] to conitnue..." ReadDamKey
			     fi
			else
			     $(which uname) | grep Darwin >> /dev/null
			     if [ $? -eq 0 ]; then
				  clear
				  echo "Feature not avaliable for OS X"
				  read -p "Press [enter] to conitnue..." ReadDamKey
				  dns_menu
			     fi
			fi
		   fi
                   ;;
            restart) 
                      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "        COMMAND STATUS          "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which service)                     bos.sysmgt.service      exec"
				echo "Command run: $(which service) named start"
				update_spinner
				sleep 1
				update_spinner
				echo "Restarting BIND on system"
				sleep 1
				update_spinner
				sleep 1
				$(which service) named restart
				if [ $? -eq 0 ]; then
                                     echo "####################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly restarted BIND on system" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which service) named stop" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "####################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo "####################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not restarted BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which system) named stop" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "####################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				fi          
			   else
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "         COMMAND STATUS          "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                 Type"
                                     echo "-----------------------------------------------------------------"
                                     echo "$(which service)                     bos.sysmgt.service      exec"
                                     echo "Command run: $(which service) bind9 restart"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Restarting BIND on system"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which service) bind9 restart
                                     if [ $? -eq 0 ]; then
					  echo "#################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly restarted BIND on system" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "#################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo "#################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Not restarted BIND on system, check command syntax" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  echo "#################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     fi          
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "         COMMAND STATUS          "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                 Type"
					  echo "-----------------------------------------------------------------"
					  echo "$(which service)                     bos.sysmgt.service      exec"
					  echo "Command run: $(which service) bind9 restart"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Restarting BIND on system"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which service) bind9 restart
					  if [ $? -eq 0 ]; then
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly restarted BIND on system" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "#################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               echo "#################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not restarted BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which service) bind9 stop" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "#################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     else
					  clear
					  cat /proc/version | grep "SUSE" >> /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "         COMMAND STATUS           "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                 Type"
                                               echo "-----------------------------------------------------------------"
                                               echo "$(which service)                     bos.sysmgt.service      exec"
                                               echo "Command run: $(which service) named restart"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Restarting BIND on system"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which service) named restart
                                               if [ $? -eq 0 ]; then
                                                    echo "################################################" >> /var/log/smx-log/success.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Successfuly restarted BIND on system" >> /var/log/smx-log/success.log
                                                    echo "[$(date)] Command run: $(which service) named restart" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    echo "################################################" >> /var/log/smx-log/success.log
                                                    echo "" >> /var/log/smx-log/success.log
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/success.log
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               else
                                                    echo "################################################" >> /var/log/smx-log/fail.log
                                                    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Not restarted BIND on system, check command syntax" >> /var/log/smx-log/fail.log
                                                    echo "[$(date)] Command run: $(which service) named restart" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    echo "################################################" >> /var/log/smx-log/fail.log
                                                    echo "" >> /var/log/smx-log/fail.log
                                                    clear
                                                    echo
                                                    cat /var/log/smx-log/fail.log | tail -n 7
                                                    echo
                                                    read -p "Press [enter] to continue..." ReadDamKey
                                               fi          
					  fi
                                     fi
				fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "OS = BSD"
				echo "         COMMAND STATUS             "
				echo
				echo "$(date)                                     $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no     "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "/usr/local/etc/rc.d/named            bos.sysmgt.named        exec"
				echo "Command run: /usr/local/etc/rc.d/named restart"
				update_spinner
                                sleep 1
                                update_spinner
                                echo "Restarting BIND on system"
                                sleep 1
                                update_spinner
                                sleep 1
				update_spinner
				/usr/local/etc/rc.d/named restart
				if [ $? -eq 0 ]; then
				     echo "########################################################" >> /var/log/smx-log/success.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				     echo "[$(date)] Successfully restarted bind" >> /var/log/smx-log/success.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/named restart" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     echo "########################################################" >> /var/log/smx-log/success.log
				     echo "" >> /var/log/smx-log/success.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/success.log | tail -n 7
				     echo
				     read -p "Press [enter] to continue..." ReadDamKey
				else
				     echo "########################################################" >> /var/log/smx-log/fail.log
				     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Not restarted bind, check command syntax" >> /var/log/smx-log/fail.log
				     echo "[$(date)] Command run: /usr/local/etc/rc.d/named restart" >> /var/log/smx-log/fail.log
				     echo "" >> /var/log/smx-log/fail.log
				     echo "########################################################" >> /var/log/smx-log/fail.log
				     read -p "Press [enter] to continue..." ReadDamKey
				     clear
				     echo
				     cat /var/log/smx-log/fail.log | tail -n 7
				     echo
				     read -p "Press [enter] to conitnue..." ReadDamKey
				fi
			   else
			        $(which uname) | grep Darwin >> /dev/null
				if [ $? -eq 0 ]; then
				     clear
				     echo "Feature not avaliable for OS X"
				     read -p "Press [enter] to continue..." ReadDamKey
				     dns_menu
				fi
			   fi
		      fi
                      ;;
            chconfig)
                       clear
		       $(which uname) | grep Linux >> /dev/null
		       if [ $? -eq 0 ]; then
			    clear
			    echo "OS = Linux"
			    cat /proc/version | grep "Red Hat" >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
				 echo "OS = Red Hat"
				 echo "          COMMAND STATUS            "
				 echo
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo
				 echo "Command: RUNNING    stdout: yes    stderr: no     "
				 echo
				 echo "Before command completion, additional instructions may appear below"
				 echo
				 echo "File                                 Fileset                        Type"
				 echo "------------------------------------------------------------------------"
				 echo "$(which named-checkconf)             bos.sysmgt.named-checkconf     exec"
				 echo "Command run: $(which named-checkconf) /etc/named.conf"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Checking BIND configuration"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which named-checkconf) /etc/named.conf
				 if [ $? -eq 0 ]; then
                                      echo "#####################################################" >> /var/log/smx-log/success.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Successfuly checked BIND configuration file" >> /var/log/smx-log/success.log
                                      echo "[$(date)] Command run: $(which named-checkconf) /etc/named.conf" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      echo "#####################################################" >> /var/log/smx-log/success.log
                                      echo "" >> /var/log/smx-log/success.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/success.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
				 else
                                      echo "#########################################################" >> /var/log/smx-log/fail.log
                                      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Not checked BIND configuration file, check command syntax" >> /var/log/smx-log/fail.log
                                      echo "[$(date)] Command run: $(which named-checkconf) /etc/named.conf" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      echo "#########################################################" >> /var/log/smx-log/fail.log
                                      echo "" >> /var/log/smx-log/fail.log
                                      read -p "Press [enter] to continue..." ReadDamKey
                                      clear
                                      echo
                                      cat /var/log/smx-log/fail.log | tail -n 7
                                      echo
                                      read -p "Press [enter] to continue..." ReadDamKey
				 fi          
			    else
				 clear
				 cat /proc/version | grep "Debian" >> /dev/null
				 if [ $? -eq 0 ]; then
                                      clear
                                      echo "OS = Debian"
                                      echo "          COMMAND STATUS             "
                                      echo
                                      echo "$(date)                                     $(whoami)@$(hostname)"
                                      echo
                                      echo "Command: RUNNING    stdout: yes    stderr: no     "
                                      echo
                                      echo "Before command completion, additional instructions may appear below"
                                      echo
                                      echo "File                                 Fileset                         Type"
                                      echo "-------------------------------------------------------------------------"
                                      echo "$(which named-checkconf)             bos.sysmgt.named-checkconf      exec"
                                      echo "Command run: $(which named-checkconf) /etc/bind/named.conf.local"
                                      update_spinner
                                      sleep 1
                                      update_spinner
                                      echo "Checking BIND configuration"
                                      sleep 1
                                      update_spinner
                                      sleep 1
                                      $(which named-checkconf) /etc/bind/named.conf.local
                                      if [ $? -eq 0 ]; then
					   echo "################################################################" >> /var/log/smx-log/success.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					   echo "[$(date)] Successfuly checked BIND configuration file" >> /var/log/smx-log/success.log
					   echo "[$(date)] Command run: $(which named-checkconf) /etc/bind/named.conf.local" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   echo "################################################################" >> /var/log/smx-log/success.log
					   echo "" >> /var/log/smx-log/success.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      else
					   echo "#####################################################################" >> /var/log/smx-log/fail.log
					   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Not [$(date)] Successfuly checked BIND configuration file, check command syntax" >> /var/log/smx-log/fail.log
					   echo "[$(date)] Command run: $(which named-checkconf) /etc/bind/named.conf.local" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   echo "#####################################################################" >> /var/log/smx-log/fail.log
					   echo "" >> /var/log/smx-log/fail.log
					   read -p "Press [enter] to continue..." ReadDamKey
					   clear
					   echo
					   cat /var/log/smx-log/success.log | tail -n 7
					   echo
					   read -p "Press [enter] to continue..." ReadDamKey
                                      fi           
				 else
                                      clear
                                      cat /proc/version | grep "Ubuntu" >> /dev/null
                                      if [ $? -eq 0 ]; then
					   clear
					   echo "OS = Ubuntu"
					   echo "          COMMAND STATUS             "
					   echo
					   echo "$(date)                                     $(whoami)@$(hostname)"
					   echo
					   echo "Command: RUNNING    stdout: yes    stderr: no     "
					   echo
					   echo "Before command completion, additional instructions may appear below"
					   echo
					   echo "File                                 Fileset                         Type"
					   echo "-------------------------------------------------------------------------"
					   echo "$(which named-checkconf)             bos.sysmgt.named-checkconf      exec"
					   echo "Command run: $(which named-checkconf) /etc/bind/named.conf.local"
					   update_spinner
					   sleep 1
					   update_spinner
					   echo "Checking BIND configuration"
					   sleep 1
					   update_spinner
					   sleep 1
					   $(which named-checkconf) /etc/bind/named.conf.local
					   if [ $? -eq 0 ]; then
                                                echo "################################################################" >> /var/log/smx-log/success.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						echo "[$(date)] Successfuly checked BIND configuration file" >> /var/log/smx-log/success.log
						echo "[$(date)] Command run: $(which named-checkconf) /etc/bind/named.conf.local" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						echo "################################################################" >> /var/log/smx-log/success.log
						echo "" >> /var/log/smx-log/success.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
					   else
                                                echo "#####################################################################" >> /var/log/smx-log/fail.log
						echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						echo "[$(date)] Not Successfuly checked BIND configuration file, check command syntax" >> /var/log/smx-log/fail.log
						echo "[$(date)] Command run: $(which named-checkconf) /etc/bind/named.conf.local" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						echo "#####################################################################" >> /var/log/smx-log/fail.log
						echo "" >> /var/log/smx-log/fail.log
						read -p "Press [enter] to continue..." ReadDamKey
						clear
						echo
						cat /var/log/smx-log/success.log | tail -n 7
						echo
						read -p "Press [enter] to continue..." ReadDamKey
					   fi
                                      else
					   clear
					   cat /proc/version | grep "SUSE" >> /dev/null
					   if [ $? -eq 0 ]; then
                                                clear
						echo "OS = SuSE"
						echo "         COMMAND STATUS         "
						echo
						echo "$(date)                                     $(whoami)@$(hostname)"
						echo
						echo "Command: RUNNING    stdout: yes    stderr: no     "
						echo
						echo "Before command completion, additional instructions may appear below"
						echo
						echo "File                                  Fileset                       Type"
						echo "------------------------------------------------------------------------"
						echo "$(which named-checkconf)              bos.sysmgt.named-checkconf    exec"
						echo "Command run: $(which named-checkconf) /etc/named.conf"
						update_spinner
						sleep 1
						update_spinner
						echo "Checking BIND configuration"
						sleep 1
						update_spinner
						sleep 1
						$(which named-checkconf) /etc/named.conf
						if [ $? -eq 0 ]; then
                                                     echo "#####################################################" >> /var/log/smx-log/success.log
                                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Successfuly checked BIND configuration file" >> /var/log/smx-log/success.log
                                                     echo "[$(date)] Command run: $(which named-checkconf) /etc/named.conf" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     echo "#####################################################" >> /var/log/smx-log/success.log
                                                     echo "" >> /var/log/smx-log/success.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/success.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						else
                                                     echo "#########################################################" >> /var/log/smx-log/fail.log
                                                     echo "$(date):$(whoami)@$(hostname)" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Not checked BIND configuration file, check command syntax" >> /var/log/smx-log/fail.log
                                                     echo "[$(date)] Command run: $(which named-checkconf) /etc/named.conf" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     echo "#########################################################" >> /var/log/smx-log/fail.log
                                                     echo "" >> /var/log/smx-log/fail.log
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                                     clear
                                                     echo
                                                     cat /var/log/smx-log/fail.log | tail -n 7
                                                     echo
                                                     read -p "Press [enter] to continue..." ReadDamKey
						fi          
					   fi
                                      fi
				 fi
			    fi
		       else
			    $(which uname) | grep BSD >> /dev/null
			    if [ $? -eq 0 ]; then
				 clear
				 echo "OS = BSD"
				 echo "         COMMAND STATUS                 "
				 echo
				 echo "$(date)                                     $(whoami)@$(hostname)"
				 echo
				 echo "Command: RUNNING    stdout: yes    stderr: no     "
				 echo
				 echo "Before command completion, additional instructions may appear below"
				 echo
				 echo "File                                 Fileset                        Type"
				 echo "------------------------------------------------------------------------"
				 echo "$(which named-checkconf)             bos.sysmgt.named-checkconf     exec"
				 echo "Command run: $(which named-checkconf) /usr/local/etc/namedb/named.conf"
				 update_spinner
				 sleep 1
				 update_spinner
				 echo "Checking BIND configuration"
				 sleep 1
				 update_spinner
				 sleep 1
				 $(which named-checkconf) /usr/local/etc/namedb/named.conf
				 if [ $? -eq 0 ]; then
				      echo "################################################################################" >> /var/log/smx-log/success.log
				      echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				      echo "[$(date)] Successfully checked bind config file" >> /var/log/smx-log/success.log
				      echo "[$(date)] Command run: $(which named-checkconf) /usr/local/etc/namedb/named.conf" >> /var/log/smx-log/success.log
				      echo "" >> /var/log/smx-log/success.log
				      echo "################################################################################" >> /var/log/smx-log/success.log
				      echo "" >> /var/log/smx-log/success.log
				      read -p "Press [enter] to conitnue..." ReadDamKey
				      clear
				      echo
				      cat /var/log/smx-log/success.log | tail -n 7
				      echo
				      read -p "Press [enter] to continue..." ReadDamKey
				 else
				      echo "################################################################################" >> /var/log/smx-log/fail.log
				      echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				      echo "[$(date)] Not checked bind config file, check command syntax" >> /var/log/smx-log/fail.log
				      echo "[$(date)] Command run: $(which named-checkconf) /usr/local/etc/namedb/named.conf" >> /var/log/smx-log/fail.log
				      echo "" >> /var/log/smx-log/fail.log
				      echo "################################################################################" >> /var/log/smx-log/fail.log
				      echo "" >> /var/log/smx-log/fail.log
				      read -p "Press [enter] to conitnue..." ReadDamKey
				      clear
				      echo
				      cat /var/log/smx-log/fail.log | tail -n 7
				      echo
				      read -p "Press [enter] to conitnue..." ReadDamKey
				 fi
			    else
				 $(which uname) | grep Darwin >> /dev/null
				 if [ $? -eq 0 ]; then
				      clear
				      echo "Feature not avaliable for OS X"
				      read -p "Press [enter] to continue..." ReadDamKey
				      dns_menu
				 fi
			    fi
		       fi
                       ;;
            help)
                   echo "install > Install BIND on system"
                   echo "start > Start BIND service"
                   echo "stop > Stop BIND service"
                   echo "restart > Restart BIND service"
                   echo "chconfig > Check for syntax errors in BIND configuration file"
                   echo "help > This program"
                   echo "exit > Exit back to srv_menu"
                   echo "exit-mas > Exit back to shell"
                   read -p "Press [enter] to continue..." ReadDamKey
                   ;;            
            exit)
                   clear
                   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/bind_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "########################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
            exit-mas)
                       clear
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated $(basename $0)" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "        COMMAND STATUS        "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no        "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 5874 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}

function ms-ad_menu() {
    while :
    do
        clear
        echo "$(date)                                     $(whoami)@$(hostname)"
        echo
        read -p "$(whoami)@$(hostname):smx/ms-ad_menu # " choice_ad
        echo
    
        case "$choice_ad" in
            install)
                      clear
		      $(which uname) | grep Linux >> /dev/null
		      if [ $? -eq 0 ]; then
			   clear
			   echo "OS = Linux"
			   cat /proc/version | grep "Red Hat" >> /dev/null
			   if [ $? -eq 0 ]; then
                                clear
				echo "OS = Red Hat"
				echo "$(date)                                      $(whoami)@$(hostname)"
				echo "Active Directory domain name, short version, all caps example: EXAMPLE"
				echo "Active Directory domain name, long version, all caps example: EXAMPLE.COM"
				echo "Active Directory domain name, long version, lower case example: example.com"
				echo "Active Directory domain name security group example: linuxusers (space represented with \, ie, Power\ Users)"
				echo "Active Directory server fully qualified domain name example: ns1.example.com"
				echo "[TOP]                                                                  [Entry Fields]"
				read -p " Enter Active Directory domain name (short version, all caps) ------ > " adDomainLongLowerShort
				read -p " Enter Active Directory domain name (long version, all caps) ------- > " adDomainLong
				read -p " Enter Active Directory domain name (long version, lower case) ----- > " adDomainLongLower
				read -p " Enter Active Directory server IP address -------------------------- > " adIPAddr
				read -p " Enter Active Directory security group ----------------------------- > " adSecurityGroup
				read -p " Enter Active Directory server fully qualified domain name --------- > " adFqdnName
				read -p " Enter Active Directory server hostname ---------------------------- > " adHostName
				printf " Enter Active Directory domain administrator name [Admimistrator] --- > " 
				if [ "$ADAdmin" = "" ]; then
                                      ADADMIN=""
                                      read ADAdmin
                                      ADADMIN=$ADAdmin
				fi
				if [ "$ADADMIN" = "" ]; then
                                      ADADMIN=""
                                      ADADMIN=Administrator
				fi
				clear
				echo "            COMMAND STATUS                 "
				echo
				echo "$(date)                                      $(whoami)@$(hostname)"
				echo
				echo "Command: RUNNING    stdout: yes    stderr: no      "
				echo
				echo "Before command completion, additional instructions may appear below"
				echo
				echo "File                                 Fileset                 Type"
				echo "-----------------------------------------------------------------"
				echo "$(which yum)                         bos.sysmgt.yum          exec"
				echo "$(which authconfig)                  bos.sysmgt.authconfig   exec"
				echo "$(which kinit)                       bos.sysmgt.kinit        exec"
				echo "$(which ntpdate)                     bos.sysmgt.ntpdate      exec"
				echo "$(which net)                         bos.sysmgt.net          exec"
				echo "$(which mkdir)                       bos.sysmgt.mkdir        exec"
				echo "$(which chmod)                       bos.sysmgt.chmod        exec"
				echo "$(which chkconfig)                   bos.sysmgt.chkconfig    exec"
				echo "Command run: $(which yum) -y install authconfig krb5-workstation pam_krb5 samba-common oddjob-mkhomedir sudo ntp | $(which tee) /var/log/smx-log/yum.log"
				echo "Command run: $(which authconfig) --disablecache --enablewinbind --enablewinbindauth --smbsecurity=ads --smbworkgroup=$adDomainLongLowerShort --smbrealm=$adDomainLong --enablewinbindusedefaultdomain --winbindtemplatehomedir=/home/$adDomainLongLower/%U --winbindtemplateshell=/bin/bash --enablekrb5 --krb5realm=$adDomainLong --enablekrb5kdcdns --enablekrb5realmdns --enablelocauthorize --enablemkhomedir --enablepamaccess --updateall"
				echo "Command run: $(which kinit) $ADADMIN"
				echo "Command run: $(which ntpdate) $adIPAddr"
				echo "Command run: $(which net) ads join -U $ADADMIN -S $adFqdnName"
				echo "Command run: $(which net) testjoin"
				echo "Command run: $(which mkdir) -p /home/$adDomainLongLower/"
				echo "Command run: $(which chmod) 777 /home/$adDomainLongLower/"
				echo "Command run: $(which chkconfig) oddjobd on"
				echo "Command run: $(which chkconfig) winbind on"
				echo "Command run: $(which chkconfig) messagebus on"
				update_spinner
				sleep 1
				update_spinner
				echo "Adding system to Active Directory server"
				sleep 1
				update_spinner
				sleep 1
				$(which yum) -y install authconfig krb5-workstation pam_krb5 samba-common oddjob-mkhomedir sudo ntp | $(which tee) /var/log/smx-log/yum.log
				if [ $? -eq 0 ]; then
				     echo "#################################################################################################################################################################" >> /var/log/smx-log/success.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Successfuly downloaded files to add system to Active Directory" >> /var/log/smx-log/success.log
                                     echo "[$(date)] Command run: $(which yum) -y install authconfig krb5-workstation pam_krb5 samba-common oddjob-mkhomedir sudo ntp | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     echo "##################################################################################################################################################################" >> /var/log/smx-log/success.log
                                     echo "" >> /var/log/smx-log/success.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/success.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo "##################################################################################################################################################################" >> /var/log/smx-log/fail.log
                                     echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Not downloaded files to add system to Active Directory, check command syntax" >> /var/log/smx-log/fail.log
                                     echo "[$(date)] Command run: $(which yum) -y install authconfig krb5-workstation pam_krb5 samba-common oddjob-mkhomedir sudo ntp | $(which tee) /var/log/smx-log/yum.log" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     echo "##################################################################################################################################################################" >> /var/log/smx-log/fail.log
                                     echo "" >> /var/log/smx-log/fail.log
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     clear
                                     echo
                                     cat /var/log/smx-log/fail.log | tail -n 7
                                     echo
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
				fi
				$(which authconfig) --disablecache --enablewinbind --enablewinbindauth --smbsecurity=ads --smbworkgroup=$adDomainLongLowerShort --smbrealm=$adDomainLong --enablewinbindusedefaultdomain --winbindtemplatehomedir=/home/$adDomainLongLower/%U --winbindtemplateshell=/bin/bash --enablekrb5 --krb5realm=$adDomainLong --enablekrb5kdcdns --enablekrb5realmdns --enablelocauthorize --enablemkhomedir --enablepamaccess --updateall
				mv /etc/krb5.conf /etc/krb5.conf.org
				echo "[logging]" >> /etc/krb5.conf
				echo " default = FILE:/var/log/krb5libs.log" >> /etc/krb5.conf
				echo " kdc = FILE:/var/log/krb5kdc.log" >> /etc/krb5.conf
				echo " admin_server = FILE:/var/log/kadmind.log" >> /etc/krb5.conf
				echo "" >> /etc/krb5.conf
				echo "[libdefaults]" >> /etc/krb5.conf
				echo " default_realm = $adDomainLong" >> /etc/krb5.conf
				echo " dns_lookup_realm = false" >> /etc/krb5.conf
				echo " dns_lookup_kdc = true" >> /etc/krb5.conf
				echo " ticket_lifetime = 24h" >> /etc/krb5.conf
				echo " renew_lifetime = 7d" >> /etc/krb5.conf
				echo " forwardable = true" >> /etc/krb5.conf
				echo "" >> /etc/krb5.conf
				echo "[realms]" >> /etc/krb5.conf
				echo " {$adDomainLong} = {" >> /etc/krb5.conf
				echo " admin_server = $adIPAddr:88" >> /etc/krb5.conf
				echo " kdc = $adIPAddr" >> /etc/krb5.conf
				echo " default_domain = $adDomainLongLower" >> /etc/krb5.conf
				echo " }" >> /etc/krb5.conf
				echo "" >> /etc/krb5.conf
				echo "[domain_realm]" >> /etc/krb5.conf
				echo ".$adDomainLongLower = $adDomainLong" >> /etc/krb5.conf
				echo "$adDomainLongLower = $adDomainLong" >> /etc/krb5.conf
				$(which kinit) $ADADMIN
				if [ $? -eq 0 ]; then
                                     echo "Kerberos ticket successfuly received"
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo "Kerberos ticket not received, check network connection, AD status and user credentials"
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
				fi          
				$(which ntpdate) $adIPAddr
				if [ $? -eq 0 ]; then
                                     echo "ntp update successful"
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo "ntp update failed, check AD IP Address, and system time on local system"
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
				fi          
				read -p "Use other DNS server (other than AD server)? (Y/N) > " ans_dns
				if [ "$ans_dns" = "Y" ]; then
                                      read -p "Enter DNS server IP address > " dnsIPAddr
                                      mv /etc/resolv.conf /etc/resolv.conf.org
                                      echo "domain $adDomainLongLower" >> /etc/resolv.conf
                                      echo "search $adDomainLongLower" >> /etc/resolv.conf
                                      echo "nameserver $adIPAddr" >> /etc/resolv.conf
                                      echo "nameserver $dnsIPAddr" >> /etc/resolv.conf
				else
                                      mv /etc/resolv.conf /etc/resolv.conf.org
                                      echo "domain $adDomainLongLower" >> /etc/resolv.conf
                                      echo "search $adDomainLongLower" >> /etc/resolv.conf
                                      echo "nameserver $adIPAddr" >> /etc/resolv.conf
				fi
				echo "$adIPAddr $adFqdnName $adHostName" >> /etc/hosts
				$(which net) ads join -U $ADADMIN -S $adFqdnName
				if [ $? -eq 0 ]; then
                                     echo
                                     echo "System has successfuly joined Active Directory domain"
                                     read -p "Press [enter] to continue..." ReadDamKey
				else
                                     echo
                                     echo "System has not been joined to Active Directory domain"
                                     read -p "Press [enter] to continue..." ReadDamKey
                                     exit 1
				fi
				$(which net) testjoin
				$(which mkdir) -p /home/$adDomainLongLower/
				$(which chmod) 777 /home/$adDomainLongLower/
				mv /etc/pam.d/system-auth /etc/pam.d/system-auth.org
				echo "#%PAM-1.0" >> /etc/pam.d/system-auth
				echo "auth required pam_env.so" >> /etc/pam.d/system-auth
				echo "auth sufficient pam_unix.so nullok try_first_pass" >> /etc/pam.d/system-auth
				echo "auth requisite pam_succeed_if.so uid >= 500 quiet" >> /etc/pam.d/system-auth
				echo "auth sufficient pam_krb5.so use_first_pass" >> /etc/pam.d/system-auth
				echo "auth required pam_deny.so" >> /etc/pam.d/system-auth
				echo "" >> /etc/pam.d/system-auth
				echo "account required pam_access.so" >> /etc/pam.d/system-auth
				echo "account required pam_unix.so broken_shadow" >> /etc/pam.d/system-auth
				echo "account [default=ignore success=1] pam_succeed_if.so uid < 16777216 quiet" >> /etc/pam.d/system-auth
				echo "account [default ban success=ignore] pam_succeed_if.so user ingroup $adSecurityGroup quiet" >> /etc/pam.d/system-auth
				echo "account sufficient pam_localuser.so" >> /etc/pam.d/system-auth
				echo "account [default=bad success=ok user_unknown=ignore] pam_krb5.so" >> /etc/pam.d/system-auth
				echo "account sufficient pam_localuser.so" >> /etc/pam.d/system-auth
				echo "account sufficient pam_succeed_if.so uid < 500 quiet" >> /etc/pam.d/system-auth
				echo "account [default=bad success=ok user_unknown=ignore] pam_krb5.so" >> /etc/pam.d/system-auth
				echo "account required pam_deny.so" >> /etc/pam.d/system-auth
				echo "" >> /etc/pam.d/system-auth
				echo "password requisite pam_cracklib.so try_first_pass retry=3 type=" >> /etc/pam.d/system-auth
				echo "password sufficient pam_unix.so sha512 shadow nullok try_first_pass use_authtok" >> /etc/pam.d/system-auth
				echo "password sufficient pam_krb5.so use_authtok" >> /etc/pam.d/system-auth
				echo "password required pam_deny.so" >> /etc/pam.d/system-auth
				echo "" >> /etc/pam.d/system-auth
				echo "session optional pam_keyinit.so revoke" >> /etc/pam.d/system-auth
				echo "session required pam_limits.so" >> /etc/pam.d/system-auth
				echo "session optional pam_oddjob_mkhomedir.so umask=0077" >> /etc/pam.d/system-auth
				echo "session [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid" >> /etc/pam.d/system-auth
				echo "session required pam_unix.so" >> /etc/pam.d/system-auth
				echo "session optional pam_krb5.so" >> /etc/pam.d/system-auth
				echo "$adDomainLong\\%$adSecurityGroup ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
				$(which chkconfig) oddjobd on
				$(which chkconfig) winbind on
				$(which chkconfig) messagebus
				echo
				echo "System has been successfuly joined to Active Directory domain, the system must now reboot"
				read -p "Reboot system [Y/N] > " ans_reboot
				if [ "$ans_reboot" = "Y" ]; then
                                      $(which reboot) -f --verbose; exit
				else
                                      echo "System will not reboot"
                                      read -p "Press [enter] to continue..." ReadDamKey
				fi            
			   else     
                                clear
				cat /proc/version | grep "Debian" >> /dev/null
				if [ $? -eq 0 ]; then
                                     clear
                                     echo "OS = Debian"
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo "Active Directory domain name, long version, all caps example: EXAMPLE.COM"
                                     echo "Active Directory domain name, long version, lower case example: example.com"
                                     echo "Active Directory domain name security group example: linuxusers (space represented with \, ie, Power\ Users)"
                                     echo "[TOP]                                                                        [Entry Fields]"
                                     read -p " Enter Active Directory domain name (Long version, caps) ----------------- > " adDomainLong
                                     read -p " Enter Active Directory domain name (Long version, lower case) ----------- > " adDomainLongLower
                                     read -p " Enter Active Directory server IP address -------------------------------- > " adIPAddr
                                     read -p " Enter Active Directory security group ----------------------------------- > " adSecurityGroup
                                     printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
                                     if [ "$ADAdmin" = "" ]; then
					   ADADMIN=""
					   read ADAdmin
					   ADADMIN=$ADAdmin
                                     fi
                                     if [ "$ADADMIN" = "" ]; then
					   ADADMIN=""
					   ADADMIN=Administrator
                                     fi
                                     clear
                                     echo "         COMMAND STATUS               "
                                     echo
                                     echo "$(date)                                     $(whoami)@$(hostname)"
                                     echo
                                     echo "Command: RUNNING    stdout: yes    stderr: no     "
                                     echo
                                     echo "Before command completion, additional instructions may appear below"
                                     echo
                                     echo "File                                 Fileset                        Type"
                                     echo "------------------------------------------------------------------------"
                                     echo "$(which wget)                        bos.sysmgt.wget                exec"
                                     echo "$(which chmod)                       bos.sysmgt.chmod               exec"
                                     echo "/opt/pbis/bin/domainjoin-cli         bos.sysmgt.domainjoin-cli      exec"
                                     echo "/opt/pbis/bin/config                 bos.sysmgt.config              exec"
                                     echo "/opt/pbis/bin/ad-cache               bos.sysmgt.ad-cache            exec"
                                     echo "Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp"
                                     echo "Command run: $(which chmod) a+x /tmp/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh"
                                     echo "Command run: /tmp/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh"
                                     echo "Command run: /opt/pbis/bin/domainjoin-cli join $adDomainLongLower $ADADMIN"
                                     echo "Command run: /opt/pbis/bin/config Requiremembershipof '$adDomainLongLower\\$adSecurityGroup'"
                                     echo "Command run: /opt/pbis/bin/config AssumeDefaultDomain true"
                                     echo "Command run: /opt/pbis/bin/config UserDomainPrefix $adDomainLongLower"
                                     echo "Command run: /opt/pbis/bin/config LoginShellTemplate /bin/bash"
                                     echo "Command run: /opt/pbis/bin/config HomeDirTemplate %H/%U"
                                     echo "Command run: /opt/pbis/bin/ad-cache --delete-all"
                                     update_spinner
                                     sleep 1
                                     update_spinner
                                     echo "Adding system to Active Directory server"
                                     sleep 1
                                     update_spinner
                                     sleep 1
                                     $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp
                                     if [ $? -eq 0 ]; then
					  echo "###################################################################################################################################################" >> /var/log/smx-log/success.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					  echo "[$(date)] Successfuly downloaded configuration script for Active Directory" >> /var/log/smx-log/success.log
					  echo "[$(date)] Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  echo "###################################################################################################################################################" >> /var/log/smx-log/success.log
					  echo "" >> /var/log/smx-log/success.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/success.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo "###################################################################################################################################################" >> /var/log/smx-log/fail.log
					  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Not downloaded configuration script for Active Directory, check command syntax" >> /var/log/smx-log/fail.log
					  echo "[$(date)] Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0-3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp">> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  echo "###################################################################################################################################################" >> /var/log/smx-log/fail.log
					  echo "" >> /var/log/smx-log/fail.log
					  read -p "Press [enter] to continue..." ReadDamKey
					  clear
					  echo
					  cat /var/log/smx-log/fail.log | tail -n 7
					  echo
					  read -p "Press [enter] to continue..." ReadDamKey
					  exit 1
                                     fi
                                     $(which chmod) a+x /tmp/pbis-open-8.3.0-3287.linux.`uname -m`.deb.sh
                                     /tmp/pbis-open-8.3.0-3287.linux.`uname -m`.deb.sh
                                     read -p "Use other DNS server (other than AD server)? (Y/N) > " ans_dns
                                     if [ "$ans_dns" = "Y" ]; then
					   read -p "Enter DNS server IP address > " dnsIPAddr
					   mv /etc/resolv.conf /etc/resolv.conf.org
					   echo "domain $adDomainLongLower" >> /etc/resolv.conf
					   echo "search $adDomainLongLower" >> /etc/resolv.conf
					   echo "nameserver $adIPAddr" >> /etc/resolv.conf
					   echo "nameserver $dnsIPAddr" >> /etc/resolv.conf
                                     else
					   mv /etc/resolv.conf /etc/resolv.conf.org
					   echo "domain $adDomainLongLower" >> /etc/resolv.conf
					   echo "search $adDomainLongLower" >> /etc/resolv.conf
					   echo "nameserver $adIPAddr" >> /etc/resolv.conf
                                     fi
                                     /opt/pbis/bin/domainjoin-cli join $adDomainLongLower $ADADMIN
                                     if [ $? -eq 0 ]; then
					  echo
					  echo "Successfuly joined Active Directory server: $adDomainLongLower"
					  read -p "Press [enter] to continue..." ReadDamKey
                                     else
					  echo
					  echo "Not joined Active Directory server: $adDomainLongLower"
					  read -p "Press [enter] to continue..." ReadDamKey
					  exit 1
                                     fi
                                     /opt/pbis/bin/config Requiremembershipof "$adDomainLongLower\\$adSecurityGroup"
                                     /opt/pbis/bin/config AssumeDefaultDomain true
                                     /opt/pbis/bin/config UserDomainPrefix $adDomainLongLower
                                     /opt/pbis/bin/config LoginShellTemplate /bin/bash
                                     /opt/pbis/bin/config HomeDirTemplate %H/%U
                                     /opt/pbis/bin/ad-cache --delete-all
                                     $(which sed) -i 'session sufficient pam_slass.so/session [success=ok default=ignore] pam_slass.so/g' /etc/pam.d/common-session
                                     echo "%$adDomainLong\\$adSecurityGroup ALL=(ALL:ALL) ALL" >> /etc/sudoers
                                     echo
                                     echo "System has been successfuly configured to access Active Directory, however the system must now reboot"
                                     read -p "Reboot system [Y/N]? > " ans_reboot
                                     if [ "$ans_reboot" = "" ]; then
					   $(which reboot) -f --verbose; exit
                                     else
					  echo "System will not reboot, system will not be able to authenticate auth Active Directory until next reboot"
					  read -p "Press [enter] to continue..." ReadDamKey
                                     fi           
				else
                                     clear
                                     cat /proc/version | grep "Ubuntu" >> /dev/null
                                     if [ $? -eq 0 ]; then
					  clear
					  echo "OS = Ubuntu"
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo "Active Directory domain name, long version, all caps example: EXAMPLE.COM"
					  echo "Active Directory domain name, long version, lower case example: example.com"
					  echo "Active Directory domain name security group example: linuxusers (space represented with \, ie, Power\ Users)"
					  echo "[TOP]                                                                        [Entry Fields]"
					  read -p " Enter Active Directory domain name (Long version, caps) ----------------- > " adDomainLong
					  read -p " Enter Active Directory domain name (Long version, lower case) ----------- > " adDomainLongLower
					  read -p " Enter Active Directory server IP address -------------------------------- > " adIPAddr
					  read -p " Enter Active Directory security group ----------------------------------- > " adSecurityGroup
					  printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
					  if [ "$ADAdmin" = "" ]; then
                                                ADADMIN=""
						read ADAdmin
						ADADMIN=$ADAdmin
					  fi
					  if [ "$ADADMIN" = "" ]; then
                                                ADADMIN=""
						ADADMIN=Administrator
					  fi
					  clear
					  echo "         COMMAND STATUS               "
					  echo
					  echo "$(date)                                     $(whoami)@$(hostname)"
					  echo
					  echo "Command: RUNNING    stdout: yes    stderr: no     "
					  echo
					  echo "Before command completion, additional instructions may appear below"
					  echo
					  echo "File                                 Fileset                        Type"
					  echo "------------------------------------------------------------------------"
					  echo "$(which wget)                        bos.sysmgt.wget                exec"
					  echo "$(which chmod)                       bos.sysmgt.chmod               exec"
					  echo "/opt/pbis/bin/domainjoin-cli         bos.sysmgt.domainjoin-cli      exec"
					  echo "/opt/pbis/bin/config                 bos.sysmgt.config              exec"
					  echo "/opt/pbis/bin/ad-cache               bos.sysmgt.ad-cache            exec"
					  echo "Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp"
					  echo "Command run: $(which chmod) a+x /tmp/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh"
					  echo "Command run: /tmp/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh"
					  echo "Command run: /opt/pbis/bin/domainjoin-cli join $adDomainLongLower $ADADMIN"
					  echo "Command run: /opt/pbis/bin/config Requiremembershipof '$adDomainLongLower\\$adSecurityGroup'"
					  echo "Command run: /opt/pbis/bin/config AssumeDefaultDomain true"
					  echo "Command run: /opt/pbis/bin/config UserDomainPrefix $adDomainLongLower"
					  echo "Command run: /opt/pbis/bin/config LoginShellTemplate /bin/bash"
					  echo "Command run: /opt/pbis/bin/config HomeDirTemplate %H/%U"
					  echo "Command run: /opt/pbis/bin/ad-cache --delete-all"
					  update_spinner
					  sleep 1
					  update_spinner
					  echo "Adding system to Active Directory server"
					  sleep 1
					  update_spinner
					  sleep 1
					  $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp
					  if [ $? -eq 0 ]; then
                                               echo "###################################################################################################################################################" >> /var/log/smx-log/success.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Successfuly downloaded configuration script for Active Directory" >> /var/log/smx-log/success.log
                                               echo "[$(date)] Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               echo "###################################################################################################################################################" >> /var/log/smx-log/success.log
                                               echo "" >> /var/log/smx-log/success.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/success.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               echo "###################################################################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Not downloaded configuration script for Active Directory, check command syntax" >> /var/log/smx-log/fail.log
                                               echo "[$(date)] Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.deb.sh --directory-prefix=/tmp" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               echo "###################################################################################################################################################" >> /var/log/smx-log/fail.log
                                               echo "" >> /var/log/smx-log/fail.log
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               clear
                                               echo
                                               cat /var/log/smx-log/fail.log | tail -n 7
                                               echo
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
					  fi
					  $(which chmod) a+x /tmp/pbis-open-8.3.0-3287.linux.`uname -m`.deb.sh
					  /tmp/pbis-open-8.3.0-3287.linux.`uname -m`.deb.sh
					  read -p "Use other DNS server (other than AD server)? (Y/N) > " ans_dns
					  if [ "$ans_dns" = "Y" ]; then
                                                read -p "Enter DNS server IP address > " dnsIPAddr
						mv /etc/resolv.conf /etc/resolv.conf.org
						echo "domain $adDomainLongLower" >> /etc/resolv.conf
						echo "search $adDomainLongLower" >> /etc/resolv.conf
						echo "nameserver $adIPAddr" >> /etc/resolv.conf
						echo "nameserver $dnsIPAddr" >> /etc/resolv.conf
					  else
                                                mv /etc/resolv.conf /etc/resolv.conf.org
						echo "domain $adDomainLongLower" >> /etc/resolv.conf
						echo "search $adDomainLongLower" >> /etc/resolv.conf
						echo "nameserver $adIPAddr" >> /etc/resolv.conf
					  fi
					  /opt/pbis/bin/domainjoin-cli join $adDomainLongLower $ADADMIN
					  if [ $? -eq 0 ]; then
                                               echo
                                               echo "Successfuly joined Active Directory server: $adDomainLongLower"
                                               read -p "Press [enter] to continue..." ReadDamKey
					  else
                                               echo
                                               echo "Not joined Active Directory server: $adDomainLongLower"
                                               read -p "Press [enter] to continue..." ReadDamKey
                                               exit 1
					  fi
					  /opt/pbis/bin/config Requiremembershipof "$adDomainLongLower\\$adSecurityGroup"
					  /opt/pbis/bin/config AssumeDefaultDomain true
					  /opt/pbis/bin/config UserDomainPrefix $adDomainLongLower
					  /opt/pbis/bin/config LoginShellTemplate /bin/bash
					  /opt/pbis/bin/config HomeDirTemplate %H/%U
					  /opt/pbis/bin/ad-cache --delete-all
					  $(which sed) -i 'session sufficient pam_slass.so/session [success=ok default=ignore] pam_slass.so/g' /etc/pam.d/common-session
					  echo "%$adDomainLong\\$adSecurityGroup ALL=(ALL:ALL) ALL" >> /etc/sudoers
					  echo
					  echo "System has been successfuly configured to access Active Directory, however the system must now reboot"
					  read -p "Reboot system [Y/N]? > " ans_reboot
					  if [ "$ans_reboot" = "" ]; then
                                                $(which reboot) -f --verbose; exit
					  else
                                               echo "System will not reboot, system will not be able to authenticate auth Active Directory until next reboot"
                                               read -p "Press [enter] to continue..." ReadDamKey
					  fi
                                     else
					  clear
					  cat /proc/version | grep "SUSE" > /dev/null
					  if [ $? -eq 0 ]; then
                                               clear
                                               echo "OS = SuSE"
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo "Active Directory domain name, long version, all caps example: EXAMPLE.COM"
                                               echo "Active Directory domain name, long version, lower case example: example.com"
                                               echo "Active Directory domain name security group example: linuxusers (space represented with \, ie, Power\ Users)"
                                               echo "[TOP]                                                                        [Entry Fields]"
                                               read -p " Enter Active Directory domain name (Long version, caps) ----------------- > " adDomainLong
                                               read -p " Enter Active Directory domain name (Long version, lower case) ----------- > " adDomainLongLower
                                               read -p " Enter Active Directory server IP address -------------------------------- > " adIPAddr
                                               read -p " Enter Active Directory security group ----------------------------------- > " adSecurityGroup
                                               printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
                                               if [ "$ADAdmin" = "" ]; then
                                                     ADADMIN=""
                                                     read ADAdmin
                                                     ADADMIN=$ADAdmin
                                               fi
                                               if [ "$ADADMIN" = "" ]; then
                                                     ADADMIN=""
                                                     ADADMIN=Administrator
                                               fi
                                               clear
                                               echo "         COMMAND STATUS              "
                                               echo
                                               echo "$(date)                                     $(whoami)@$(hostname)"
                                               echo
                                               echo "Command: RUNNING    stdout: yes    stderr: no     "
                                               echo
                                               echo "Before command completion, additional instructions may appear below"
                                               echo
                                               echo "File                                 Fileset                        Type"
                                               echo "------------------------------------------------------------------------"
                                               echo "$(which wget)                        bos.sysmgt.wget                exec"
                                               echo "$(which chmod)                       bos.sysmgt.chmod               exec"
                                               echo "/opt/pbis/bin/domainjoin-cli         bos.sysmgt.domainjoin-cli      exec"
                                               echo "/opt/pbis/bin/config                 bos.sysmgt.config              exec"
                                               echo "/opt/pbis/bin/ad-cache               bos.sysmgt.ad-cache            exec"
                                               echo "Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.rpm.sh --directory-prefix=/tmp"
                                               echo "Command run: $(which chmod) a+x /tmp/pbis-open-8.3.0.-3287.linux.`uname -m`.rpm.sh"
                                               echo "Command run: /tmp/pbis-open-8.3.0-3287.`uname -m`.rpm.sh"
                                               echo "Command run: /opt/pbis/bin/domainjoin-cli join $adDomainLongLower $ADADMIN"
                                               echo "Command run: /opt/pbis/bin/config Requiremembershipof '$adDomainLongLower\\$adSecurityGroup'"
                                               echo "Command run: /opt/pbis/bin/config AssumeDefaultDomain true"
                                               echo "Command run: /opt/pbis/bin/config UserDomainPrefix $adDomainLongLower"
                                               echo "Command run: /opt/pbis/bin/config LoginShellTemplate /bin/bash"
                                               echo "Command run: /opt/pbis/bin/config HomeDirTemplate %H/%U"
                                               echo "Command run: /opt/pbis/bin/ad-cache --delete-all"
                                               update_spinner
                                               sleep 1
                                               update_spinner
                                               echo "Adding system to Active Directory server"
                                               sleep 1
                                               update_spinner
                                               sleep 1
                                               $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.rpm.sh --directory-prefix=/tmp
                                               if [ $? -eq 0 ]; then
						    echo "####################################################################################################################################################" >> /var/log/smx-log/success.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						    echo "[$(date)] Successfuly downlaod Active Directory configuration script" >> /var/log/smx-log/smx-log/success.log
						    echo "[$(date)] Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.rpm.sh --directory-prefix=/tmp" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    echo "####################################################################################################################################################" >> /var/log/smx-log/success.log
						    echo "" >> /var/log/smx-log/success.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/success.log | tail -n 7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
                                               else
						    echo "####################################################################################################################################################" >> /var/log/smx-log/fail.log
						    echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Not downloaded Active Directory configuration script, check command syntax" >> /var/log/smx-log/fail.log
						    echo "[$(date)] Command run: $(which wget) http://download.beyondtrust.com/PBISO/8.3/pbis-open-8.3.0.3287.linux.`uname -m`.rpm.sh --directory-prefix=/tmp" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    echo "####################################################################################################################################################" >> /var/log/smx-log/fail.log
						    echo "" >> /var/log/smx-log/fail.log
						    read -p "Press [enter] to continue..." ReadDamKey
						    clear
						    echo
						    cat /var/log/smx-log/fail.log | tail -n  7
						    echo
						    read -p "Press [enter] to continue..." ReadDamKey
                                               fi
                                               $(which chmod) a+x /tmp/pbis-open-8.3.0.3287.linux.`uname -m`.rpm.sh
                                               /tmp/pbis-open-8.3.0.3287.linux.`uname -m`.rpm.sh
                                               read -p "Use other DNS server (other than AD server)? (Y/N) > " ans_dns
                                               if [ "$ans_dns" = "Y" ]; then
                                                     read -p "Enter DNS server IP address > " dnsIPAddr
                                                     mv /etc/resolv.conf /etc/resolv.conf.org
                                                     echo "domain $adDomainLongLower" >> /etc/resolv.conf
                                                     echo "search $adDomainLongLower" >> /etc/resolv.conf
                                                     echo "nameserver $adIPAddr" >> /etc/resolv.conf
                                                     echo "nameserver $dnsIPAddr" >> /etc/resolv.conf
                                               else
                                                     mv /etc/resolv.conf /etc/resolv.conf.org
                                                     echo "domain $adDomainLongLower" >> /etc/resolv.conf
                                                     echo "search $adDomainLongLower" >> /etc/resolv.conf
                                                     echo "nameserver $adIPAddr" >> /etc/resolv.conf
                                               fi 
                                               /opt/pbis/bin/domainjoin-cli join $adDomainLongLower $ADADMIN
                                               if [ $? -eq 0 ]; then
						    echo
						    echo "Successfuly joined Active Directory server"
                                               else
						    echo
						    echo "Not joined Active Directory server"
						    exit 1
                                               fi
                                               /opt/pbis/bin/config Requiremembershipof "$adDomainLongLower\\$adSecurityGroup"
                                               /opt/pbis/bin/config AssumeDefaultDomain true
                                               /opt/pbis/bin/config UserDomainPrefix $adDomainLongLower
                                               /opt/pbis/bin/config LoginShellTemplate /bin/bash
                                               /opt/pbis/bin/config HomeDirTemplate %H/%U
                                               /opt/pbis/bin/config ad-cache --delete-all
                                               $(which sed) -i 'session sufficient pam_slass.so/session [success=ok default=ignore] pam_slass.so/g' /etc/pam.d/common-session
                                               echo "%$adDomainLong\\$adSecurityGroup ALL=(ALL:ALL) ALL" >> /etc/sudoers
                                               echo
                                               echo "System has been successfuly configured to access Active Directory, however the system must now reboot"
                                               read -p "Reboot system [Y/N]? > " ans_reboot
                                               if [ "$ans_reboot" = "" ]; then
                                                     $(which reboot) -f --verbose; exit
                                               else
                                                     echo "System will not reboot, system will not be able to authenticate auth Active Directory until next reboot"
                                                     read -p "Press [enter] to continue..." ReadDamKey
                                               fi             
					  fi
                                     fi
				fi
			   fi
		      else
			   $(which uname) | grep BSD >> /dev/null
			   if [ $? -eq 0 ]; then
			        clear
				echo "Feature not avaliable for BSD"                 # Yet, hopefully, in a future release - it will be, if I can get kerberos and samba to stop acting like a bitch (and play nice together with the authentication), as I said, hopefully ;-)
				read -p "Press [enter] to continue..." ReadDamKey
				ms-ad_menu
			   else
			        $(which uname) | Darwin >> /dev/null
			        if [ $? -eq 0 ]; then
				    clear
				    echo "Feature not avaliable for OS X"
				    read -p "Press [enter] to continue..." ReadDamKey
				    ms-ad_menu
				fi
			   fi
		      fi     
                      ;;
            leave)
                    clear
		    $(which uname) | grep Linux >> /dev/null
		    if [ $? -eq 0 ]; then
			 clear
			 echo "OS = Linux"
			 cat /proc/version | grep "Red Hat" > /dev/null
			 if [ $? -eq 0 ]; then
                              clear
                              echo "OS = Red Hat"
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo "[TOP]                                                                        [Entry Fields]"
                              read -p " Enter Active Directory server fully qualified domain name --------------- > " adFqdnName
                              printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
                              if [ "$ADAdmin" = "" ]; then
				    ADADMIN=""
				    read ADAdmin
				    ADADMIN=$ADAdmin
                              fi
                              if [ "$ADADMIN" = "" ]; then
				    ADADMIN=""
				    ADADMIN=Administrator
                              fi
                              clear
                              echo "          COMMAND STATUS               "
                              echo
                              echo "$(date)                                     $(whoami)@$(hostname)"
                              echo
                              echo "Command: RUNNING    stdout: yes    stderr: no     "
                              echo
                              echo "Before command completion, additional instructions may appear below"
                              echo
                              echo "File                                 Fileset                        Type"
                              echo "------------------------------------------------------------------------"
                              echo "$(which net)                         bos.sysmgt.net                 exec"
                              echo "Command run: $(which net) ads leave -U $ADADMIN -S $adFqdnName"
                              update_spinner
                              sleep 1
                              update_spinner
                              echo "Leaving Active Directory domain"
                              sleep 1
                              update_spinner
                              sleep 1
                              $(which net) ads leave -U $ADADMIN -S $adFqdnName
                              if [ $? -eq 0 ]; then
				   echo "####################################################################################" >> /var/log/smx-log/success.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
				   echo "[$(date)] Successfuly removed system from Active Directory" >> /var/log/smx-log/success.log
				   echo "[$(date)] Command run: $(which net) ads leave -U $ADADMIN -S $adFqdnName" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   echo "####################################################################################" >> /var/log/smx-log/success.log
				   echo "" >> /var/log/smx-log/success.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/success.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
                              else
				   echo "####################################################################################" >> /var/log/smx-log/fail.log
				   echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Not removed system from Active Directory, check command syntax" >> /var/log/smx-log/fail.log
				   echo "[$(date)] Command run: $(which net) ads leave -U $ADADMIN -S $adFqdnName" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   echo "####################################################################################" >> /var/log/smx-log/fail.log
				   echo "" >> /var/log/smx-log/fail.log
				   read -p "Press [enter] to continue..." ReadDamKey
				   clear
				   echo
				   cat /var/log/smx-log/fail.log | tail -n 7
				   echo
				   read -p "Press [enter] to continue..." ReadDamKey
				   exit 1
                              fi          
                              rm -rf /etc/resolv.conf
                              mv /etc/resolv.conf.org /etc/resolv.conf
                              echo "System has been successfuly removed from Active Directory domain, /etc/resolv.conf has been restored"
                              echo "The system must be rebooted to complete configuration"
                              read -p "Reboot system [Y/N]? > " ans_reboot
                              if [ "$ans_reboot" = "Y" ]; then
				    $(which reboot) -f --verbose; exit
                              else
				    echo "System will not reboot"
                              fi                           
			 else     
                              clear
                              cat /proc/version | grep "Debian" > /dev/null
                              if [ $? -eq 0 ]; then
				   clear
				   echo "OS = Debian"
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo "[TOP]                                                                        [Entry Fields]"
				   printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
				   if [ "$ADAdmin" = "" ]; then
                                         ADADMIN=""
					 read ADAdmin
					 ADADMIN=$ADAdmin
				   fi
				   if [ "$ADADMIN" = "" ]; then
                                         ADADMIN=""
					 ADADMIN=Administrator
				   fi
				   clear
				   echo "          COMMAND STATUS               "
				   echo
				   echo "$(date)                                     $(whoami)@$(hostname)"
				   echo
				   echo "Command: RUNNING    stdout: yes    stderr: no     "
				   echo
				   echo "Before command completion, additional instructions may appear below"
				   echo
				   echo "File                                 Fileset                        Type"
				   echo "------------------------------------------------------------------------"
				   echo "/opt/pbis/bin/domainjoin-cli         bos.sysmgt.domainjoin-cli      exec"
				   echo "Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN"
				   update_spinner
				   sleep 1
				   update_spinner
				   echo "Leaving Active Directory domain"
				   sleep 1
				   update_spinner
				   sleep 1
				   /opt/pbis/bin/domainjoin-cli leave $ADADMIN
				   if [ $? -eq 0 ]; then
                                        echo "#####################################################################" >> /var/log/smx-log/success.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
					echo "[$(date)] Successfuly left Active Directory domain" >> /var/log/smx-log/success.log
					echo "[$(date)] Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					echo "#####################################################################" >> /var/log/smx-log/success.log
					echo "" >> /var/log/smx-log/success.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/success.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
				   else
                                        echo "#####################################################################" >> /var/log/smx-log/fail.log
					echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
					echo "[$(date)] Not left Active Directory domain, check command syntax" >> /var/log/smx-log/fail.log
					echo "[$(date)] Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN" >> /var/log/smx-log/fail.log
					echo "" >> /var/log/smx-log/fail.log
					echo "#####################################################################" >> /var/log/smx-log/fail.log
					echo "" >> /var/log/smx-log/fail.log
					read -p "Press [enter] to continue..." ReadDamKey
					clear
					echo
					cat /var/log/smx-log/fail.log | tail -n 7
					echo
					read -p "Press [enter] to continue..." ReadDamKey
					exit 1
				   fi
				   rm -rf /etc/resolv.conf
				   mv /etc/resolv.conf.org /etc/resolv.conf
				   echo "System has been successfuly removed from Active Directory domain, /etc/resolv.conf has been restored"
				   echo "The system must be rebooted to complete configuration"
				   echo "NOTE: This process only disables the AD account, you must now remove the account manually from AD"
				   read -p "Reboot system [Y/N]? > " ans_reboot
				   if [ "$ans_reboot" = "Y" ]; then
                                         $(which reboot) -f --verbose; exit
				   else
                                         echo "System will not reboot"
				   fi
                              else
				   clear
				   cat /proc/version | grep "Ubuntu" > /dev/null
				   if [ $? -eq 0 ]; then
                                        clear
					echo "OS = Ubuntu"
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo "[TOP]                                                                        [Entry Fields]"
					printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
					if [ "$ADAdmin" = "" ]; then
                                              ADADMIN=""
                                              read ADAdmin
                                              ADADMIN=$ADAdmin
					fi
					if [ "$ADADMIN" = "" ]; then
                                              ADADMIN=""
                                              ADADMIN=Administrator
					fi
					clear
					echo "          COMMAND STATUS               "
					echo
					echo "$(date)                                     $(whoami)@$(hostname)"
					echo
					echo "Command: RUNNING    stdout: yes    stderr: no     "
					echo
					echo "Before command completion, additional instructions may appear below"
					echo
					echo "File                                 Fileset                        Type"
					echo "------------------------------------------------------------------------"
					echo "/opt/pbis/bin/domainjoin-cli         bos.sysmgt.domainjoin-cli      exec"
					echo "Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN"
					update_spinner
					sleep 1
					update_spinner
					echo "Leaving Active Directory domain"
					sleep 1
					update_spinner
					sleep 1
					/opt/pbis/bin/domainjoin-cli leave $ADADMIN
					if [ $? -eq 0 ]; then
                                             echo "#####################################################################" >> /var/log/smx-log/success.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Successfuly left Active Directory domain" >> /var/log/smx-log/success.log
                                             echo "[$(date)] Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             echo "#####################################################################" >> /var/log/smx-log/success.log
                                             echo "" >> /var/log/smx-log/success.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/success.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
					else
                                             echo "#####################################################################" >> /var/log/smx-log/fail.log
                                             echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Not left Active Directory domain, check command syntax" >> /var/log/smx-log/fail.log
                                             echo "[$(date)] Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             echo "#####################################################################" >> /var/log/smx-log/fail.log
                                             echo "" >> /var/log/smx-log/fail.log
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             clear
                                             echo
                                             cat /var/log/smx-log/fail.log | tail -n 7
                                             echo
                                             read -p "Press [enter] to continue..." ReadDamKey
                                             exit 1
					fi
					rm -rf /etc/resolv.conf
					mv /etc/resolv.conf.org /etc/resolv.conf
					echo "System has been successfuly removed from Active Directory domain, /etc/resolv.conf has been restored"
					echo "The system must be rebooted to complete configuration"
					echo "NOTE: This process only disables the AD account, you must now remove the account manually from AD"
					read -p "Reboot system [Y/N]? > " ans_reboot
					if [ "$ans_reboot" = "Y" ]; then
                                              $(which reboot) -f --verbose; exit
					else
                                              echo "System will not reboot"
					fi
				   else
                                        clear
					cat /proc/version | grep "SUSE" > /dev/null
					if [ $? -eq 0 ]; then
                                             clear
                                             echo "OS = SuSE"
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo "[TOP]                                                                        [Entry Fields]"
                                             printf " Enter Active Directory domain administrator name [Admimistrator] --------- > " 
                                             if [ "$ADAdmin" = "" ]; then
						   ADADMIN=""
						   read ADAdmin
						   ADADMIN=$ADAdmin
                                             fi
                                             if [ "$ADAdmin" = "" ]; then
						   ADADMIN=""
						   ADADMIN=Administrator
                                             fi
                                             clear
                                             echo "          COMMAND STATUS               "
                                             echo
                                             echo "$(date)                                     $(whoami)@$(hostname)"
                                             echo
                                             echo "Command: RUNNING    stdout: yes    stderr: no     "
                                             echo
                                             echo "Before command completion, additional instructions may appear below"
                                             echo
                                             echo "File                                 Fileset                        Type"
                                             echo "------------------------------------------------------------------------"
                                             echo "/opt/pbis/bin/domainjoin-cli         bos.sysmgt.domainjoin-cli      exec"
                                             echo "Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN"
                                             update_spinner
                                             sleep 1
                                             update_spinner
                                             echo "Leaving Active Directory domain"
                                             sleep 1
                                             update_spinner
                                             sleep 1
                                             /opt/pbis/bin/domainjoin-cli leave $ADADMIN
                                             if [ $? -eq 0 ]; then
						  echo "#####################################################################" >> /var/log/smx-log/success.log
						  echo "Log file started at: $(date)" >> /var/log/smx-log/success.log
						  echo "[$(date)] Successfuly left Active Directory domain" >> /var/log/smx-log/success.log
						  echo "[$(date)] Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  echo "#####################################################################" >> /var/log/smx-log/success.log
						  echo "" >> /var/log/smx-log/success.log
						  read -p "Press [enter] to continue..." ReadDamKey
						  clear
						  echo
						  cat /var/log/smx-log/success.log | tail -n 7
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
                                             else
						  echo "#####################################################################" >> /var/log/smx-log/fail.log
						  echo "Log file started at: $(date)" >> /var/log/smx-log/fail.log
						  echo "[$(date)] Not left Active Directory domain, check command syntax" >> /var/log/smx-log/fail.log
						  echo "[$(date)] Command run: /opt/pbis/bin/domainjoin-cli leave $ADADMIN" >> /var/log/smx-log/fail.log
						  echo "" >> /var/log/smx-log/fail.log
						  echo "#####################################################################" >> /var/log/smx-log/fail.log
						  echo "" >> /var/log/smx-log/fail.log
						  read -p "Press [enter] to continue..." ReadDamKey
						  clear
						  echo
						  cat /var/log/smx-log/fail.log | tail -n 7
						  echo
						  read -p "Press [enter] to continue..." ReadDamKey
						  exit 1
                                             fi
                                             rm -rf /etc/resolv.conf
                                             mv /etc/resolv.conf.org /etc/resolv.conf
                                             echo "System has been successfuly removed from Active Directory domain, /etc/resolv.conf has been restored"
                                             echo "The system must be rebooted to complete configuration"
                                             echo "NOTE: This process only disables the AD account, you must now remove the account manually from AD"
                                             read -p "Reboot system [Y/N]? > " ans_reboot
                                             if [ "$ans_reboot" = "Y" ]; then
						   $(which reboot) -f --verbose; exit
                                             else
						   echo "System will not reboot"
                                             fi
					fi
				   fi
                              fi
			 fi
		    else
			 $(which uname) | grep BSD >> /dev/null
			 if [ $? -eq 0 ]; then
			      clear
			      echo "Feature not avaliable for BSD"
			      read -p "Press [enter] to continue..." ReadDamKey
			      ms-ad_menu
			 else
			      $(which uname) | grep Darwin >> /dev/null
			      if [ $? -eq 0 ]; then
				   clear
				   echo "Feature not avaliable for OS X"
				   read -p "Press [enter] to continue..." ReadDamKey
				   ms-ad_menu
			      fi
			 fi
		    fi    
                    ;;
            help)
                  echo "install > Install configuration software and add system to Active Directory domain"
                  echo "leave > Leave Active Directory domain"
                  echo "help > This menu"
                  echo "exit > Exit back to srv_menu"
                  echo "exit-mas > Exit back to shell"
                  read -p "Press [enter] to continue..." ReadDamKey
                  ;;         
            exit)
                   clear
                   echo "###################################################################" >> /var/log/smx-log/exit.log
                   echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                   echo "[$(date)] Successfuly terminated $(basename $0)/srv_menu/ms-ad_menu" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   echo "###################################################################" >> /var/log/smx-log/exit.log
                   echo "" >> /var/log/smx-log/exit.log
                   srv_menu
                   ;;
            exit-mas)
                       clear
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "Log file started at: $(date)" >> /var/log/smx-log/exit.log
                       echo "[$(date)] Successfuly terminated $(basename $0)" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       echo "#####################################" >> /var/log/smx-log/exit.log
                       echo "" >> /var/log/smx-log/exit.log
                       exit 0
                       ;;
            *)         clear
                       echo "        COMMAND STATUS        "
                       echo
                       echo "$(date)                                     $(whoami)@$(hostname)"
                       echo
                       echo "Command: FAIL    stdout: yes    stderr: no        "
                       echo
                       echo "Before command completion, additional instructions may appear below"
                       echo
                       echo "Unkonwn command, please consult the command list, executed with pid - 6843 (0x1)"
                       read -p "Press [enter] to continue..." ReadDamKey;;
        esac
    done
}        

case "$1" in
    --main-menu) main_menu;;
    --usrmgt) usr_menu;;
    --grpmgt) grp_menu;;
    --passmgt) passwd_menu;;
    --dskmgt) dsk_menu;;
    --sysmgt) sys_menu;;
    --srvmgt) srv_menu;;
    --apache) apache_menu;;
    --nfs) nfs_menu;;
    --nis) nis_menu;;
    --dhcp) dhcp_menu;;
    --sql) sql_menu;;
    --smb) smb_menu;;
    --vnc) vnc_menu;;
    --ssh) ssh_menu;;
    --snmp) snmp_menu;;
    --dns) dns_menu;;
    --ms-ad) ms-ad_menu;;
    --pkgmgt) pkg_menu;;
    --system-update) system_upd;;
    --ipmgt) ip_menu;;
    --firemgt) fire_menu;;
    --feedback)
	         clear
              	 read -p "Enter subject: " mail_sub
              	 read -p "Enter main text: " mail_text
              	 echo "$mail_text" | mail -s $mail_sub d.anderson1147@gmail.com
              	 exit 0
              	 ;;
    *) echo "Usage: $usage"
       exit 1
       ;;
esac
done

exit 0
